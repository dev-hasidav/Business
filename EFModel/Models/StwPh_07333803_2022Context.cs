using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace EFModel.Models
{
    public partial class StwPh_07333803_2022Context : DbContext
    {
        public StwPh_07333803_2022Context()
        {
        }

		public StwPh_07333803_2022Context(string connectionString)
		{
            //var optionsBuilder = new DbContextOptionsBuilder();
            //optionsBuilder.UseSqlServer(connectionString);
            ConnectionString = connectionString;
		}

		public StwPh_07333803_2022Context(DbContextOptions<StwPh_07333803_2022Context> options)
            : base(options)
        {
        }

        public string ConnectionString { get; set; }

        public virtual DbSet<Ad> Ad { get; set; }
        public virtual DbSet<Adcn> Adcn { get; set; }
        public virtual DbSet<Addodaci> Addodaci { get; set; }
        public virtual DbSet<Adgdpr> Adgdpr { get; set; }
        public virtual DbSet<Adhist> Adhist { get; set; }
        public virtual DbSet<AdhistVaz> AdhistVaz { get; set; }
        public virtual DbSet<Aducet> Aducet { get; set; }
        public virtual DbSet<Bp> Bp { get; set; }
        public virtual DbSet<Bppol> Bppol { get; set; }
        public virtual DbSet<Bv> Bv { get; set; }
        public virtual DbSet<Bvpol> Bvpol { get; set; }
        public virtual DbSet<CasRoz> CasRoz { get; set; }
        public virtual DbSet<CasRozPol> CasRozPol { get; set; }
        public virtual DbSet<Cert> Cert { get; set; }
        public virtual DbSet<CompoundQuery> CompoundQuery { get; set; }
        public virtual DbSet<Cp> Cp { get; set; }
        public virtual DbSet<Cpetapy> Cpetapy { get; set; }
        public virtual DbSet<Cpnahr> Cpnahr { get; set; }
        public virtual DbSet<Cpsmeny> Cpsmeny { get; set; }
        public virtual DbSet<Cpstrav> Cpstrav { get; set; }
        public virtual DbSet<Cpvydaje> Cpvydaje { get; set; }
        public virtual DbSet<Cpvyuct> Cpvyuct { get; set; }
        public virtual DbSet<Cpzalohy> Cpzalohy { get; set; }
        public virtual DbSet<DataBoxSent> DataBoxSent { get; set; }
        public virtual DbSet<DataStrg> DataStrg { get; set; }
        public virtual DbSet<DataStrgPzd> DataStrgPzd { get; set; }
        public virtual DbSet<Djjizdy> Djjizdy { get; set; }
        public virtual DbSet<Djridic> Djridic { get; set; }
        public virtual DbSet<Djvoz> Djvoz { get; set; }
        public virtual DbSet<Dm> Dm { get; set; }
        public virtual DbSet<Dmpohyb> Dmpohyb { get; set; }
        public virtual DbSet<Doc> Doc { get; set; }
        public virtual DbSet<DocDirs> DocDirs { get; set; }
        public virtual DbSet<Dopravci> Dopravci { get; set; }
        public virtual DbSet<Dotazy> Dotazy { get; set; }
        public virtual DbSet<DotazyPzd> DotazyPzd { get; set; }
        public virtual DbSet<Dph> Dph { get; set; }
        public virtual DbSet<Dphevd> Dphevd { get; set; }
        public virtual DbSet<Dphevdpol> Dphevdpol { get; set; }
        public virtual DbSet<Dphkh> Dphkh { get; set; }
        public virtual DbSet<Dphkhitems> Dphkhitems { get; set; }
        public virtual DbSet<Dphmoss> Dphmoss { get; set; }
        public virtual DbSet<Dphmossopravy> Dphmossopravy { get; set; }
        public virtual DbSet<Dphmosspodklady> Dphmosspodklady { get; set; }
        public virtual DbSet<Dphmosspol> Dphmosspol { get; set; }
        public virtual DbSet<Dphobrat> Dphobrat { get; set; }
        public virtual DbSet<Dphprilohy> Dphprilohy { get; set; }
        public virtual DbSet<Dphsh> Dphsh { get; set; }
        public virtual DbSet<DphshcallOfStock> DphshcallOfStock { get; set; }
        public virtual DbSet<Dphshpodklady> Dphshpodklady { get; set; }
        public virtual DbSet<Dphshpol> Dphshpol { get; set; }
        public virtual DbSet<Eet> Eet { get; set; }
        public virtual DbSet<Eetprofil> Eetprofil { get; set; }
        public virtual DbSet<ElArchiv> ElArchiv { get; set; }
        public virtual DbSet<Eldp> Eldp { get; set; }
        public virtual DbSet<Eldppol> Eldppol { get; set; }
        public virtual DbSet<EmailsSent> EmailsSent { get; set; }
        public virtual DbSet<EmailsTmpl> EmailsTmpl { get; set; }
        public virtual DbSet<Eneschop> Eneschop { get; set; }
        public virtual DbSet<EneschopPobyt> EneschopPobyt { get; set; }
        public virtual DbSet<EneschopPol> EneschopPol { get; set; }
        public virtual DbSet<EneschopVychazky> EneschopVychazky { get; set; }
        public virtual DbSet<Enp> Enp { get; set; }
        public virtual DbSet<Enpitems> Enpitems { get; set; }
        public virtual DbSet<Epodani> Epodani { get; set; }
        public virtual DbSet<Fa> Fa { get; set; }
        public virtual DbSet<Fapol> Fapol { get; set; }
        public virtual DbSet<GlxRidicSkup> GlxRidicSkup { get; set; }
        public virtual DbSet<GlxsUcel> GlxsUcel { get; set; }
        public virtual DbSet<Hb> Hb { get; set; }
        public virtual DbSet<HistAllView> HistAllView { get; set; }
        public virtual DbSet<HistAllViewPol> HistAllViewPol { get; set; }
        public virtual DbSet<Ho> Ho { get; set; }
        public virtual DbSet<Hopol> Hopol { get; set; }
        public virtual DbSet<Hwhist> Hwhist { get; set; }
        public virtual DbSet<Hzupn> Hzupn { get; set; }
        public virtual DbSet<Hzupnpol> Hzupnpol { get; set; }
        public virtual DbSet<Hzupnpracoval> Hzupnpracoval { get; set; }
        public virtual DbSet<Im> Im { get; set; }
        public virtual DbSet<Imclen> Imclen { get; set; }
        public virtual DbSet<Immist> Immist { get; set; }
        public virtual DbSet<Imodpis> Imodpis { get; set; }
        public virtual DbSet<ImodpisM> ImodpisM { get; set; }
        public virtual DbSet<Impohyb> Impohyb { get; set; }
        public virtual DbSet<Impredm> Impredm { get; set; }
        public virtual DbSet<Imuodpis> Imuodpis { get; set; }
        public virtual DbSet<InsolvHist> InsolvHist { get; set; }
        public virtual DbSet<Iobchod> Iobchod { get; set; }
        public virtual DbSet<IobchodPol> IobchodPol { get; set; }
        public virtual DbSet<JPd> JPd { get; set; }
        public virtual DbSet<Kasa> Kasa { get; set; }
        public virtual DbSet<KasaEetprofil> KasaEetprofil { get; set; }
        public virtual DbSet<KasaFormUh> KasaFormUh { get; set; }
        public virtual DbSet<KasaHist> KasaHist { get; set; }
        public virtual DbSet<LgBulkOp> LgBulkOp { get; set; }
        public virtual DbSet<Lm> Lm { get; set; }
        public virtual DbSet<Lmdun> Lmdun { get; set; }
        public virtual DbSet<Lmspl> Lmspl { get; set; }
        public virtual DbSet<MphHist> MphHist { get; set; }
        public virtual DbSet<MphHistPol> MphHistPol { get; set; }
        public virtual DbSet<Mz> Mz { get; set; }
        public virtual DbSet<Mzdavky> Mzdavky { get; set; }
        public virtual DbSet<Mzdoklad> Mzdoklad { get; set; }
        public virtual DbSet<Mznahr> Mznahr { get; set; }
        public virtual DbSet<Mzsraz> Mzsraz { get; set; }
        public virtual DbSet<Mzvvz> Mzvvz { get; set; }
        public virtual DbSet<Mzzauct> Mzzauct { get; set; }
        public virtual DbSet<MzzivPoj> MzzivPoj { get; set; }
        public virtual DbSet<Nab> Nab { get; set; }
        public virtual DbSet<Nabpol> Nabpol { get; set; }
        public virtual DbSet<Nempri> Nempri { get; set; }
        public virtual DbSet<Nempripol> Nempripol { get; set; }
        public virtual DbSet<Obj> Obj { get; set; }
        public virtual DbSet<Objpol> Objpol { get; set; }
        public virtual DbSet<Onz> Onz { get; set; }
        public virtual DbSet<OnzduchPoj> OnzduchPoj { get; set; }
        public virtual DbSet<Onzpol> Onzpol { get; set; }
        public virtual DbSet<Onzprilohy> Onzprilohy { get; set; }
        public virtual DbSet<OprPoloz> OprPoloz { get; set; }
        public virtual DbSet<OprPolozPol> OprPolozPol { get; set; }
        public virtual DbSet<OverDphHist> OverDphHist { get; set; }
        public virtual DbSet<OverDphHistDat> OverDphHistDat { get; set; }
        public virtual DbSet<PCf> PCf { get; set; }
        public virtual DbSet<PCfpol> PCfpol { get; set; }
        public virtual DbSet<Pdb> Pdb { get; set; }
        public virtual DbSet<Pdbprilohy> Pdbprilohy { get; set; }
        public virtual DbSet<Ph> Ph { get; set; }
        public virtual DbSet<Phpol> Phpol { get; set; }
        public virtual DbSet<Phzauc> Phzauc { get; set; }
        public virtual DbSet<PInt> PInt { get; set; }
        public virtual DbSet<PIntpol> PIntpol { get; set; }
        public virtual DbSet<Pop> Pop { get; set; }
        public virtual DbSet<Poppol> Poppol { get; set; }
        public virtual DbSet<POs> POs { get; set; }
        public virtual DbSet<POsuSk> POsuSk { get; set; }
        public virtual DbSet<Pozastavky> Pozastavky { get; set; }
        public virtual DbSet<Ppdokl> Ppdokl { get; set; }
        public virtual DbSet<PpdoklPol> PpdoklPol { get; set; }
        public virtual DbSet<PPk> PPk { get; set; }
        public virtual DbSet<PrenosList> PrenosList { get; set; }
        public virtual DbSet<PrenosPol> PrenosPol { get; set; }
        public virtual DbSet<PrisVykaz> PrisVykaz { get; set; }
        public virtual DbSet<PrisVykazy> PrisVykazy { get; set; }
        public virtual DbSet<PRozv> PRozv { get; set; }
        public virtual DbSet<PSaldo> PSaldo { get; set; }
        public virtual DbSet<PUd> PUd { get; set; }
        public virtual DbSet<Pvpoj> Pvpoj { get; set; }
        public virtual DbSet<Pvpojpol> Pvpojpol { get; set; }
        public virtual DbSet<PVysl> PVysl { get; set; }
        public virtual DbSet<PzdDel> PzdDel { get; set; }
        public virtual DbSet<PzdHist> PzdHist { get; set; }
        public virtual DbSet<PzdJ> PzdJ { get; set; }
        public virtual DbSet<Recent> Recent { get; set; }
        public virtual DbSet<RefAdskup> RefAdskup { get; set; }
        public virtual DbSet<RefPolToPol> RefPolToPol { get; set; }
        public virtual DbSet<Rekl> Rekl { get; set; }
        public virtual DbSet<ReklKomp> ReklKomp { get; set; }
        public virtual DbSet<ReklPredm> ReklPredm { get; set; }
        public virtual DbSet<ReklStav> ReklStav { get; set; }
        public virtual DbSet<RpSaldo> RpSaldo { get; set; }
        public virtual DbSet<RpZakmon> RpZakmon { get; set; }
        public virtual DbSet<RpZampodkl> RpZampodkl { get; set; }
        public virtual DbSet<RRozvahZ> RRozvahZ { get; set; }
        public virtual DbSet<RRozvZap> RRozvZap { get; set; }
        public virtual DbSet<RRozvZrd> RRozvZrd { get; set; }
        public virtual DbSet<RRozvZsc> RRozvZsc { get; set; }
        public virtual DbSet<RRozvZsi> RRozvZsi { get; set; }
        public virtual DbSet<RRvimpl> RRvimpl { get; set; }
        public virtual DbSet<Rvncinfo> Rvncinfo { get; set; }
        public virtual DbSet<RVysledZ> RVysledZ { get; set; }
        public virtual DbSet<RVyslZrd> RVyslZrd { get; set; }
        public virtual DbSet<RVyslZsc> RVyslZsc { get; set; }
        public virtual DbSet<RVyslZsi> RVyslZsi { get; set; }
        public virtual DbSet<SAdhis> SAdhis { get; set; }
        public virtual DbSet<SAdklic> SAdklic { get; set; }
        public virtual DbSet<SAdskup> SAdskup { get; set; }
        public virtual DbSet<SAnalytika> SAnalytika { get; set; }
        public virtual DbSet<SAnalytikaTyp> SAnalytikaTyp { get; set; }
        public virtual DbSet<SBanky> SBanky { get; set; }
        public virtual DbSet<SBi> SBi { get; set; }
        public virtual DbSet<SCin> SCin { get; set; }
        public virtual DbSet<SCkurs> SCkurs { get; set; }
        public virtual DbSet<SCkurspol> SCkurspol { get; set; }
        public virtual DbSet<SCmeny> SCmeny { get; set; }
        public virtual DbSet<SCrady> SCrady { get; set; }
        public virtual DbSet<SDicpover> SDicpover { get; set; }
        public virtual DbSet<SDp> SDp { get; set; }
        public virtual DbSet<SDph> SDph { get; set; }
        public virtual DbSet<SDphtp> SDphtp { get; set; }
        public virtual DbSet<Serv> Serv { get; set; }
        public virtual DbSet<Servpol> Servpol { get; set; }
        public virtual DbSet<ServPredm> ServPredm { get; set; }
        public virtual DbSet<ServStav> ServStav { get; set; }
        public virtual DbSet<SExtId> SExtId { get; set; }
        public virtual DbSet<SExtIdpol> SExtIdpol { get; set; }
        public virtual DbSet<SExtSys> SExtSys { get; set; }
        public virtual DbSet<SExtTools> SExtTools { get; set; }
        public virtual DbSet<SExtToolsLog> SExtToolsLog { get; set; }
        public virtual DbSet<SFormUh> SFormUh { get; set; }
        public virtual DbSet<SGdprDuvody> SGdprDuvody { get; set; }
        public virtual DbSet<SHospObd> SHospObd { get; set; }
        public virtual DbSet<SImo> SImo { get; set; }
        public virtual DbSet<SImopol> SImopol { get; set; }
        public virtual DbSet<SkAcn> SkAcn { get; set; }
        public virtual DbSet<SkAcnAd> SkAcnAd { get; set; }
        public virtual DbSet<SkAcnPol> SkAcnPol { get; set; }
        public virtual DbSet<SKasaMonitory> SKasaMonitory { get; set; }
        public virtual DbSet<SKasaMonitoryObraz> SKasaMonitoryObraz { get; set; }
        public virtual DbSet<SKasaMonitorySettings> SKasaMonitorySettings { get; set; }
        public virtual DbSet<SKasaOdlozPh> SKasaOdlozPh { get; set; }
        public virtual DbSet<SKasaOdlozPhpol> SKasaOdlozPhpol { get; set; }
        public virtual DbSet<SKasaSkzButton> SKasaSkzButton { get; set; }
        public virtual DbSet<SKasaSkzButtonPol> SKasaSkzButtonPol { get; set; }
        public virtual DbSet<SKasaUcty> SKasaUcty { get; set; }
        public virtual DbSet<SkCeny> SkCeny { get; set; }
        public virtual DbSet<SkCs> SkCs { get; set; }
        public virtual DbSet<SkCspol> SkCspol { get; set; }
        public virtual DbSet<SkEuro> SkEuro { get; set; }
        public virtual DbSet<SkKat> SkKat { get; set; }
        public virtual DbSet<Skmp> Skmp { get; set; }
        public virtual DbSet<Skmppol> Skmppol { get; set; }
        public virtual DbSet<Skmv> Skmv { get; set; }
        public virtual DbSet<Skmvlist> Skmvlist { get; set; }
        public virtual DbSet<Skmvpol> Skmvpol { get; set; }
        public virtual DbSet<SKodyPredmPln> SKodyPredmPln { get; set; }
        public virtual DbSet<SKonfig> SKonfig { get; set; }
        public virtual DbSet<SkParam> SkParam { get; set; }
        public virtual DbSet<SkParamList> SkParamList { get; set; }
        public virtual DbSet<Skpp> Skpp { get; set; }
        public virtual DbSet<Skpppol> Skpppol { get; set; }
        public virtual DbSet<Skpv> Skpv { get; set; }
        public virtual DbSet<Skpvpol> Skpvpol { get; set; }
        public virtual DbSet<SkRefKat> SkRefKat { get; set; }
        public virtual DbSet<SkRefObraz> SkRefObraz { get; set; }
        public virtual DbSet<SkRefOdkazy> SkRefOdkazy { get; set; }
        public virtual DbSet<SkRefParam> SkRefParam { get; set; }
        public virtual DbSet<SkrefParamList> SkrefParamList { get; set; }
        public virtual DbSet<SkRefSvazany> SkRefSvazany { get; set; }
        public virtual DbSet<SkRekl> SkRekl { get; set; }
        public virtual DbSet<SkReklpol> SkReklpol { get; set; }
        public virtual DbSet<SkSt> SkSt { get; set; }
        public virtual DbSet<SKsym> SKsym { get; set; }
        public virtual DbSet<Skz> Skz { get; set; }
        public virtual DbSet<SkzBuf> SkzBuf { get; set; }
        public virtual DbSet<SkzCn> SkzCn { get; set; }
        public virtual DbSet<SkzCnPol> SkzCnPol { get; set; }
        public virtual DbSet<SkzInv> SkzInv { get; set; }
        public virtual DbSet<SkzInvLst> SkzInvLst { get; set; }
        public virtual DbSet<SkzInvSeznamy> SkzInvSeznamy { get; set; }
        public virtual DbSet<SkzInvSeznamyPol> SkzInvSeznamyPol { get; set; }
        public virtual DbSet<SkzInvVc> SkzInvVc { get; set; }
        public virtual DbSet<SkzInvZc> SkzInvZc { get; set; }
        public virtual DbSet<SkzIoZbozi> SkzIoZbozi { get; set; }
        public virtual DbSet<SkzNc> SkzNc { get; set; }
        public virtual DbSet<SkzObj> SkzObj { get; set; }
        public virtual DbSet<SkzPhTmp> SkzPhTmp { get; set; }
        public virtual DbSet<SkzPoh> SkzPoh { get; set; }
        public virtual DbSet<SkzPol> SkzPol { get; set; }
        public virtual DbSet<SkzRecalcZ> SkzRecalcZ { get; set; }
        public virtual DbSet<SkzRefV> SkzRefV { get; set; }
        public virtual DbSet<SkzSkup> SkzSkup { get; set; }
        public virtual DbSet<SkzSkupPol> SkzSkupPol { get; set; }
        public virtual DbSet<SkzVc> SkzVc { get; set; }
        public virtual DbSet<SkzVchst> SkzVchst { get; set; }
        public virtual DbSet<SkzVcp> SkzVcp { get; set; }
        public virtual DbSet<SkzVcpoh> SkzVcpoh { get; set; }
        public virtual DbSet<SkzVnchist> SkzVnchist { get; set; }
        public virtual DbSet<SkzVntmp> SkzVntmp { get; set; }
        public virtual DbSet<SMj> SMj { get; set; }
        public virtual DbSet<Smlouvy> Smlouvy { get; set; }
        public virtual DbSet<SmsBrany> SmsBrany { get; set; }
        public virtual DbSet<SmsSent> SmsSent { get; set; }
        public virtual DbSet<SmsTmpl> SmsTmpl { get; set; }
        public virtual DbSet<SMzFond> SMzFond { get; set; }
        public virtual DbSet<SMzMist> SMzMist { get; set; }
        public virtual DbSet<SMzPoj> SMzPoj { get; set; }
        public virtual DbSet<SMzZivPj> SMzZivPj { get; set; }
        public virtual DbSet<SOdpOsoby> SOdpOsoby { get; set; }
        public virtual DbSet<SPlatidla> SPlatidla { get; set; }
        public virtual DbSet<SPlatidlaPol> SPlatidlaPol { get; set; }
        public virtual DbSet<SPrelom> SPrelom { get; set; }
        public virtual DbSet<SProvozovny> SProvozovny { get; set; }
        public virtual DbSet<SPtitul> SPtitul { get; set; }
        public virtual DbSet<SRecordLabels> SRecordLabels { get; set; }
        public virtual DbSet<SRegDphvEu> SRegDphvEu { get; set; }
        public virtual DbSet<SReklStav> SReklStav { get; set; }
        public virtual DbSet<SReklZpPredani> SReklZpPredani { get; set; }
        public virtual DbSet<SReklZpVyr> SReklZpVyr { get; set; }
        public virtual DbSet<SRp> SRp { get; set; }
        public virtual DbSet<SSklad> SSklad { get; set; }
        public virtual DbSet<SSkladCn> SSkladCn { get; set; }
        public virtual DbSet<SSkladD> SSkladD { get; set; }
        public virtual DbSet<SSkReklPosl> SSkReklPosl { get; set; }
        public virtual DbSet<SSkReklVyr> SSkReklVyr { get; set; }
        public virtual DbSet<SSmlouvy> SSmlouvy { get; set; }
        public virtual DbSet<SStavyZak> SStavyZak { get; set; }
        public virtual DbSet<SStr> SStr { get; set; }
        public virtual DbSet<SSzDpheu> SSzDpheu { get; set; }
        public virtual DbSet<SSzDpheupol> SSzDpheupol { get; set; }
        public virtual DbSet<STexty> STexty { get; set; }
        public virtual DbSet<Stwlock> Stwlock { get; set; }
        public virtual DbSet<STypFormUh> STypFormUh { get; set; }
        public virtual DbSet<SUcet> SUcet { get; set; }
        public virtual DbSet<SUsrAct> SUsrAct { get; set; }
        public virtual DbSet<SUsrAgS> SUsrAgS { get; set; }
        public virtual DbSet<SUsrAgSpzd> SUsrAgSpzd { get; set; }
        public virtual DbSet<SUsrFrm> SUsrFrm { get; set; }
        public virtual DbSet<SUsrSet> SUsrSet { get; set; }
        public virtual DbSet<SUsrSetPzd> SUsrSetPzd { get; set; }
        public virtual DbSet<SVp> SVp { get; set; }
        public virtual DbSet<SVppol> SVppol { get; set; }
        public virtual DbSet<SVpref> SVpref { get; set; }
        public virtual DbSet<SVpul> SVpul { get; set; }
        public virtual DbSet<SVpulpol> SVpulpol { get; set; }
        public virtual DbSet<SZak> SZak { get; set; }
        public virtual DbSet<SZakplan> SZakplan { get; set; }
        public virtual DbSet<SZeme> SZeme { get; set; }
        public virtual DbSet<SZpVyr> SZpVyr { get; set; }
        public virtual DbSet<TAd> TAd { get; set; }
        public virtual DbSet<TAddodaci> TAddodaci { get; set; }
        public virtual DbSet<TAdgdpr> TAdgdpr { get; set; }
        public virtual DbSet<TAdhist> TAdhist { get; set; }
        public virtual DbSet<TAducet> TAducet { get; set; }
        public virtual DbSet<TBv> TBv { get; set; }
        public virtual DbSet<TBvpol> TBvpol { get; set; }
        public virtual DbSet<TCp> TCp { get; set; }
        public virtual DbSet<TCpetapy> TCpetapy { get; set; }
        public virtual DbSet<TCpnahr> TCpnahr { get; set; }
        public virtual DbSet<TCpsmeny> TCpsmeny { get; set; }
        public virtual DbSet<TCpstrav> TCpstrav { get; set; }
        public virtual DbSet<TCpvydaje> TCpvydaje { get; set; }
        public virtual DbSet<TCpvyuct> TCpvyuct { get; set; }
        public virtual DbSet<TCpzalohy> TCpzalohy { get; set; }
        public virtual DbSet<TCsz> TCsz { get; set; }
        public virtual DbSet<Tdef> Tdef { get; set; }
        public virtual DbSet<TDjjizdy> TDjjizdy { get; set; }
        public virtual DbSet<TFa> TFa { get; set; }
        public virtual DbSet<TFapol> TFapol { get; set; }
        public virtual DbSet<THo> THo { get; set; }
        public virtual DbSet<THopol> THopol { get; set; }
        public virtual DbSet<TNab> TNab { get; set; }
        public virtual DbSet<TNabpol> TNabpol { get; set; }
        public virtual DbSet<TObj> TObj { get; set; }
        public virtual DbSet<TObjpol> TObjpol { get; set; }
        public virtual DbSet<TPh> TPh { get; set; }
        public virtual DbSet<TPhpol> TPhpol { get; set; }
        public virtual DbSet<TpInt> TpInt { get; set; }
        public virtual DbSet<TpIntpol> TpIntpol { get; set; }
        public virtual DbSet<TPop> TPop { get; set; }
        public virtual DbSet<TPoppol> TPoppol { get; set; }
        public virtual DbSet<TRekl> TRekl { get; set; }
        public virtual DbSet<TReklKomp> TReklKomp { get; set; }
        public virtual DbSet<TReklPredm> TReklPredm { get; set; }
        public virtual DbSet<TReklStav> TReklStav { get; set; }
        public virtual DbSet<TServ> TServ { get; set; }
        public virtual DbSet<TServpol> TServpol { get; set; }
        public virtual DbSet<TServPredm> TServPredm { get; set; }
        public virtual DbSet<TServStav> TServStav { get; set; }
        public virtual DbSet<TSkCeny> TSkCeny { get; set; }
        public virtual DbSet<TSkmp> TSkmp { get; set; }
        public virtual DbSet<TSkmppol> TSkmppol { get; set; }
        public virtual DbSet<TSkmv> TSkmv { get; set; }
        public virtual DbSet<TSkmvlist> TSkmvlist { get; set; }
        public virtual DbSet<TSkmvpol> TSkmvpol { get; set; }
        public virtual DbSet<TSkpp> TSkpp { get; set; }
        public virtual DbSet<TSkpppol> TSkpppol { get; set; }
        public virtual DbSet<TSkpv> TSkpv { get; set; }
        public virtual DbSet<TSkpvpol> TSkpvpol { get; set; }
        public virtual DbSet<TUhrDokl> TUhrDokl { get; set; }
        public virtual DbSet<TZasilky> TZasilky { get; set; }
        public virtual DbSet<TZasilkypol> TZasilkypol { get; set; }
        public virtual DbSet<UhradaFm> UhradaFm { get; set; }
        public virtual DbSet<Uhrady> Uhrady { get; set; }
        public virtual DbSet<UhrDokl> UhrDokl { get; set; }
        public virtual DbSet<Uz> Uz { get; set; }
        public virtual DbSet<Vazby> Vazby { get; set; }
        public virtual DbSet<Verze> Verze { get; set; }
        public virtual DbSet<Veta56Gitems> Veta56Gitems { get; set; }
        public virtual DbSet<VzZ> VzZ { get; set; }
        public virtual DbSet<Xml> Xml { get; set; }
        public virtual DbSet<Xmlpol> Xmlpol { get; set; }
        public virtual DbSet<Zalohy> Zalohy { get; set; }
        public virtual DbSet<Zam> Zam { get; set; }
        public virtual DbSet<ZampDet> ZampDet { get; set; }
        public virtual DbSet<ZampDov> ZampDov { get; set; }
        public virtual DbSet<ZampDovZapoc> ZampDovZapoc { get; set; }
        public virtual DbSet<ZampSra> ZampSra { get; set; }
        public virtual DbSet<Zamucet> Zamucet { get; set; }
        public virtual DbSet<ZamzivPoj> ZamzivPoj { get; set; }
        public virtual DbSet<Zasilky> Zasilky { get; set; }
        public virtual DbSet<ZasilkyPol> ZasilkyPol { get; set; }
        public virtual DbSet<ZaucDoklVaz> ZaucDoklVaz { get; set; }

        // Unable to generate entity type for table 'dbo.lgOBJpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgFA'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgFApol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgZasilky'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgZasilkypol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.ZAMzp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgBP'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgBPpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgSKz'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgSKzpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgSKPP'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgSKPPpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgSKPV'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.rqDPPP2'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgSKPVpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.rqDPPP'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgSKMV'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.rqDPPP551'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.rqDPPPNedanPol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgSKMVpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgSKMP'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.ItsStatZ'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.rpDPHKHpodklady'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.ItsHmotn'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgSKMPpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgRekl'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgReklpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.rpDPH'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgPH'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgPHpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgZAM'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgZAMpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.ElArchivHist'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgMZ'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgMZpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgDJvoz'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgDJvozpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgDJjizdy'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgDJjizdypol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgCP'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgCPpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgMAJ'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgMAJpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgGN'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.rpDPHKHlimit'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.rpDPHKHlimitZalohy'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgGNpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.rpDPHKHCheckDokl'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgCasRoz'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.rpDPHKHitems'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgCasRozpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgDPHKHitems'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgDPHSH'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.GlxDoklad'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgDPHKHitemspol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgDPHSHpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgZAK'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgPK'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgZAKpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgPKpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgAD'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgAnalytika'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgADpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgAnalytikapol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgBV'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgOprPoloz'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgBVpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgOprPolozpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgHO'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgHOpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgINT'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.NEMPRIprilohy'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgINTpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.Likv'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgNAB'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.ViesHist'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgNABpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgPOP'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgPOPpol'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.lgOBJ'. Please see the warning messages.

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
				//optionsBuilder.UseSqlServer("Data Source=192.168.122.177;Initial Catalog=StwPh_07333803_2022;User ID=sa;Password=!LQS+15426378.");
				optionsBuilder.UseSqlServer(ConnectionString);
			}
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Ad>(entity =>
            {
                entity.ToTable("AD");

                entity.HasIndex(e => e.Firma)
                    .HasName("xFirma");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_AD_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Adkredit)
                    .HasColumnName("ADKredit")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Adsplat)
                    .HasColumnName("ADSplat")
                    .HasColumnType("SHORT");

                entity.Property(e => e.Adtoler)
                    .HasColumnName("ADToler")
                    .HasColumnType("LONG");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatNar).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DataBox)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Funkce)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.GdprDatPostAkt).HasColumnType("datetime");

                entity.Property(e => e.GdprDatPostHist).HasColumnType("datetime");

                entity.Property(e => e.GdprDatPreAkt).HasColumnType("datetime");

                entity.Property(e => e.GdprDatPreHist).HasColumnType("datetime");

                entity.Property(e => e.GdprDatProAkt).HasColumnType("datetime");

                entity.Property(e => e.GdprDatProHist).HasColumnType("datetime");

                entity.Property(e => e.Gps)
                    .HasColumnName("GPS")
                    .HasMaxLength(38)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Icq)
                    .HasColumnName("ICQ")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.IoId)
                    .HasColumnName("IoID")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.KcObrat).HasColumnType("CURRENCY");

                entity.Property(e => e.KcObrat2).HasColumnType("CURRENCY");

                entity.Property(e => e.Klic)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Okres)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Osloveni)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ost1)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Ost2)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefOsoba).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcetFv)
                    .HasColumnName("RefUcetFV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.RelPkFp)
                    .HasColumnName("RelPkFP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPkFv)
                    .HasColumnName("RelPkFV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPohl).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSzDphskz)
                    .HasColumnName("RelSzDPHskz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDphfp)
                    .HasColumnName("RelTpDPHFP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDphfv)
                    .HasColumnName("RelTpDPHFV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpIo).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RodCisl)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Skupina)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Skype)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Smlouva)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Www)
                    .HasColumnName("WWW")
                    .HasMaxLength(96)
                    .IsUnicode(false);

                entity.Property(e => e.Zprava)
                    .HasMaxLength(64)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Adcn>(entity =>
            {
                entity.ToTable("ADcn");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.RefPol)
                    .HasName("xRefPol");

                entity.HasIndex(e => e.RelAgId)
                    .HasName("xRelAgID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cena).HasColumnType("CURRENCY");

                entity.Property(e => e.CenaPc)
                    .HasColumnName("CenaPC")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Nazev)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefStruct).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Sleva).HasColumnType("SINGLE");

                entity.Property(e => e.SlevaPc)
                    .HasColumnName("SlevaPC")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<Addodaci>(entity =>
            {
                entity.ToTable("ADdodaci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Addodaci)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rADdodaci");
            });

            modelBuilder.Entity<Adgdpr>(entity =>
            {
                entity.ToTable("ADgdpr");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatOdvolani).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefGdprDuvod).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Adgdpr)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rADgdpr");
            });

            modelBuilder.Entity<Adhist>(entity =>
            {
                entity.ToTable("ADhist");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Akce)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dopis).HasColumnType("MEMO");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Klic)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Ostatni)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddoc)
                    .HasColumnName("RefADdoc")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefDataBox).HasColumnType("LONG");

                entity.Property(e => e.RefEmail).HasColumnType("LONG");

                entity.Property(e => e.RefSms).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Termin).HasColumnType("datetime");

                entity.Property(e => e.Text1)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Text2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Text3)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Text4)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<AdhistVaz>(entity =>
            {
                entity.ToTable("ADhistVaz");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => e.RefHist)
                    .HasName("xRefHist");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefHist).HasColumnType("LONG");

                entity.HasOne(d => d.RefHistNavigation)
                    .WithMany(p => p.AdhistVaz)
                    .HasForeignKey(d => d.RefHist)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rADhistVaz");
            });

            modelBuilder.Entity<Aducet>(entity =>
            {
                entity.ToTable("ADucet");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.BankaNazev)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BankaObec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.BankaStat).HasColumnType("LONG");

                entity.Property(e => e.BankaUlice)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Popis)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Aducet)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rADucet");
            });

            modelBuilder.Entity<Bp>(entity =>
            {
                entity.ToTable("BP");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExport).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatSplat).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.EurCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RelTpBp)
                    .HasColumnName("RelTpBP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RequestId)
                    .HasColumnName("RequestID")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Sepa).HasColumnName("SEPA");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Udaj)
                    .HasMaxLength(48)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Bppol>(entity =>
            {
                entity.ToTable("BPpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.RelAgH)
                    .HasName("xRelAgH");

                entity.HasIndex(e => e.RelIdh)
                    .HasName("xRelIDH");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.BankaNazev)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BankaObec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.BankaStat).HasColumnType("LONG");

                entity.Property(e => e.BankaUlice)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DuvodPlatby)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.PlatTitul)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.PrijNazev)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.PrijObec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.PrijStat).HasColumnType("LONG");

                entity.Property(e => e.PrijUlice)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPoplUcet).HasColumnType("LONG");

                entity.Property(e => e.RelAgH).HasColumnType("LONG");

                entity.Property(e => e.RelIdh)
                    .HasColumnName("RelIDH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPoplTp).HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Bppol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rBPpol");
            });

            modelBuilder.Entity<Bv>(entity =>
            {
                entity.ToTable("BV");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.BankIdent)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatPlat).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcMu)
                    .HasColumnName("KcMU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcU).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LikvCm).HasColumnName("LikvCM");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelMobch).HasColumnType("LONG");

                entity.Property(e => e.RelObDph)
                    .HasColumnName("RelObDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObKh)
                    .HasColumnName("RelObKH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObMoss)
                    .HasColumnName("RelObMOSS")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObSh)
                    .HasColumnName("RelObSH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpBv)
                    .HasColumnName("RelTpBV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(96)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Vypis)
                    .HasMaxLength(11)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Bvpol>(entity =>
            {
                entity.ToTable("BVpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.JcbezDph)
                    .HasColumnName("JCbezDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpPrepl).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Bvpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rBVpol");
            });

            modelBuilder.Entity<CasRoz>(entity =>
            {
                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_CasRoz_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DoklCislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.DoklDatum).HasColumnType("datetime");

                entity.Property(e => e.DoklKc).HasColumnType("CURRENCY");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDoklPk).HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelIdpol)
                    .HasColumnName("RelIDPol")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPerCasRoz).HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZauctK).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CasRozPol>(entity =>
            {
                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatumKo)
                    .HasColumnName("DatumKO")
                    .HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcKorekce).HasColumnType("CURRENCY");

                entity.Property(e => e.KcUplat).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZustatek).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelPerCasRoz).HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelUzavreno).HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.CasRozPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rCasRoz");
            });

            modelBuilder.Entity<Cert>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CryptHash)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Data).HasColumnType("LONGBINARY");
            });

            modelBuilder.Entity<CompoundQuery>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.QueryDef).HasColumnType("LONGBINARY");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSubId)
                    .HasColumnName("RelSubID")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Cp>(entity =>
            {
                entity.ToTable("CP");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_CP_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CasOdj)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CasPrj)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CenyPhm).HasColumnName("CenyPHM");

                entity.Property(e => e.Cil).HasColumnType("MEMO");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatVyuct).HasColumnType("datetime");

                entity.Property(e => e.DatZauct).HasColumnType("datetime");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Odjezd)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OstZam)
                    .HasColumnName("OstZAM")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Prijezd)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.ProcPhm).HasColumnName("ProcPHM");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefRidic).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefVoz)
                    .HasColumnName("RefVOZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDrVoz).HasColumnType("LONG");

                entity.Property(e => e.RelGlxSkupSaz).HasColumnType("LONG");

                entity.Property(e => e.RelPhm)
                    .HasColumnName("RelPHM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpZam).HasColumnType("LONG");

                entity.Property(e => e.RelTypCp)
                    .HasColumnName("RelTypCP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypVoz).HasColumnType("LONG");

                entity.Property(e => e.RelZpDpr).HasColumnType("LONG");

                entity.Property(e => e.Ucel)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.HasOne(d => d.RefVozNavigation)
                    .WithMany(p => p.Cp)
                    .HasForeignKey(d => d.RefVoz)
                    .HasConstraintName("rDJvozCP");
            });

            modelBuilder.Entity<Cpetapy>(entity =>
            {
                entity.ToTable("CPEtapy");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CasDo)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CasKonPr)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CasOd)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CasPocPr)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.MistoDo)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.MistoOd)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelZeme).HasColumnType("LONG");

                entity.Property(e => e.RelZpDpr).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Cpetapy)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsGlxCPEtapy");
            });

            modelBuilder.Entity<Cpnahr>(entity =>
            {
                entity.ToTable("CPNahr");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.KcNahr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSazba).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stat)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Typ)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Cpnahr)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsGlxCPNahr");
            });

            modelBuilder.Entity<Cpsmeny>(entity =>
            {
                entity.ToTable("CPSmeny");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.KcNaMenu).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPopl).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZmeny)
                    .HasColumnName("KcZMeny")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCmna)
                    .HasColumnName("RefCMna")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCmpop)
                    .HasColumnName("RefCMPop")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCmz)
                    .HasColumnName("RefCMz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCmMn).HasColumnType("LONG");

                entity.Property(e => e.Smena)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Cpsmeny)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsGlxCPSmeny");
            });

            modelBuilder.Entity<Cpstrav>(entity =>
            {
                entity.ToTable("CPStrav");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cm)
                    .HasColumnName("CM")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.KcKapes).HasColumnType("CURRENCY");

                entity.Property(e => e.KcLegStr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSazba).HasColumnType("CURRENCY");

                entity.Property(e => e.KcStrav).HasColumnType("CURRENCY");

                entity.Property(e => e.Kratit).HasColumnType("LONG");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelZeme).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Cpstrav)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsGlxCPStrav");
            });

            modelBuilder.Entity<Cpvydaje>(entity =>
            {
                entity.ToTable("CPVydaje");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCena).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Misto)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Popis)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPlatb).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpVyd).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Cpvydaje)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsGlxCPVydaje");
            });

            modelBuilder.Entity<Cpvyuct>(entity =>
            {
                entity.ToTable("CPVyuct");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDopl).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNahDnu)
                    .HasColumnName("KcNahDNU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcNahr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSmeny).HasColumnType("CURRENCY");

                entity.Property(e => e.KcStrDnu)
                    .HasColumnName("KcStrDNU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcStrav).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVydaje).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVyuct).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCmkon)
                    .HasColumnName("RefCMKon")
                    .HasColumnType("LONG");

                entity.Property(e => e.Smena)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Cpvyuct)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsGlxCPVyuct");
            });

            modelBuilder.Entity<Cpzalohy>(entity =>
            {
                entity.ToTable("CPZalohy");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatVypl).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Doklad)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.KcZal).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Cpzalohy)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsGlxCPZalohy");
            });

            modelBuilder.Entity<DataBoxSent>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Attachments).HasColumnType("MEMO");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DataBoxId)
                    .HasColumnName("DataBoxID")
                    .HasColumnType("MEMO");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DeliveryDate).HasColumnType("datetime");

                entity.Property(e => e.Dorucenka).HasColumnType("LONGBINARY");

                entity.Property(e => e.LegTitleLaw).HasColumnType("LONG");

                entity.Property(e => e.LegTitlePar)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LegTitlePoint)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LegTitleSect)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LegTitleYear).HasColumnType("LONG");

                entity.Property(e => e.MsgId)
                    .HasColumnName("MsgID")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MsgNote)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RecipIdent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecipRefNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RefId)
                    .HasColumnName("RefID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.SenderId)
                    .HasColumnName("SenderID")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SenderIdent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SenderRefNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusDate).HasColumnType("datetime");

                entity.Property(e => e.StatusInfo)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.StatusIsds).HasColumnType("LONG");

                entity.Property(e => e.ToHands)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<DataStrg>(entity =>
            {
                entity.HasIndex(e => e.DataId)
                    .HasName("xDataID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DataId)
                    .HasColumnName("DataID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<DataStrgPzd>(entity =>
            {
                entity.HasIndex(e => e.DataId)
                    .HasName("xDataID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DataId)
                    .HasColumnName("DataID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Djjizdy>(entity =>
            {
                entity.ToTable("DJjizdy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cas)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CasP)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DatumP).HasColumnType("datetime");

                entity.Property(e => e.Kam)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNahr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPausal).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPhm)
                    .HasColumnName("KcPHM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kcl).HasColumnType("CURRENCY");

                entity.Property(e => e.KclVoz).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Misto)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Odkud)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pres).HasColumnType("MEMO");

                entity.Property(e => e.ProcPhm).HasColumnName("ProcPHM");

                entity.Property(e => e.RefRidic).HasColumnType("LONG");

                entity.Property(e => e.RefVoz)
                    .HasColumnName("RefVOZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ucel)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.VprIdCp)
                    .HasColumnName("VPrIdCP")
                    .HasColumnType("LONG");

                entity.Property(e => e.VprIdMzcesty)
                    .HasColumnName("VPrIdMZCesty")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefRidicNavigation)
                    .WithMany(p => p.Djjizdy)
                    .HasForeignKey(d => d.RefRidic)
                    .HasConstraintName("rsRidicJizdy");

                entity.HasOne(d => d.RefVozNavigation)
                    .WithMany(p => p.Djjizdy)
                    .HasForeignKey(d => d.RefVoz)
                    .HasConstraintName("rsVozJizdy");
            });

            modelBuilder.Entity<Djridic>(entity =>
            {
                entity.ToTable("DJridic");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cp)
                    .HasColumnName("CP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.PracDoba)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.PracTel)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Prijmeni)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefRidicSkup).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZam)
                    .HasColumnName("RefZAM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpZam).HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Titul)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.HasOne(d => d.RefStrNavigation)
                    .WithMany(p => p.Djridic)
                    .HasForeignKey(d => d.RefStr)
                    .HasConstraintName("rsSTRDJridic");
            });

            modelBuilder.Entity<Djvoz>(entity =>
            {
                entity.ToTable("DJvoz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatEvid).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatVyr).HasColumnType("datetime");

                entity.Property(e => e.DatZar).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PocetNaprav).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.ProcPhm).HasColumnName("ProcPHM");

                entity.Property(e => e.Provoz).HasColumnType("LONG");

                entity.Property(e => e.RelDrVoz).HasColumnType("LONG");

                entity.Property(e => e.RelOsvob).HasColumnType("LONG");

                entity.Property(e => e.RelPhm)
                    .HasColumnName("RelPHM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPoplatnik).HasColumnType("LONG");

                entity.Property(e => e.RelSnizSazby).HasColumnType("LONG");

                entity.Property(e => e.RelTypNo)
                    .HasColumnName("RelTypNO")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypVoz).HasColumnType("LONG");

                entity.Property(e => e.RelVozKod).HasColumnType("LONG");

                entity.Property(e => e.Spz)
                    .HasColumnName("SPZ")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Znacka)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Dm>(entity =>
            {
                entity.ToTable("DM");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_DM_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatLikv).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pocet).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefImclen)
                    .HasColumnName("RefIMclen")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefImmist)
                    .HasColumnName("RefIMmist")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDm)
                    .HasColumnName("RelTpDM")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<Dmpohyb>(entity =>
            {
                entity.ToTable("DMpohyb");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Pocet).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelTpPohDm)
                    .HasColumnName("RelTpPohDM")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Dmpohyb)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rDMpohyb");
            });

            modelBuilder.Entity<Doc>(entity =>
            {
                entity.ToTable("DOC");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Path)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.RefElArchivId)
                    .HasColumnName("RefElArchivID")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDocType).HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSubId)
                    .HasColumnName("RelSubID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Url).HasColumnType("MEMO");
            });

            modelBuilder.Entity<DocDirs>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Dir)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSubId)
                    .HasColumnName("RelSubID")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Dopravci>(entity =>
            {
                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_Dopravci_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.RelDopravce).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<Dotazy>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Filter).HasColumnType("MEMO");

                entity.Property(e => e.Popis)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelSubId)
                    .HasColumnName("RelSubID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sort)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SortRef)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<DotazyPzd>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Filter).HasColumnType("MEMO");

                entity.Property(e => e.Popis)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelSubId)
                    .HasColumnName("RelSubID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sort)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SortRef)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Dph>(entity =>
            {
                entity.ToTable("DPH");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDuvod).HasColumnType("datetime");

                entity.Property(e => e.DatOdevz).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Data).HasColumnType("LONGBINARY");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.KcDan).HasColumnType("CURRENCY");

                entity.Property(e => e.KcKracOdp).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOdpoc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZmena).HasColumnType("CURRENCY");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelDrDph)
                    .HasColumnName("RelDrDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelKodRoku).HasColumnType("LONG");

                entity.Property(e => e.RelObDph)
                    .HasColumnName("RelObDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<Dphevd>(entity =>
            {
                entity.ToTable("DPHEVD");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefDph)
                    .HasColumnName("RefDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelObEvd).HasColumnType("LONG");

                entity.Property(e => e.RelTypDphevd)
                    .HasColumnName("RelTypDPHEVD")
                    .HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<Dphevdpol>(entity =>
            {
                entity.ToTable("DPHEVDpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.DatZdPln).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjpln)
                    .HasColumnName("MJpln")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefIdsrc)
                    .HasColumnName("RefIDsrc")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefKodyPredmPln).HasColumnType("LONG");

                entity.Property(e => e.RefPolSrc).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefTpDph)
                    .HasColumnName("RefTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Dphevdpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rDPHEVD");
            });

            modelBuilder.Entity<Dphkh>(entity =>
            {
                entity.ToTable("DPHKH");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloJv)
                    .HasColumnName("CisloJV")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDuvod).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.EditTimeStamp).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelDrDphkh)
                    .HasColumnName("RelDrDPHKH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObKh)
                    .HasColumnName("RelObKH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Rodpoved)
                    .HasColumnName("ROdpoved")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<Dphkhitems>(entity =>
            {
                entity.ToTable("DPHKHitems");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.A1cislo)
                    .HasColumnName("A1Cislo")
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.A1dic)
                    .HasColumnName("A1DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.A1duzp)
                    .HasColumnName("A1DUZP")
                    .HasColumnType("datetime");

                entity.Property(e => e.A1kod)
                    .HasColumnName("A1Kod")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.A1relSzDph)
                    .HasColumnName("A1RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.A1taxBase)
                    .HasColumnName("A1TaxBase")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A2cislo)
                    .HasColumnName("A2Cislo")
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.A2dic)
                    .HasColumnName("A2DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.A2dppd)
                    .HasColumnName("A2DPPD")
                    .HasColumnType("datetime");

                entity.Property(e => e.A2group).HasColumnName("A2Group");

                entity.Property(e => e.A2tax1)
                    .HasColumnName("A2Tax1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A2tax2)
                    .HasColumnName("A2Tax2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A2tax3)
                    .HasColumnName("A2Tax3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A2taxBase1)
                    .HasColumnName("A2TaxBase1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A2taxBase2)
                    .HasColumnName("A2TaxBase2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A2taxBase3)
                    .HasColumnName("A2TaxBase3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A3cislo)
                    .HasColumnName("A3Cislo")
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.A3datNar)
                    .HasColumnName("A3DatNar")
                    .HasColumnType("datetime");

                entity.Property(e => e.A3dic)
                    .HasColumnName("A3DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.A3dup)
                    .HasColumnName("A3DUP")
                    .HasColumnType("datetime");

                entity.Property(e => e.A3jmeno)
                    .HasColumnName("A3Jmeno")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.A3misto)
                    .HasColumnName("A3Misto")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.A3taxExemption)
                    .HasColumnName("A3TaxExemption")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A4cislo)
                    .HasColumnName("A4Cislo")
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.A4dic)
                    .HasColumnName("A4DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.A4dppd)
                    .HasColumnName("A4DPPD")
                    .HasColumnType("datetime");

                entity.Property(e => e.A4kod)
                    .HasColumnName("A4Kod")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.A4tax1)
                    .HasColumnName("A4Tax1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A4tax2)
                    .HasColumnName("A4Tax2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A4tax3)
                    .HasColumnName("A4Tax3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A4taxBase1)
                    .HasColumnName("A4TaxBase1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A4taxBase2)
                    .HasColumnName("A4TaxBase2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A4taxBase3)
                    .HasColumnName("A4TaxBase3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A5tax1)
                    .HasColumnName("A5Tax1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A5tax2)
                    .HasColumnName("A5Tax2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A5tax3)
                    .HasColumnName("A5Tax3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A5taxBase1)
                    .HasColumnName("A5TaxBase1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A5taxBase2)
                    .HasColumnName("A5TaxBase2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.A5taxBase3)
                    .HasColumnName("A5TaxBase3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B1cislo)
                    .HasColumnName("B1Cislo")
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.B1dic)
                    .HasColumnName("B1DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.B1duzp)
                    .HasColumnName("B1DUZP")
                    .HasColumnType("datetime");

                entity.Property(e => e.B1kod)
                    .HasColumnName("B1Kod")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.B1tax1)
                    .HasColumnName("B1Tax1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B1tax2)
                    .HasColumnName("B1Tax2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B1tax3)
                    .HasColumnName("B1Tax3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B1taxBase1)
                    .HasColumnName("B1TaxBase1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B1taxBase2)
                    .HasColumnName("B1TaxBase2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B1taxBase3)
                    .HasColumnName("B1TaxBase3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B2cislo)
                    .HasColumnName("B2Cislo")
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.B2datum)
                    .HasColumnName("B2Datum")
                    .HasColumnType("datetime");

                entity.Property(e => e.B2dic)
                    .HasColumnName("B2DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.B2dppd)
                    .HasColumnName("B2DPPD")
                    .HasColumnType("datetime");

                entity.Property(e => e.B2ratio).HasColumnName("B2Ratio");

                entity.Property(e => e.B2tax1)
                    .HasColumnName("B2Tax1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B2tax2)
                    .HasColumnName("B2Tax2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B2tax3)
                    .HasColumnName("B2Tax3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B2taxBase1)
                    .HasColumnName("B2TaxBase1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B2taxBase2)
                    .HasColumnName("B2TaxBase2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B2taxBase3)
                    .HasColumnName("B2TaxBase3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B3tax1)
                    .HasColumnName("B3Tax1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B3tax2)
                    .HasColumnName("B3Tax2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B3tax3)
                    .HasColumnName("B3Tax3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B3taxBase1)
                    .HasColumnName("B3TaxBase1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B3taxBase2)
                    .HasColumnName("B3TaxBase2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.B3taxBase3)
                    .HasColumnName("B3TaxBase3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CisloKhdphorig)
                    .HasColumnName("CisloKHDPHOrig")
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatKhdphorig)
                    .HasColumnName("DatKHDPHOrig")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dicorig)
                    .HasColumnName("DICOrig")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.JmenoOrig)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Mamount)
                    .HasColumnName("MAmount")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.MistoOrig)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RatioKhdphorig).HasColumnName("RatioKHDPHOrig");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefTpDph)
                    .HasColumnName("RefTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelA4zdph)
                    .HasColumnName("RelA4ZDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelB2zdph)
                    .HasColumnName("RelB2ZDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelEdit).HasColumnType("LONG");

                entity.Property(e => e.RelMobch).HasColumnType("LONG");

                entity.Property(e => e.RelSekce).HasColumnType("LONG");

                entity.Property(e => e.RelStatus).HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTp).HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelVlivKhdph)
                    .HasColumnName("RelVlivKHDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Dphkhitems)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rDPHKH");
            });

            modelBuilder.Entity<Dphmoss>(entity =>
            {
                entity.ToTable("DPHMOSS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bic)
                    .HasColumnName("BIC")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Iban)
                    .HasColumnName("IBAN")
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.MossrefCislo)
                    .HasColumnName("MOSSRefCislo")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.OpravyCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PlneniCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Prijemce)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.RelDrDphmoss)
                    .HasColumnName("RelDrDPHMOSS")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObMoss)
                    .HasColumnName("RelObMOSS")
                    .HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<Dphmossopravy>(entity =>
            {
                entity.ToTable("DPHMOSSopravy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Amount).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelObMoss)
                    .HasColumnName("RelObMOSS")
                    .HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Zeme)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Dphmossopravy)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rDPHMOSSopravy");
            });

            modelBuilder.Entity<Dphmosspodklady>(entity =>
            {
                entity.ToTable("DPHMOSSpodklady");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.DatZdPlnPdoklad)
                    .HasColumnName("DatZdPlnPDoklad")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dodavatel)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DoklId)
                    .HasColumnName("DoklID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mjpol)
                    .HasColumnName("MJPol")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelMosstyp)
                    .HasColumnName("RelMOSSTyp")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpFak).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.StextPol)
                    .HasColumnName("STextPol")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Vat).HasColumnType("CURRENCY");

                entity.Property(e => e.VatBase).HasColumnType("CURRENCY");

                entity.Property(e => e.VatBaseEur)
                    .HasColumnName("VatBaseEUR")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.VatEur)
                    .HasColumnName("VatEUR")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Zeme)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Dphmosspodklady)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rDPHMOSSpodklady");
            });

            modelBuilder.Entity<Dphmosspol>(entity =>
            {
                entity.ToTable("DPHMOSSpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Dodavatel)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelMosstyp)
                    .HasColumnName("RelMOSSTyp")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Vat).HasColumnType("CURRENCY");

                entity.Property(e => e.VatBase).HasColumnType("CURRENCY");

                entity.Property(e => e.Zeme)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Dphmosspol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rDPHMOSS");
            });

            modelBuilder.Entity<Dphobrat>(entity =>
            {
                entity.ToTable("DPHObrat");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.Datum1).HasColumnType("datetime");

                entity.Property(e => e.Datum2).HasColumnType("datetime");

                entity.Property(e => e.Datum3).HasColumnType("datetime");

                entity.Property(e => e.Datum4).HasColumnType("datetime");

                entity.Property(e => e.DatumRef).HasColumnType("datetime");

                entity.Property(e => e.KcD).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMd)
                    .HasColumnName("KcMD")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcObrat).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext1)
                    .HasColumnName("SText1")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Stext2)
                    .HasColumnName("SText2")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.UcetStext)
                    .HasColumnName("UcetSText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Zdroj)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Dphprilohy>(entity =>
            {
                entity.ToTable("DPHprilohy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cesta)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Dphprilohy)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rDPHprilohy");
            });

            modelBuilder.Entity<Dphsh>(entity =>
            {
                entity.ToTable("DPHSH");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.KcPlneniCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelDrDphsh)
                    .HasColumnName("RelDrDPHSH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObSh)
                    .HasColumnName("RelObSH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<DphshcallOfStock>(entity =>
            {
                entity.ToTable("DPHSHCallOfStock");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Dicpuvodni)
                    .HasColumnName("DICpuvodni")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelKod).HasColumnType("LONG");

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.DphshcallOfStock)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rDPHSHCallOfStock");
            });

            modelBuilder.Entity<Dphshpodklady>(entity =>
            {
                entity.ToTable("DPHSHpodklady");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Zdroj)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Dphshpodklady)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rDPHSHpodklady");
            });

            modelBuilder.Entity<Dphshpol>(entity =>
            {
                entity.ToTable("DPHSHpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Pocet).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Dphshpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rDPHSH");
            });

            modelBuilder.Entity<Eet>(entity =>
            {
                entity.ToTable("EET");

                entity.HasIndex(e => e.DatTrzby)
                    .HasName("xDatTrzby");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bkp)
                    .HasColumnName("BKP")
                    .HasMaxLength(44)
                    .IsUnicode(false);

                entity.Property(e => e.CelkovaTrzba).HasColumnType("CURRENCY");

                entity.Property(e => e.CerpZuct).HasColumnType("CURRENCY");

                entity.Property(e => e.CestovniSluzba).HasColumnType("CURRENCY");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Dan1).HasColumnType("CURRENCY");

                entity.Property(e => e.Dan2).HasColumnType("CURRENCY");

                entity.Property(e => e.Dan3).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatOdeslani).HasColumnType("datetime");

                entity.Property(e => e.DatPrijeti).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatTrzby).HasColumnType("datetime");

                entity.Property(e => e.DatTrzbyPosun).HasColumnType("LONG");

                entity.Property(e => e.Dicpoplat)
                    .HasColumnName("DICPoplat")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Fik)
                    .HasColumnName("FIK")
                    .HasMaxLength(39)
                    .IsUnicode(false);

                entity.Property(e => e.HistorieLog).HasColumnType("MEMO");

                entity.Property(e => e.KodChyby).HasColumnType("LONG");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pkp)
                    .HasColumnName("PKP")
                    .HasColumnType("MEMO");

                entity.Property(e => e.PopisChyby)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PouziteZbozi1).HasColumnType("CURRENCY");

                entity.Property(e => e.PouziteZbozi2).HasColumnType("CURRENCY");

                entity.Property(e => e.PouziteZbozi3).HasColumnType("CURRENCY");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Provozovna).HasColumnType("LONG");

                entity.Property(e => e.RefCert).HasColumnType("LONG");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelRezim).HasColumnType("LONG");

                entity.Property(e => e.RelStavEet)
                    .HasColumnName("RelStavEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UrcenoCerpZuct).HasColumnType("CURRENCY");

                entity.Property(e => e.Uuid)
                    .HasColumnName("UUID")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.VerzeProt).HasColumnType("LONG");

                entity.Property(e => e.ZakladDan1).HasColumnType("CURRENCY");

                entity.Property(e => e.ZakladDan2).HasColumnType("CURRENCY");

                entity.Property(e => e.ZakladDan3).HasColumnType("CURRENCY");

                entity.Property(e => e.ZakladNepodlDph)
                    .HasColumnName("ZakladNepodlDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Zarizeni)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Eetprofil>(entity =>
            {
                entity.ToTable("EETProfil");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_EETProfil_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PocetPokusu).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Provozovna).HasColumnType("LONG");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Timeout).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Zarizeni)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ElArchiv>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelElArchiv).HasColumnType("LONG");

                entity.Property(e => e.RelTrackTyp).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Eldp>(entity =>
            {
                entity.ToTable("ELDP");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatPod).HasColumnType("datetime");

                entity.Property(e => e.DatPrij).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefStavDp)
                    .HasColumnName("RefStavDP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RespPoint)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Uloha)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Eldppol>(entity =>
            {
                entity.ToTable("ELDPpol");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cp)
                    .HasColumnName("CP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DatDo1).HasColumnType("datetime");

                entity.Property(e => e.DatDo2).HasColumnType("datetime");

                entity.Property(e => e.DatDo3).HasColumnType("datetime");

                entity.Property(e => e.DatDoD1).HasColumnType("datetime");

                entity.Property(e => e.DatDoD2).HasColumnType("datetime");

                entity.Property(e => e.DatNar).HasColumnType("datetime");

                entity.Property(e => e.DatOd1).HasColumnType("datetime");

                entity.Property(e => e.DatOd2).HasColumnType("datetime");

                entity.Property(e => e.DatOd3).HasColumnType("datetime");

                entity.Property(e => e.DatOdD1).HasColumnType("datetime");

                entity.Property(e => e.DatOdD2).HasColumnType("datetime");

                entity.Property(e => e.DatOdVco)
                    .HasColumnName("DatOdVCO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatOpr).HasColumnType("datetime");

                entity.Property(e => e.Dny1).HasColumnType("LONG");

                entity.Property(e => e.Dny2).HasColumnType("LONG");

                entity.Property(e => e.Dny3).HasColumnType("LONG");

                entity.Property(e => e.DobyOdec1).HasColumnType("LONG");

                entity.Property(e => e.DobyOdec2).HasColumnType("LONG");

                entity.Property(e => e.DobyOdec3).HasColumnType("LONG");

                entity.Property(e => e.Druh1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Druh2)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Err)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kod1)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Kod2)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Kod3)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Mes112r1).HasColumnName("Mes1_12R1");

                entity.Property(e => e.Mes112r2).HasColumnName("Mes1_12R2");

                entity.Property(e => e.Mes112r3).HasColumnName("Mes1_12R3");

                entity.Property(e => e.MistoNar)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Mr1)
                    .HasColumnName("MR1")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Mr2)
                    .HasColumnName("MR2")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Mr3)
                    .HasColumnName("MR3")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Posta)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Prijmeni)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefStavDp)
                    .HasColumnName("RefStavDP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefZampomer1)
                    .HasColumnName("RefZAMpomer1")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefZampomer2)
                    .HasColumnName("RefZAMpomer2")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefZampomer3)
                    .HasColumnName("RefZAMpomer3")
                    .HasColumnType("LONG");

                entity.Property(e => e.RodCisl)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Rozena)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Stat)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Titul)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.TypEldp)
                    .HasColumnName("TypELDP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.VylDoby1).HasColumnType("LONG");

                entity.Property(e => e.VylDoby2).HasColumnType("LONG");

                entity.Property(e => e.VylDoby3).HasColumnType("LONG");

                entity.Property(e => e.VymZakl1).HasColumnType("CURRENCY");

                entity.Property(e => e.VymZakl2).HasColumnType("CURRENCY");

                entity.Property(e => e.VymZakl3).HasColumnType("CURRENCY");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Eldppol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rMZELDPpol");
            });

            modelBuilder.Entity<EmailsSent>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Attachments).HasColumnType("MEMO");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.EmailAddress).HasColumnType("MEMO");

                entity.Property(e => e.EmailAddressBc)
                    .HasColumnName("EmailAddressBC")
                    .HasColumnType("MEMO");

                entity.Property(e => e.EmailAddressCc)
                    .HasColumnName("EmailAddressCC")
                    .HasColumnType("MEMO");

                entity.Property(e => e.EmailFrom).HasColumnType("MEMO");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Priority).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.StatusInfo)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasColumnType("MEMO");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EmailsTmpl>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Attachments).HasColumnType("MEMO");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.EmailAddress).HasColumnType("MEMO");

                entity.Property(e => e.EmailAddressBc)
                    .HasColumnName("EmailAddressBC")
                    .HasColumnType("MEMO");

                entity.Property(e => e.EmailAddressCc)
                    .HasColumnName("EmailAddressCC")
                    .HasColumnType("MEMO");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Priority).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasColumnType("MEMO");

                entity.Property(e => e.Subject)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Eneschop>(entity =>
            {
                entity.ToTable("ENeschop");

                entity.HasIndex(e => new { e.CisloRozhod, e.NullCheckCisloRozhod })
                    .HasName("IX_ENeschop_CisloRozhod")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloRozhod)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.CizCisPojSp)
                    .HasColumnName("CizCisPojSP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatNar).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NeschopDo).HasColumnType("datetime");

                entity.Property(e => e.NeschopK).HasColumnType("datetime");

                entity.Property(e => e.NeschopOd).HasColumnType("datetime");

                entity.Property(e => e.NullCheckCisloRozhod)
                    .HasColumnName("NullCheck_CisloRozhod")
                    .HasComputedColumnSql("(case when [CisloRozhod] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.PoznNotif)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Prijmeni)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RefZam).HasColumnType("LONG");

                entity.Property(e => e.RelDruhZ).HasColumnType("LONG");

                entity.Property(e => e.RelStavEnes)
                    .HasColumnName("RelStavENes")
                    .HasColumnType("LONG");

                entity.Property(e => e.RodCisl)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(38)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefZamNavigation)
                    .WithMany(p => p.Eneschop)
                    .HasForeignKey(d => d.RefZam)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rENeschopZam");
            });

            modelBuilder.Entity<EneschopPobyt>(entity =>
            {
                entity.ToTable("ENeschopPobyt");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Co)
                    .HasColumnName("CO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Cp)
                    .HasColumnName("CP")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatVznikNotif).HasColumnType("datetime");

                entity.Property(e => e.Dodatek)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodStatu)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Ulice)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.EneschopPobyt)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rENeschopPobyt");
            });

            modelBuilder.Entity<EneschopPol>(entity =>
            {
                entity.ToTable("ENeschopPol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloRozhod)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.CizCisPojSp)
                    .HasColumnName("CizCisPojSP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Colekar)
                    .HasColumnName("COLekar")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Cplekar)
                    .HasColumnName("CPLekar")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DatNar).HasColumnType("datetime");

                entity.Property(e => e.DatVznikNotif).HasColumnType("datetime");

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.IdPripadu)
                    .HasMaxLength(38)
                    .IsUnicode(false);

                entity.Property(e => e.Idnotifikace)
                    .HasColumnName("IDNotifikace")
                    .HasMaxLength(38)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.JmenoLekare)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.KodDruhZ)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.KodStatuLekar)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NazevDruhZ).HasColumnType("MEMO");

                entity.Property(e => e.NazevPzs)
                    .HasMaxLength(155)
                    .IsUnicode(false);

                entity.Property(e => e.NeschopDo).HasColumnType("datetime");

                entity.Property(e => e.NeschopK).HasColumnType("datetime");

                entity.Property(e => e.NeschopOd).HasColumnType("datetime");

                entity.Property(e => e.ObecLekar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PoznNotif)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Prijmeni)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Psclekar)
                    .HasColumnName("PSCLekar")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelDruhZ).HasColumnType("LONG");

                entity.Property(e => e.RelTpNotif).HasColumnType("LONG");

                entity.Property(e => e.RodCisl)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.UliceLekar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Verze)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Zmena)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.EneschopPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rENeschopPol");
            });

            modelBuilder.Entity<EneschopVychazky>(entity =>
            {
                entity.ToTable("ENeschopVychazky");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CasDo).HasColumnType("datetime");

                entity.Property(e => e.CasOd).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatVznikNotif).HasColumnType("datetime");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.EneschopVychazky)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rENeschopVychazky");
            });

            modelBuilder.Entity<Enp>(entity =>
            {
                entity.ToTable("ENP");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExport).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Enpitems>(entity =>
            {
                entity.ToTable("ENPitems");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatumDod).HasColumnType("datetime");

                entity.Property(e => e.DatumZapl).HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDokl).HasColumnType("CURRENCY");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelStatus).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Enpitems)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rENP");
            });

            modelBuilder.Entity<Epodani>(entity =>
            {
                entity.ToTable("EPodani");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatOdes).HasColumnType("datetime");

                entity.Property(e => e.DatPrij).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatStav).HasColumnType("datetime");

                entity.Property(e => e.DatVeta).HasColumnType("LONGBINARY");

                entity.Property(e => e.Dorucenka).HasColumnType("LONGBINARY");

                entity.Property(e => e.ElPodpis)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HistorieLog).HasColumnType("MEMO");

                entity.Property(e => e.IdentEp)
                    .HasColumnName("IdentEP")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.IdentEpps)
                    .HasColumnName("IdentEPps")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InterDo).HasColumnType("datetime");

                entity.Property(e => e.InterOd).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Popis)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefId)
                    .HasColumnName("RefID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruhEp)
                    .HasColumnName("RelDruhEP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObdobi).HasColumnType("LONG");

                entity.Property(e => e.RelSluzba).HasColumnType("LONG");

                entity.Property(e => e.RelStavEp)
                    .HasColumnName("RelStavEP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypEp)
                    .HasColumnName("RelTypEP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpusob).HasColumnType("LONG");

                entity.Property(e => e.RespPoint)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.RozsahleId)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RozsahlePw)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sestava).HasColumnType("LONGBINARY");

                entity.Property(e => e.Submit).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Vazba).HasColumnType("MEMO");
            });

            modelBuilder.Entity<Fa>(entity =>
            {
                entity.ToTable("FA");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.IsDocId)
                    .HasName("xIsDocID");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => e.RelTpFak)
                    .HasName("xRelTpFak");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_FA_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloKhdph)
                    .HasColumnName("CisloKHDPH")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloObj)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCastZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.CmLikvPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmP).HasColumnType("CURRENCY");

                entity.Property(e => e.CmPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.CmPupr)
                    .HasColumnName("CmPUpr")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmU).HasColumnType("CURRENCY");

                entity.Property(e => e.CmZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatArchiv).HasColumnType("datetime");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatKhdph)
                    .HasColumnName("DatKHDPH")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatLikv).HasColumnType("datetime");

                entity.Property(e => e.DatObj).HasColumnType("datetime");

                entity.Property(e => e.DatOdDph)
                    .HasColumnName("DatOdDPH")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatPrik).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatSplat).HasColumnType("datetime");

                entity.Property(e => e.DatSplatPozas).HasColumnType("datetime");

                entity.Property(e => e.DatStorn).HasColumnType("datetime");

                entity.Property(e => e.DatUcP).HasColumnType("datetime");

                entity.Property(e => e.DatVytEz)
                    .HasColumnName("DatVytEZ")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatZdPln).HasColumnType("datetime");

                entity.Property(e => e.DatZdPlnMoss)
                    .HasColumnName("DatZdPlnMOSS")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IsDocId)
                    .HasColumnName("IsDocID")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCastZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcKrzaloha)
                    .HasColumnName("KcKRZaloha")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.KcLikvPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.KcP).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrepl).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPreplCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPupr)
                    .HasColumnName("KcPUpr")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcU).HasColumnType("CURRENCY");

                entity.Property(e => e.KcUplat).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Kzapoctu)
                    .HasColumnName("KZapoctu")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Mossoprava).HasColumnName("MOSSOprava");

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.OrigKc1).HasColumnType("CURRENCY");

                entity.Property(e => e.OrigKc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdoklad)
                    .HasColumnName("PDoklad")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.PrijZprava)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefDopravci).HasColumnType("LONG");

                entity.Property(e => e.RefEetprofil)
                    .HasColumnName("RefEETProfil")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDobr).HasColumnType("LONG");

                entity.Property(e => e.RelDrFak).HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.RelMobch).HasColumnType("LONG");

                entity.Property(e => e.RelObDph)
                    .HasColumnName("RelObDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObKh)
                    .HasColumnName("RelObKH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObMoss)
                    .HasColumnName("RelObMOSS")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObSh)
                    .HasColumnName("RelObSH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelStavEet)
                    .HasColumnName("RelStavEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpFak).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.StornoEet).HasColumnName("StornoEET");

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.TiskFm).HasColumnName("TiskFM");

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");

                entity.Property(e => e.ZpOdpZal).HasColumnType("LONG");
            });

            modelBuilder.Entity<Fapol>(entity =>
            {
                entity.ToTable("FApol");

                entity.HasIndex(e => e.IsDocId)
                    .HasName("xIsDocID");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.IsDocId)
                    .HasColumnName("IsDocID")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.JcbezDph)
                    .HasColumnName("JCbezDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcKrozd)
                    .HasColumnName("KcKRozd")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpPrepl).HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SeskupVc).HasColumnName("SeskupVC");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Fapol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rFApol");
            });

            modelBuilder.Entity<GlxRidicSkup>(entity =>
            {
                entity.HasIndex(e => new { e.Skupina, e.NullCheckSkupina })
                    .HasName("IX_GlxRidicSkup_Skupina")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.NullCheckSkupina)
                    .HasColumnName("NullCheck_Skupina")
                    .HasComputedColumnSql("(case when [Skupina] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelGlxSkupSaz).HasColumnType("LONG");

                entity.Property(e => e.Sazba1).HasColumnType("CURRENCY");

                entity.Property(e => e.Sazba2).HasColumnType("CURRENCY");

                entity.Property(e => e.Sazba3).HasColumnType("CURRENCY");

                entity.Property(e => e.Skupina)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<GlxsUcel>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(48)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Hb>(entity =>
            {
                entity.ToTable("HB");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_HB_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefPpdokl)
                    .HasColumnName("RefPPDokl")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.RelHb).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<HistAllView>(entity =>
            {
                entity.HasIndex(e => e.OrigId)
                    .HasName("xOrigID");

                entity.HasIndex(e => e.RelZmAgId)
                    .HasName("xRelZmAgID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.OrigId)
                    .HasColumnName("OrigID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefId)
                    .HasColumnName("RefID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZmAgId)
                    .HasColumnName("RelZmAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZmTyp).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HistAllViewPol>(entity =>
            {
                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Log).HasColumnType("MEMO");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelZmTyp).HasColumnType("LONG");

                entity.Property(e => e.TabId)
                    .HasColumnName("TabID")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.HistAllViewPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rHistAllView");
            });

            modelBuilder.Entity<Ho>(entity =>
            {
                entity.ToTable("HO");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_HO_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatKhdph)
                    .HasColumnName("DatKHDPH")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatPlat).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatZdPln).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcMu)
                    .HasColumnName("KcMU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcU).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LikvCm).HasColumnName("LikvCM");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdoklad)
                    .HasColumnName("PDoklad")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefEetprofil)
                    .HasColumnName("RefEETProfil")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelMobch).HasColumnType("LONG");

                entity.Property(e => e.RelObDph)
                    .HasColumnName("RelObDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObKh)
                    .HasColumnName("RelObKH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObMoss)
                    .HasColumnName("RelObMOSS")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObSh)
                    .HasColumnName("RelObSH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelStavEet)
                    .HasColumnName("RelStavEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpHo)
                    .HasColumnName("RelTpHO")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.StornoEet).HasColumnName("StornoEET");

                entity.Property(e => e.TiskFm).HasColumnName("TiskFM");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Hopol>(entity =>
            {
                entity.ToTable("HOpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.JcbezDph)
                    .HasColumnName("JCbezDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SeskupVc).HasColumnName("SeskupVC");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.StextRp)
                    .HasColumnName("STextRP")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Hopol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rHOpol");
            });

            modelBuilder.Entity<Hwhist>(entity =>
            {
                entity.ToTable("HWhist");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelEvTp).HasColumnType("LONG");

                entity.Property(e => e.RelHwTp).HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Stav).HasColumnType("LONG");
            });

            modelBuilder.Entity<Hzupn>(entity =>
            {
                entity.ToTable("HZUPN");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatPod).HasColumnType("datetime");

                entity.Property(e => e.DatPrij).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefStavDp)
                    .HasColumnName("RefStavDP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelMesic).HasColumnType("LONG");

                entity.Property(e => e.RespPoint)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(38)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Uloha)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Hzupnpol>(entity =>
            {
                entity.ToTable("HZUPNpol");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.RefNeprit)
                    .HasName("xRefNeprit");

                entity.HasIndex(e => e.RefZam)
                    .HasName("xRefZAM");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloPotvrzeni)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DatNar).HasColumnType("datetime");

                entity.Property(e => e.DatumNavratuDoPrace).HasColumnType("datetime");

                entity.Property(e => e.DatumVystaveni).HasColumnType("datetime");

                entity.Property(e => e.DuvodNavratuDoPrace)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DuvodPisemnehoVystaveni)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Iczam)
                    .HasColumnName("ICZam")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.JmZam)
                    .HasMaxLength(144)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.KodOssz)
                    .HasColumnName("KodOSSZ")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MesicMz)
                    .HasColumnName("MesicMZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.NazevOssz)
                    .HasColumnName("NazevOSSZ")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PocetOdpracHodinPoslDenPd)
                    .HasColumnName("PocetOdpracHodinPoslDenPD")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.PoradCis).HasColumnType("LONG");

                entity.Property(e => e.PracovniDobaPoslDenPd)
                    .HasColumnName("PracovniDobaPoslDenPD")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.Prijmeni)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefNeprit).HasColumnType("LONG");

                entity.Property(e => e.RefStavDp)
                    .HasColumnName("RefStavDP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefZam)
                    .HasColumnName("RefZAM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RodCisl)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RokMz)
                    .HasColumnName("RokMZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.Titul)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Vszam)
                    .HasColumnName("VSZam")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Hzupnpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rHZUPNpol");
            });

            modelBuilder.Entity<Hzupnpracoval>(entity =>
            {
                entity.ToTable("HZUPNpracoval");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.RefPol)
                    .HasName("xRefPol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.PracovalDo).HasColumnType("datetime");

                entity.Property(e => e.PracovalOd).HasColumnType("datetime");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Hzupnpracoval)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rHZUPNpracoval1");
            });

            modelBuilder.Entity<Im>(entity =>
            {
                entity.ToTable("IM");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_IM_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatLikv).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatZar).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDanova).HasColumnType("CURRENCY");

                entity.Property(e => e.KcLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOdeps).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZust).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZustUcetni).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZv).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefImclen)
                    .HasColumnName("RefIMclen")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefImmist)
                    .HasColumnName("RefIMmist")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefImo)
                    .HasColumnName("RefIMO")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPoDatum).HasColumnType("LONG");

                entity.Property(e => e.RelSkOdp).HasColumnType("LONG");

                entity.Property(e => e.RelTpIm)
                    .HasColumnName("RelTpIM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpLik).HasColumnType("LONG");

                entity.Property(e => e.RelTpOdp).HasColumnType("LONG");

                entity.Property(e => e.RelZpPor).HasColumnType("LONG");

                entity.Property(e => e.RelZpVyr).HasColumnType("LONG");

                entity.Property(e => e.RokZvys).HasColumnType("SHORT");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.UcZust).HasColumnType("CURRENCY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Vyuziti)
                    .HasMaxLength(192)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Imclen>(entity =>
            {
                entity.ToTable("IMclen");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_IMclen_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Immist>(entity =>
            {
                entity.ToTable("IMmist");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_IMmist_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(42)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Imodpis>(entity =>
            {
                entity.ToTable("IModpis");

                entity.HasIndex(e => e.Rok)
                    .HasName("xRok");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatumKho)
                    .HasColumnName("DatumKHO")
                    .HasColumnType("datetime");

                entity.Property(e => e.KcKorekce).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOdpis).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOdpisCalc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVstup).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVstupB).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZust).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZvCeny).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelSkOdp).HasColumnType("LONG");

                entity.Property(e => e.RelTpOdp).HasColumnType("LONG");

                entity.Property(e => e.RelUzavreno).HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Zcelku).HasColumnName("ZCelku");

                entity.Property(e => e.ZivotnNm)
                    .HasColumnName("ZivotnNM")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Imodpis)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rIModpis");
            });

            modelBuilder.Entity<ImodpisM>(entity =>
            {
                entity.ToTable("IModpisM");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.KcKorekce).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOdpis).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOdpisCalc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOdpisM).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVyrazeno).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZustatek).HasColumnType("CURRENCY");

                entity.Property(e => e.Mesic).HasColumnType("datetime");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelUzavreno).HasColumnType("LONG");

                entity.Property(e => e.Zcelku).HasColumnName("ZCelku");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.ImodpisM)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rIModpisM");
            });

            modelBuilder.Entity<Impohyb>(entity =>
            {
                entity.ToTable("IMpohyb");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.OdpisMin).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefPredm).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelImAg).HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelTpPoh).HasColumnType("LONG");

                entity.Property(e => e.RelUzavreno).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Impohyb)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rIMpohyb");
            });

            modelBuilder.Entity<Impredm>(entity =>
            {
                entity.ToTable("IMpredm");

                entity.HasIndex(e => e.Ids)
                    .HasName("xIDS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRucne).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZust).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelTpLik).HasColumnType("LONG");

                entity.Property(e => e.RelZpVyr).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Impredm)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rIMpredm");
            });

            modelBuilder.Entity<Imuodpis>(entity =>
            {
                entity.ToTable("IMuodpis");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.KcKorekce).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOdpis).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOdpisCalc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVstup).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZustatek).HasColumnType("CURRENCY");

                entity.Property(e => e.Mesic).HasColumnType("datetime");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefImo)
                    .HasColumnName("RefIMO")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelUzavreno).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Imuodpis)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rIMuodpis");
            });

            modelBuilder.Entity<InsolvHist>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Status)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasColumnType("MEMO");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Iobchod>(entity =>
            {
                entity.ToTable("IObchod");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatFtp)
                    .HasColumnName("DatFTP")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.NazevObchod)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelIobchod)
                    .HasColumnName("RelIObchod")
                    .HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<IobchodPol>(entity =>
            {
                entity.ToTable("IObchodPol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.IobchodPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsIObchod");
            });

            modelBuilder.Entity<JPd>(entity =>
            {
                entity.ToTable("jPD");

                entity.HasIndex(e => e.Cislo)
                    .HasName("xCislo");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.OrigKc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAnal).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPdAg).HasColumnType("LONG");

                entity.Property(e => e.RelTpPd)
                    .HasColumnName("RelTpPD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelVlivDph)
                    .HasColumnName("RelVlivDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(96)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<Kasa>(entity =>
            {
                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_Kasa_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.AllowedPc)
                    .HasColumnName("AllowedPC")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.AllowedTs)
                    .HasColumnName("AllowedTS")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.ClientTs).HasColumnName("ClientTS");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.GuidJ)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.ImpHo).HasColumnName("ImpHO");

                entity.Property(e => e.ImpSkpv).HasColumnName("ImpSKPV");

                entity.Property(e => e.MKasaGuid)
                    .HasColumnName("mKasaGUID")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.MServer).HasColumnName("mServer");

                entity.Property(e => e.NexportData).HasColumnName("NExportData");

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Paticka)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.ProdPlu).HasColumnName("ProdPLU");

                entity.Property(e => e.RefCrskpv)
                    .HasColumnName("RefCRSKPV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefEetprofil)
                    .HasColumnName("RefEETProfil")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefFilter).HasColumnType("LONG");

                entity.Property(e => e.RefFormUh).HasColumnType("LONG");

                entity.Property(e => e.RefFormUhSkpv)
                    .HasColumnName("RefFormUhSKPV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefKasaMonitor).HasColumnType("LONG");

                entity.Property(e => e.RefProvozovna).HasColumnType("LONG");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.RefSkCeny).HasColumnType("LONG");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelKasaTyp).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Sklady).HasColumnType("MEMO");

                entity.Property(e => e.Slozka)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SwKeyboard)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TextPh)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.TextSkpv)
                    .HasColumnName("TextSKPV")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<KasaEetprofil>(entity =>
            {
                entity.ToTable("KasaEETProfil");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefEetprofil)
                    .HasColumnName("RefEETProfil")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefKasa).HasColumnType("LONG");
            });

            modelBuilder.Entity<KasaFormUh>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefFormUh).HasColumnType("LONG");

                entity.Property(e => e.RefKasa).HasColumnType("LONG");
            });

            modelBuilder.Entity<KasaHist>(entity =>
            {
                entity.HasIndex(e => e.PackNum)
                    .HasName("xPackNum");

                entity.HasIndex(e => e.RefRecip)
                    .HasName("xRefRecip");

                entity.HasIndex(e => e.RefSender)
                    .HasName("xRefSender");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.MKasaGuid)
                    .HasColumnName("mKasaGUID")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.PackNum).HasColumnType("LONG");

                entity.Property(e => e.PackNumF).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefRecip).HasColumnType("LONG");

                entity.Property(e => e.RefSender).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<LgBulkOp>(entity =>
            {
                entity.ToTable("lgBulkOp");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CntRec).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Log).HasColumnType("MEMO");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pcname)
                    .HasColumnName("PCName")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpBulkOp)
                    .HasColumnName("RelTpBulkOP")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Lm>(entity =>
            {
                entity.ToTable("LM");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_LM_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDruha).HasColumnType("datetime");

                entity.Property(e => e.DatKonec).HasColumnType("datetime");

                entity.Property(e => e.DatPrvni).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatSmlouvy).HasColumnType("datetime");

                entity.Property(e => e.DatSpl).HasColumnType("datetime");

                entity.Property(e => e.DatVyr).HasColumnType("datetime");

                entity.Property(e => e.DatZar).HasColumnType("datetime");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FixDph).HasColumnName("FixDPH");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Limit).HasColumnType("CURRENCY");

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pocet).HasColumnType("LONG");

                entity.Property(e => e.Podnikani).HasColumnType("BYTE");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefImclen)
                    .HasColumnName("RefIMclen")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefImmist)
                    .HasColumnName("RefIMmist")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpLm)
                    .HasColumnName("RelTpLM")
                    .HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasColumnType("BYTE");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Zahrnout).HasColumnType("LONG");
            });

            modelBuilder.Entity<Lmdun>(entity =>
            {
                entity.ToTable("LMdun");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelUd)
                    .HasColumnName("RelUD")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Lmdun)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rLMdun");
            });

            modelBuilder.Entity<Lmspl>(entity =>
            {
                entity.ToTable("LMspl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcFc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcFcDph)
                    .HasColumnName("KcFcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPoj).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.ProcentoDph2).HasColumnName("ProcentoDPH2");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelFcPk).HasColumnType("LONG");

                entity.Property(e => e.RelFcSzDph)
                    .HasColumnName("RelFcSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelFcTpDph)
                    .HasColumnName("RelFcTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelOz)
                    .HasColumnName("RelOZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelPojPk).HasColumnType("LONG");

                entity.Property(e => e.RelPojTpDph)
                    .HasColumnName("RelPojTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZalPk).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Lmspl)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rLMspl");
            });

            modelBuilder.Entity<MphHist>(entity =>
            {
                entity.ToTable("MPhHist");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aplikace)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.SrcName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Station)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MphHistPol>(entity =>
            {
                entity.ToTable("MPhHistPol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTyp).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.MphHistPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rMPhHistPol");
            });

            modelBuilder.Entity<Mz>(entity =>
            {
                entity.ToTable("MZ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatZauct).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DnyKal).HasColumnType("BYTE");

                entity.Property(e => e.DnyMater).HasColumnType("SINGLE");

                entity.Property(e => e.DnyOcr)
                    .HasColumnName("DnyOCR")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.DnyOcrdlo)
                    .HasColumnName("DnyOCRdlo")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.DnyOdpra).HasColumnType("SINGLE");

                entity.Property(e => e.DnyOpp)
                    .HasColumnName("DnyOPP")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.DnyPlacV).HasColumnType("SINGLE");

                entity.Property(e => e.DnyPrac).HasColumnType("BYTE");

                entity.Property(e => e.DnyProstoje).HasColumnType("SINGLE");

                entity.Property(e => e.DnyStSv).HasColumnType("BYTE");

                entity.Property(e => e.DnySvat).HasColumnType("BYTE");

                entity.Property(e => e.DnyVojCv).HasColumnType("SINGLE");

                entity.Property(e => e.DnyVojZs)
                    .HasColumnName("DnyVojZS")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.Dovol).HasColumnType("SINGLE");

                entity.Property(e => e.DovolZ).HasColumnType("SINGLE");

                entity.Property(e => e.Duvazek)
                    .HasColumnName("DUvazek")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.HodDov).HasColumnType("SINGLE");

                entity.Property(e => e.HodDovolZ).HasColumnType("SINGLE");

                entity.Property(e => e.HodJkor).HasColumnType("SINGLE");

                entity.Property(e => e.HodJkor2).HasColumnType("SINGLE");

                entity.Property(e => e.HodJkor3).HasColumnType("SINGLE");

                entity.Property(e => e.HodJproc).HasColumnType("SINGLE");

                entity.Property(e => e.HodMater).HasColumnType("SINGLE");

                entity.Property(e => e.HodNarokDov).HasColumnType("SINGLE");

                entity.Property(e => e.HodNarokDovCast).HasColumnType("SINGLE");

                entity.Property(e => e.HodNarokDovSvat).HasColumnType("SINGLE");

                entity.Property(e => e.HodNem).HasColumnType("SINGLE");

                entity.Property(e => e.HodNeoml).HasColumnType("SINGLE");

                entity.Property(e => e.HodNepl).HasColumnType("SINGLE");

                entity.Property(e => e.HodNoc).HasColumnType("SINGLE");

                entity.Property(e => e.HodOcr)
                    .HasColumnName("HodOCR")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.HodOcrdlo)
                    .HasColumnName("HodOCRdlo")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.HodOdpra).HasColumnType("SINGLE");

                entity.Property(e => e.HodOpp)
                    .HasColumnName("HodOPP")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.HodPlacV).HasColumnType("SINGLE");

                entity.Property(e => e.HodPracSvat).HasColumnType("SINGLE");

                entity.Property(e => e.HodPres).HasColumnType("SINGLE");

                entity.Property(e => e.HodProplDov).HasColumnType("SINGLE");

                entity.Property(e => e.HodProst).HasColumnType("SINGLE");

                entity.Property(e => e.HodProstoje).HasColumnType("SINGLE");

                entity.Property(e => e.HodSvat).HasColumnType("SINGLE");

                entity.Property(e => e.HodVojCv).HasColumnType("SINGLE");

                entity.Property(e => e.JeDuchSporZam).HasColumnName("JeDuchSporZAM");

                entity.Property(e => e.JeDuchZam).HasColumnName("JeDuchZAM");

                entity.Property(e => e.JeMr).HasColumnName("JeMR");

                entity.Property(e => e.JeMrzam).HasColumnName("JeMRZAM");

                entity.Property(e => e.JeSocZam).HasColumnName("JeSocZAM");

                entity.Property(e => e.JeZdrZam).HasColumnName("JeZdrZAM");

                entity.Property(e => e.KcCastH).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCastHm)
                    .HasColumnName("KcCastHM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcCistaM).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDanBon).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDanPrS).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDanUpr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDanZal).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDavNem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDavOcr)
                    .HasColumnName("KcDavOCR")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDavPpm)
                    .HasColumnName("KcDavPPM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDavVyr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDoplDanBonRz)
                    .HasColumnName("KcDoplDanBonRZ")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDoplat).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDov).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDuchSpor).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDuchSporSniz).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDuchSporUpr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDuchSporZak).HasColumnType("CURRENCY");

                entity.Property(e => e.KcFiktPovPoj).HasColumnType("CURRENCY");

                entity.Property(e => e.KcHrubaM).HasColumnType("CURRENCY");

                entity.Property(e => e.KcJkor).HasColumnType("CURRENCY");

                entity.Property(e => e.KcJkor2).HasColumnType("CURRENCY");

                entity.Property(e => e.KcJkor3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcJproc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNadLimitPrijem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNahrN).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNahrN2).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNahrNem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNahrZ).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNatBp)
                    .HasColumnName("KcNatBP")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcNatPj).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNoc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNzdDet).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNzdInv).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNzdOst).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNzdZak).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOdstup).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOsOhoM).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOsOhod).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOsvobP).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOsvobP2).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPlacAkceDeti).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPlacV).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPremM).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPremie).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPreplDanRz)
                    .HasColumnName("KcPreplDanRZ")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPres).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPresZm)
                    .HasColumnName("KcPresZM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPripOs).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPripoj).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrispKarantena).HasColumnType("CURRENCY");

                entity.Property(e => e.KcProplacDovol).HasColumnType("CURRENCY");

                entity.Property(e => e.KcProst).HasColumnType("CURRENCY");

                entity.Property(e => e.KcProstoje).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrum).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSoc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSocL).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSocLshm).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSocLsleva).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSocLslevaSpec).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSocUpr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSocUprEdit).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSocUprLimt).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSocZak).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSocZakLimt).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSocZakSniz).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSrazky).HasColumnType("CURRENCY");

                entity.Property(e => e.KcStrav).HasColumnType("CURRENCY");

                entity.Property(e => e.KcStravNad).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSvat).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSvatN).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSvatZm)
                    .HasColumnName("KcSvatZM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcSzM).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVojCv).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVojZs)
                    .HasColumnName("KcVojZS")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcVyuct).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaklM).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZalDan).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZdaM).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZdr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZdrL).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZdrLshm).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZdrUpr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZdrUprEdit).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZdrUprLimt).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZdrZak).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZdrZakLimt).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZivOs).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZivPoj).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZtratV).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZvZkBp)
                    .HasColumnName("KcZvZkBP")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZvZkPj).HasColumnType("CURRENCY");

                entity.Property(e => e.NahrDoby).HasColumnType("SINGLE");

                entity.Property(e => e.NahrDobyDp)
                    .HasColumnName("NahrDobyDP")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.NemKal).HasColumnType("SINGLE");

                entity.Property(e => e.Nemoc).HasColumnType("SINGLE");

                entity.Property(e => e.Neomluv).HasColumnType("SINGLE");

                entity.Property(e => e.Neplac).HasColumnType("SINGLE");

                entity.Property(e => e.OsCislo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Premie).HasColumnType("SINGLE");

                entity.Property(e => e.ProplacDovol).HasColumnType("SINGLE");

                entity.Property(e => e.RefPoj).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZam)
                    .HasColumnName("RefZAM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruhM).HasColumnType("LONG");

                entity.Property(e => e.RelDruhZ).HasColumnType("LONG");

                entity.Property(e => e.RelMes).HasColumnType("LONG");

                entity.Property(e => e.RelSkZarucMzda).HasColumnType("LONG");

                entity.Property(e => e.RelVyplM).HasColumnType("LONG");

                entity.Property(e => e.RodCisl)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.SocUprMvz).HasColumnName("SocUprMVZ");

                entity.Property(e => e.Tuvazek).HasColumnName("TUvazek");

                entity.Property(e => e.TxNahrN)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TxNahrZ)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Zarazeni)
                    .HasMaxLength(42)
                    .IsUnicode(false);

                entity.Property(e => e.ZdrUprMvz).HasColumnName("ZdrUprMVZ");

                entity.HasOne(d => d.RefZamNavigation)
                    .WithMany(p => p.Mz)
                    .HasForeignKey(d => d.RefZam)
                    .HasConstraintName("rMzZAM");
            });

            modelBuilder.Entity<Mzdavky>(entity =>
            {
                entity.ToTable("MZdavky");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.DatKon).HasColumnType("datetime");

                entity.Property(e => e.DatZac).HasColumnType("datetime");

                entity.Property(e => e.HodPrac).HasColumnType("SINGLE");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDenVz)
                    .HasColumnName("KcDenVZ")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcNaDen).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZakUpl).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZakVyp).HasColumnType("CURRENCY");

                entity.Property(e => e.KracVvz)
                    .HasColumnName("KracVVZ")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.Kraceni).HasColumnType("SINGLE");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelDrDov).HasColumnType("LONG");

                entity.Property(e => e.Sazba).HasColumnType("SINGLE");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Mzdavky)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rMZdavky");
            });

            modelBuilder.Entity<Mzdoklad>(entity =>
            {
                entity.ToTable("MZdoklad");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelMes).HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");
            });

            modelBuilder.Entity<Mznahr>(entity =>
            {
                entity.ToTable("MZnahr");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DatKon).HasColumnType("datetime");

                entity.Property(e => e.DatZac).HasColumnType("datetime");

                entity.Property(e => e.DnyKal).HasColumnType("LONG");

                entity.Property(e => e.DnyPrac).HasColumnType("LONG");

                entity.Property(e => e.HodKon).HasColumnType("SINGLE");

                entity.Property(e => e.HodNahr).HasColumnType("SINGLE");

                entity.Property(e => e.HodNahr4).HasColumnType("SINGLE");

                entity.Property(e => e.HodZac).HasColumnType("SINGLE");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrispKarantena).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrum).HasColumnType("CURRENCY");

                entity.Property(e => e.KcUpr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kraceni).HasColumnType("SINGLE");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefZampDov)
                    .HasColumnName("RefZAMpDov")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDrNahr).HasColumnType("LONG");

                entity.Property(e => e.Sazba3).HasColumnType("SINGLE");

                entity.Property(e => e.Sazba4).HasColumnType("SINGLE");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Mznahr)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rMZnahr");
            });

            modelBuilder.Entity<Mzsraz>(entity =>
            {
                entity.ToTable("MZsraz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Firma)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Poradi).HasColumnType("LONG");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefZam)
                    .HasColumnName("RefZAM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefZpSra).HasColumnType("LONG");

                entity.Property(e => e.RelFond).HasColumnType("LONG");

                entity.Property(e => e.RelMes).HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelPlat).HasColumnType("LONG");

                entity.Property(e => e.RelZivPj).HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Mzvvz>(entity =>
            {
                entity.ToTable("MZvvz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DnyKal).HasColumnType("LONG");

                entity.Property(e => e.DnyPrac).HasColumnType("LONG");

                entity.Property(e => e.KcSocZak).HasColumnType("CURRENCY");

                entity.Property(e => e.NahrDoby).HasColumnType("SINGLE");

                entity.Property(e => e.RefZam)
                    .HasColumnName("RefZAM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelMes).HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");
            });

            modelBuilder.Entity<Mzzauct>(entity =>
            {
                entity.ToTable("MZzauct");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.KcDanUpS).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDanUpZ).HasColumnType("CURRENCY");

                entity.Property(e => e.RelMes).HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");
            });

            modelBuilder.Entity<MzzivPoj>(entity =>
            {
                entity.ToTable("MZzivPoj");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.KcPoj).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefZamzivPoj)
                    .HasColumnName("RefZAMzivPoj")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.MzzivPoj)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rMZzivPoj");
            });

            modelBuilder.Entity<Nab>(entity =>
            {
                entity.ToTable("NAB");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => e.RelTpNab)
                    .HasName("xRelTpNab");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_NAB_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.PoznPred).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpNab).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Nabpol>(entity =>
            {
                entity.ToTable("NABpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Nabpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rNABpol");
            });

            modelBuilder.Entity<Nempri>(entity =>
            {
                entity.ToTable("NEMPRI");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatPod).HasColumnType("datetime");

                entity.Property(e => e.DatPrij).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefStavDp)
                    .HasColumnName("RefStavDP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RespPoint)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(38)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Uloha)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Nempripol>(entity =>
            {
                entity.ToTable("NEMPRIpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.AdrCisloPopis)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AdrObec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.AdrPsc)
                    .HasColumnName("AdrPSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.AdrUlice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CisPotvrz)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DatR1).HasColumnType("datetime");

                entity.Property(e => e.DatR10).HasColumnType("datetime");

                entity.Property(e => e.DatR11).HasColumnType("datetime");

                entity.Property(e => e.DatR12).HasColumnType("datetime");

                entity.Property(e => e.DatR2).HasColumnType("datetime");

                entity.Property(e => e.DatR3).HasColumnType("datetime");

                entity.Property(e => e.DatR4).HasColumnType("datetime");

                entity.Property(e => e.DatR5).HasColumnType("datetime");

                entity.Property(e => e.DatR6).HasColumnType("datetime");

                entity.Property(e => e.DatR7).HasColumnType("datetime");

                entity.Property(e => e.DatR8).HasColumnType("datetime");

                entity.Property(e => e.DatR9).HasColumnType("datetime");

                entity.Property(e => e.DruhDavky)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DruhDuch)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Err)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Iczam)
                    .HasColumnName("ICZam")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.JmZam)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.KcPrijMr)
                    .HasColumnName("KcPrijMR")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR1).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR10).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR11).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR12).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR2).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR4).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR5).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR6).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR7).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR8).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijR9).HasColumnType("CURRENCY");

                entity.Property(e => e.KodOssz)
                    .HasColumnName("KodOSSZ")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.KonPrac)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.KontEmail)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.KontTel)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.MesicMz)
                    .HasColumnName("MesicMZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.MistPod)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NarDitete).HasColumnType("datetime");

                entity.Property(e => e.NastupujePpm).HasColumnName("NastupujePPM");

                entity.Property(e => e.NazevOssz)
                    .HasColumnName("NazevOSSZ")
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.NerDvzppm)
                    .HasColumnName("NerDVZPPM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.PocOdHod).HasColumnType("SINGLE");

                entity.Property(e => e.PocetPriloh).HasColumnType("LONG");

                entity.Property(e => e.PoradCis).HasColumnType("LONG");

                entity.Property(e => e.Poznamka)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PracDob).HasColumnType("SINGLE");

                entity.Property(e => e.PravVysPrij).HasColumnType("CURRENCY");

                entity.Property(e => e.PrevodDatum).HasColumnType("datetime");

                entity.Property(e => e.Prijmeni)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefMz)
                    .HasColumnName("RefMZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefNeprit).HasColumnType("LONG");

                entity.Property(e => e.RefStavDp)
                    .HasColumnName("RefStavDP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefZampomer)
                    .HasColumnName("RefZAMpomer")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruhZ).HasColumnType("LONG");

                entity.Property(e => e.RodCisl)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.RokMz)
                    .HasColumnName("RokMZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.RozObdDo).HasColumnType("datetime");

                entity.Property(e => e.RozObdOd).HasColumnType("datetime");

                entity.Property(e => e.Sdeleni)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.VolnoBezNahrDo).HasColumnType("datetime");

                entity.Property(e => e.VolnoBezNahrOd).HasColumnType("datetime");

                entity.Property(e => e.Vszam)
                    .HasColumnName("VSZam")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.VyldnyR1).HasColumnType("LONG");

                entity.Property(e => e.VyldnyR10).HasColumnType("LONG");

                entity.Property(e => e.VyldnyR11).HasColumnType("LONG");

                entity.Property(e => e.VyldnyR12).HasColumnType("LONG");

                entity.Property(e => e.VyldnyR2).HasColumnType("LONG");

                entity.Property(e => e.VyldnyR3).HasColumnType("LONG");

                entity.Property(e => e.VyldnyR4).HasColumnType("LONG");

                entity.Property(e => e.VyldnyR5).HasColumnType("LONG");

                entity.Property(e => e.VyldnyR6).HasColumnType("LONG");

                entity.Property(e => e.VyldnyR7).HasColumnType("LONG");

                entity.Property(e => e.VyldnyR8).HasColumnType("LONG");

                entity.Property(e => e.VyldnyR9).HasColumnType("LONG");

                entity.Property(e => e.ZamDo).HasColumnType("datetime");

                entity.Property(e => e.ZamOd).HasColumnType("datetime");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Nempripol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rMZNEMPRIpol");
            });

            modelBuilder.Entity<Obj>(entity =>
            {
                entity.ToTable("OBJ");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => e.RelTpObj)
                    .HasName("xRelTpObj");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_OBJ_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bdodano).HasColumnName("BDodano");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatDod).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatStorn).HasColumnType("datetime");

                entity.Property(e => e.DatVytEz)
                    .HasColumnName("DatVytEZ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IoId)
                    .HasColumnName("IoID")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pdoklad)
                    .HasColumnName("PDoklad")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefDopravci).HasColumnType("LONG");

                entity.Property(e => e.RefEetprofil)
                    .HasColumnName("RefEETProfil")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpIo).HasColumnType("LONG");

                entity.Property(e => e.RelTpObj).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.TmpEshopIoId)
                    .HasColumnName("tmpEshopIoID")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.TmpEshopObjId)
                    .HasColumnName("tmpEshopObjID")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Objpol>(entity =>
            {
                entity.ToTable("OBJpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Objpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rOBJpol");
            });

            modelBuilder.Entity<Onz>(entity =>
            {
                entity.ToTable("ONZ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatPod).HasColumnType("datetime");

                entity.Property(e => e.DatPrij).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelStavDp)
                    .HasColumnName("RelStavDP")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Uloha)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<OnzduchPoj>(entity =>
            {
                entity.ToTable("ONZduchPoj");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.Radek).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.HasOne(d => d.RefPolNavigation)
                    .WithMany(p => p.OnzduchPoj)
                    .HasForeignKey(d => d.RefPol)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rMZONZduchPoj");
            });

            modelBuilder.Entity<Onzpol>(entity =>
            {
                entity.ToTable("ONZpol");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CizCislo)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CizCp)
                    .HasColumnName("CizCP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CizCp2)
                    .HasColumnName("CizCP2")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CizMisto)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CizNositel)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CizObec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.CizObec2)
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.CizPostCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CizPsc)
                    .HasColumnName("CizPSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CizStat)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CizUlice)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CizUlice2)
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Cp)
                    .HasColumnName("CP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DatDuchodOd).HasColumnType("datetime");

                entity.Property(e => e.DatNar).HasColumnType("datetime");

                entity.Property(e => e.DatOdch).HasColumnType("datetime");

                entity.Property(e => e.DatVstup).HasColumnType("datetime");

                entity.Property(e => e.DdrDuch)
                    .HasColumnName("DDrDuch")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DruhZ)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DruhZamestnani)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DuvodNeposlUdaju)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DuvodUkonceni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DuvodUkonceniSp)
                    .HasColumnName("DuvodUkonceniSP")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.JeMr).HasColumnName("JeMR");

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.KonCp)
                    .HasColumnName("KonCP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.KonObec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.KonPsc)
                    .HasColumnName("KonPSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.KonUlice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.MistoNar)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Odbytne).HasColumnType("LONG");

                entity.Property(e => e.Odchodne).HasColumnType("LONG");

                entity.Property(e => e.Odstupne1).HasColumnType("LONG");

                entity.Property(e => e.Odstupne2).HasColumnType("LONG");

                entity.Property(e => e.Ossz)
                    .HasColumnName("OSSZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.PlatneOd).HasColumnType("datetime");

                entity.Property(e => e.PojKod)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.PojisteniOd).HasColumnType("datetime");

                entity.Property(e => e.Posta)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PredPoj)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Prijmeni)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.PrijmeniDalsi)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PrumVydelek).HasColumnType("CURRENCY");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefZam).HasColumnType("LONG");

                entity.Property(e => e.RelPohl).HasColumnType("LONG");

                entity.Property(e => e.RelTyp).HasColumnType("LONG");

                entity.Property(e => e.RodCisl)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Rozena)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SmlSpNosPoj)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SoucPoj)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Stat)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.StatKonAdr)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.StatPris)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Titul)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Onzpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rMZONZpol");
            });

            modelBuilder.Entity<Onzprilohy>(entity =>
            {
                entity.ToTable("ONZprilohy");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cesta)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Popis)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.HasOne(d => d.RefPolNavigation)
                    .WithMany(p => p.Onzprilohy)
                    .HasForeignKey(d => d.RefPol)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rMZONZprilohy");
            });

            modelBuilder.Entity<OprPoloz>(entity =>
            {
                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_OprPoloz_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZust).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZust).HasColumnType("CURRENCY");

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefId)
                    .HasColumnName("RefID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDrOpr).HasColumnType("LONG");

                entity.Property(e => e.RelTpOpr).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<OprPolozPol>(entity =>
            {
                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelOpOpr).HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.OprPolozPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rOprPoloz");
            });

            modelBuilder.Entity<OverDphHist>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatNespoleh).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Nespolehlivy)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.VerejneUcty).HasColumnType("MEMO");
            });

            modelBuilder.Entity<OverDphHistDat>(entity =>
            {
                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.OverDphHistDat)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rOverDphHist");
            });

            modelBuilder.Entity<PCf>(entity =>
            {
                entity.ToTable("pCF");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PCfpol>(entity =>
            {
                entity.ToTable("pCFpol");

                entity.HasIndex(e => e.Ids)
                    .HasName("xIDS");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Defin)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcP).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.ProcCf).HasColumnName("ProcCF");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCftyp)
                    .HasColumnName("RefCFtyp")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.PCfpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rpCFpol");
            });

            modelBuilder.Entity<Pdb>(entity =>
            {
                entity.ToTable("PDB");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatPod).HasColumnType("datetime");

                entity.Property(e => e.DatPrij).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Data).HasColumnType("LONGBINARY");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelDruhPdb)
                    .HasColumnName("RelDruhPDB")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelMesic).HasColumnType("LONG");

                entity.Property(e => e.RelStavEp)
                    .HasColumnName("RelStavEP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpPdb)
                    .HasColumnName("RelTpPDB")
                    .HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Uloha)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Pdbprilohy>(entity =>
            {
                entity.ToTable("PDBprilohy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cesta)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Pdbprilohy)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rPDBprilohy");
            });

            modelBuilder.Entity<Ph>(entity =>
            {
                entity.ToTable("PH");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_PH_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatStorn).HasColumnType("datetime");

                entity.Property(e => e.DatZauct).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijato).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVratit).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PackNum).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.PrintCount).HasColumnType("LONG");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefEetprofil)
                    .HasColumnName("RefEETProfil")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefKasa).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelStavEet)
                    .HasColumnName("RelStavEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpPh)
                    .HasColumnName("RelTpPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.StornoEet).HasColumnName("StornoEET");

                entity.Property(e => e.TiskFm).HasColumnName("TiskFM");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrPh)
                    .HasColumnName("ZaokrPH")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Phpol>(entity =>
            {
                entity.ToTable("PHpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.JcbezDph)
                    .HasColumnName("JCbezDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SeskupVc).HasColumnName("SeskupVC");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.StextRp)
                    .HasColumnName("STextRP")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Phpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rPHpol");
            });

            modelBuilder.Entity<Phzauc>(entity =>
            {
                entity.ToTable("PHzauc");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RefFormUh).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RelAgIdZauc).HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ud)
                    .HasColumnName("UD")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Umd)
                    .HasColumnName("UMD")
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PInt>(entity =>
            {
                entity.ToTable("pINT");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.IsDocId)
                    .HasName("xIsDocID");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_pINT_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloKhdph)
                    .HasColumnName("CisloKHDPH")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmU).HasColumnType("CURRENCY");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatKhdph)
                    .HasColumnName("DatKHDPH")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatUcP).HasColumnType("datetime");

                entity.Property(e => e.DatZdPln).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IsDocId)
                    .HasColumnName("IsDocID")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrepl).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPreplCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcU).HasColumnType("CURRENCY");

                entity.Property(e => e.KcUkrozd)
                    .HasColumnName("KcUKRozd")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Klikv).HasColumnName("KLikv");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LikvCm).HasColumnName("LikvCM");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelMobch).HasColumnType("LONG");

                entity.Property(e => e.RelObDph)
                    .HasColumnName("RelObDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObKh)
                    .HasColumnName("RelObKH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObMoss)
                    .HasColumnName("RelObMOSS")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObSh)
                    .HasColumnName("RelObSH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpFak).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<PIntpol>(entity =>
            {
                entity.ToTable("pINTpol");

                entity.HasIndex(e => e.IsDocId)
                    .HasName("xIsDocID");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.IsDocId)
                    .HasColumnName("IsDocID")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.JcbezDph)
                    .HasColumnName("JCbezDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpPrepl).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.PIntpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rpINT");
            });

            modelBuilder.Entity<Pop>(entity =>
            {
                entity.ToTable("POP");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => e.RelTpPop)
                    .HasName("xRelTpPop");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_POP_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.PoznPred).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpPop).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Poppol>(entity =>
            {
                entity.ToTable("POPpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Poppol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rPOPpol");
            });

            modelBuilder.Entity<POs>(entity =>
            {
                entity.ToTable("pOS");

                entity.HasIndex(e => new { e.Ucet, e.NullCheckUcet })
                    .HasName("IX_pOS_Ucet")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckUcet)
                    .HasColumnName("NullCheck_Ucet")
                    .HasComputedColumnSql("(case when [Ucet] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.ObratDph).HasColumnName("ObratDPH");

                entity.Property(e => e.Odpa)
                    .HasColumnName("ODPA")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Org)
                    .HasColumnName("ORG")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Orj)
                    .HasColumnName("ORJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pol)
                    .HasColumnName("POL")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Radek).HasColumnType("SHORT");

                entity.Property(e => e.Radek2).HasColumnType("SHORT");

                entity.Property(e => e.Radek2Z).HasColumnType("SHORT");

                entity.Property(e => e.Radek3).HasColumnType("SHORT");

                entity.Property(e => e.Radek4).HasColumnType("SHORT");

                entity.Property(e => e.Radek5).HasColumnType("SHORT");

                entity.Property(e => e.Radek5P).HasColumnType("SHORT");

                entity.Property(e => e.Radek6).HasColumnType("SHORT");

                entity.Property(e => e.Radek6P).HasColumnType("SHORT");

                entity.Property(e => e.Radek7).HasColumnType("SHORT");

                entity.Property(e => e.Radek7P).HasColumnType("SHORT");

                entity.Property(e => e.RadekP).HasColumnType("SHORT");

                entity.Property(e => e.RadekZ).HasColumnType("SHORT");

                entity.Property(e => e.RadekZp)
                    .HasColumnName("RadekZP")
                    .HasColumnType("SHORT");

                entity.Property(e => e.RelDruhU).HasColumnType("LONG");

                entity.Property(e => e.RelTypCn)
                    .HasColumnName("RelTypCN")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypU).HasColumnType("LONG");

                entity.Property(e => e.UcelZnak)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Zj)
                    .HasColumnName("ZJ")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<POsuSk>(entity =>
            {
                entity.ToTable("pOSuSk");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Usk)
                    .HasColumnName("USk")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Pozastavky>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.DatLikv).HasColumnType("datetime");

                entity.Property(e => e.DatSplat).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalc).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(64)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Ppdokl>(entity =>
            {
                entity.ToTable("PPDokl");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_PPDokl_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelPredloha).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<PpdoklPol>(entity =>
            {
                entity.ToTable("PPDoklPol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Dokl)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Par)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelCastka).HasColumnType("LONG");

                entity.Property(e => e.RelEndG).HasColumnType("LONG");

                entity.Property(e => e.RelSpln).HasColumnType("LONG");

                entity.Property(e => e.RelTypBv)
                    .HasColumnName("RelTypBV")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.PpdoklPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rPPDoklPol");
            });

            modelBuilder.Entity<PPk>(entity =>
            {
                entity.ToTable("pPK");

                entity.HasIndex(e => e.RelPkAg)
                    .HasName("xRelPkAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelPkAg).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Stext1)
                    .HasColumnName("SText1")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Stext2)
                    .HasColumnName("SText2")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Stext3)
                    .HasColumnName("SText3")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ud)
                    .HasColumnName("UD")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Ud1)
                    .HasColumnName("UD1")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Ud2)
                    .HasColumnName("UD2")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Ud3)
                    .HasColumnName("UD3")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Umd)
                    .HasColumnName("UMD")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Umd1)
                    .HasColumnName("UMD1")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Umd2)
                    .HasColumnName("UMD2")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Umd3)
                    .HasColumnName("UMD3")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<PrenosList>(entity =>
            {
                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefIdsrc)
                    .HasColumnName("RefIDsrc")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgIddst)
                    .HasColumnName("RelAgIDdst")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgIdsrc)
                    .HasColumnName("RelAgIDsrc")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrenosPol>(entity =>
            {
                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefIdsrc)
                    .HasColumnName("RefIDsrc")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefPol2).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz).HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz1).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefStruct).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgId2)
                    .HasColumnName("RelAgID2")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgIddst)
                    .HasColumnName("RelAgIDdst")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgIdsrc)
                    .HasColumnName("RelAgIDsrc")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SeskupVc).HasColumnName("SeskupVC");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");
            });

            modelBuilder.Entity<PrisVykaz>(entity =>
            {
                entity.HasIndex(e => e.RelTp)
                    .HasName("xRelTp");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExport).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatSestav).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelMesic).HasColumnType("LONG");

                entity.Property(e => e.RelTisice).HasColumnType("LONG");

                entity.Property(e => e.RelTp).HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrisVykazy>(entity =>
            {
                entity.HasIndex(e => e.RelTp)
                    .HasName("xRelTp");

                entity.HasIndex(e => new { e.RefAg, e.NullCheckRefAg })
                    .HasName("IX_PrisVykazy_RefAg")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatSestav).HasColumnType("datetime");

                entity.Property(e => e.Data).HasColumnType("LONGBINARY");

                entity.Property(e => e.NullCheckRefAg)
                    .HasColumnName("NullCheck_RefAg")
                    .HasComputedColumnSql("(case when [RefAg] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelTp).HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Tisice).HasColumnType("LONG");
            });

            modelBuilder.Entity<PRozv>(entity =>
            {
                entity.ToTable("pRozv");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.KcHaler).HasColumnType("CURRENCY");

                entity.Property(e => e.KcHaler2).HasColumnType("CURRENCY");

                entity.Property(e => e.KcTisic).HasColumnType("CURRENCY");

                entity.Property(e => e.KcTisic2).HasColumnType("CURRENCY");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Radek).HasColumnType("LONG");

                entity.Property(e => e.RadekOld).HasColumnType("LONG");

                entity.Property(e => e.RelRozTp).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<PSaldo>(entity =>
            {
                entity.ToTable("pSaldo");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CmD).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMd)
                    .HasColumnName("CmMD")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZust).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatSplat).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DoSplat).HasColumnType("LONG");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.KcD).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMd)
                    .HasColumnName("KcMD")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZust).HasColumnType("CURRENCY");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParIco)
                    .HasColumnName("ParICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPozas).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelUdAg).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(96)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PUd>(entity =>
            {
                entity.ToTable("pUD");

                entity.HasIndex(e => e.Cislo)
                    .HasName("xCislo");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RelAgId)
                    .HasName("xRelAgID");

                entity.HasIndex(e => e.RelUdAg)
                    .HasName("xRelUdAg");

                entity.HasIndex(e => e.TpUd)
                    .HasName("xTpUD");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatZdPln).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.OrigKc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParIco)
                    .HasColumnName("ParICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym2)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPozas).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUd)
                    .HasColumnName("RefUD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruhUd)
                    .HasColumnName("RelDruhUD")
                    .HasColumnType("BYTE");

                entity.Property(e => e.RelUdAg).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(96)
                    .IsUnicode(false);

                entity.Property(e => e.TpUd)
                    .HasColumnName("TpUD")
                    .HasColumnType("BYTE");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ud)
                    .HasColumnName("UD")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Udodpa)
                    .HasColumnName("UDODPA")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Udorg)
                    .HasColumnName("UDORG")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Udorj)
                    .HasColumnName("UDORJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Udpol)
                    .HasColumnName("UDPOL")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.UducelZnak)
                    .HasColumnName("UDUcelZnak")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Udzj)
                    .HasColumnName("UDZJ")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Umd)
                    .HasColumnName("UMD")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Umdodpa)
                    .HasColumnName("UMDODPA")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Umdorg)
                    .HasColumnName("UMDORG")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Umdorj)
                    .HasColumnName("UMDORJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Umdpol)
                    .HasColumnName("UMDPOL")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.UmducelZnak)
                    .HasColumnName("UMDUcelZnak")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Umdzj)
                    .HasColumnName("UMDZJ")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<Pvpoj>(entity =>
            {
                entity.ToTable("PVPOJ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatPod).HasColumnType("datetime");

                entity.Property(e => e.DatPrij).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefPuvodni).HasColumnType("LONG");

                entity.Property(e => e.RelMesic).HasColumnType("LONG");

                entity.Property(e => e.RelStavDp)
                    .HasColumnName("RelStavDP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypEp)
                    .HasColumnName("RelTypEP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RespPoint)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Uloha)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Pvpojpol>(entity =>
            {
                entity.ToTable("PVPOJpol");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Castka).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelTyp).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Pvpojpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rMZPVPOJpol");
            });

            modelBuilder.Entity<PVysl>(entity =>
            {
                entity.ToTable("pVysl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ud)
                    .HasColumnName("UD")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Umd)
                    .HasColumnName("UMD")
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PzdDel>(entity =>
            {
                entity.HasIndex(e => e.PzdAut)
                    .HasName("xPzdAut");

                entity.HasIndex(e => e.PzdId)
                    .HasName("xPzdID");

                entity.HasIndex(e => e.PzdStat)
                    .HasName("xPzdStat");

                entity.HasIndex(e => e.SrcTable)
                    .HasName("xSrcTable");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.PzdAut).HasColumnType("LONG");

                entity.Property(e => e.PzdId)
                    .HasColumnName("PzdID")
                    .HasColumnType("LONG");

                entity.Property(e => e.PzdStat).HasColumnType("LONG");

                entity.Property(e => e.RelSrcAg).HasColumnType("LONG");

                entity.Property(e => e.SrcTable)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PzdHist>(entity =>
            {
                entity.HasIndex(e => e.Recip)
                    .HasName("xRecip");

                entity.HasIndex(e => e.Sender)
                    .HasName("xSender");

                entity.HasIndex(e => e.Status)
                    .HasName("xStatus");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Log).HasColumnType("MEMO");

                entity.Property(e => e.PackNum).HasColumnType("LONG");

                entity.Property(e => e.PackNumF).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Recip).HasColumnType("LONG");

                entity.Property(e => e.RelTpHist).HasColumnType("LONG");

                entity.Property(e => e.Sender).HasColumnType("LONG");

                entity.Property(e => e.Status).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<PzdJ>(entity =>
            {
                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_PzdJ_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.GuidJ)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.NexportData).HasColumnName("NExportData");

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RelTpJ).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.ShareAd).HasColumnName("ShareAD");

                entity.Property(e => e.Status).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<Recent>(entity =>
            {
                entity.HasIndex(e => e.AgId)
                    .HasName("xAgID");

                entity.HasIndex(e => e.RelSubId)
                    .HasName("xRelSubID");

                entity.HasIndex(e => e.Ucetni)
                    .HasName("xUcetni");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.AgId)
                    .HasColumnName("AgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefId)
                    .HasColumnName("RefID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSubId)
                    .HasColumnName("RelSubID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RefAdskup>(entity =>
            {
                entity.ToTable("RefADSkup");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkup).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<RefPolToPol>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefPol1).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgId1)
                    .HasColumnName("RelAgID1")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Rekl>(entity =>
            {
                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_Rekl_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisDokl)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisReklList)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDokl).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatVyrDo).HasColumnType("datetime");

                entity.Property(e => e.DatVyrizeno).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kemail)
                    .HasColumnName("KEmail")
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Kjmeno)
                    .HasColumnName("KJmeno")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ktel)
                    .HasColumnName("KTel")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Kutvar)
                    .HasColumnName("KUtvar")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pdoklad)
                    .HasColumnName("PDoklad")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefOsoba).HasColumnType("LONG");

                entity.Property(e => e.RefRekl).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStavDod).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RefZpPrij).HasColumnType("LONG");

                entity.Property(e => e.RefZpVydej).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelReklStav).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpRekl).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzNazev)
                    .HasColumnName("SKzNazev")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.SkzStext)
                    .HasColumnName("SKzSText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StavFirma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ReklKomp>(entity =>
            {
                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.ReklKomp)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rReklKomp");
            });

            modelBuilder.Entity<ReklPredm>(entity =>
            {
                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.NahrDily)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Soucasti)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.StavPrij)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.VadaPopis)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.Property(e => e.ZpReseni)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.ReklPredm)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rReklPredm");
            });

            modelBuilder.Entity<ReklStav>(entity =>
            {
                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisReklList)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.KvyrMj)
                    .HasColumnName("KVyrMJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Kvyrizeni).HasColumnName("KVyrizeni");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.PopisVyr)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.PrenesMj)
                    .HasColumnName("PrenesMJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefOsoba).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelReklStav).HasColumnType("LONG");

                entity.Property(e => e.RelReklZpVyr).HasColumnType("LONG");

                entity.Property(e => e.RelZpPosl).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.ReklStav)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rReklStav");
            });

            modelBuilder.Entity<RpSaldo>(entity =>
            {
                entity.ToTable("rpSaldo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CmD).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMd)
                    .HasColumnName("CmMD")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZust).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatSplat).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DoSplat).HasColumnType("LONG");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.KcD).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMd)
                    .HasColumnName("KcMD")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZust).HasColumnType("CURRENCY");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParIco)
                    .HasColumnName("ParICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPozas).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelUdAg).HasColumnType("LONG");

                entity.Property(e => e.RelpUd)
                    .HasColumnName("RelpUD")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(96)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RpZakmon>(entity =>
            {
                entity.ToTable("rpZAKmon");

                entity.HasIndex(e => e.RefId)
                    .HasName("xRefID");

                entity.HasIndex(e => e.RefPolId)
                    .HasName("xRefPolID");

                entity.HasIndex(e => e.RefZak)
                    .HasName("xRefZAK");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DatSplat).HasColumnType("datetime");

                entity.Property(e => e.DatZdPln).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Ean)
                    .HasColumnName("EAN")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCzisk)
                    .HasColumnName("KcCZisk")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNaklad).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOceneni).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOstatni).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPlanNakladu).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPlanVynosu).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVnc)
                    .HasColumnName("KcVNC")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcVynos).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZisk).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.OrderAg).HasColumnType("LONG");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PlPredani).HasColumnType("datetime");

                entity.Property(e => e.PlZahaj).HasColumnType("datetime");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PoznPol)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Predani).HasColumnType("datetime");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefId)
                    .HasColumnName("RefID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPolId)
                    .HasColumnName("RefPolID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkzPoh)
                    .HasColumnName("RefSKzPoh")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStav).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefStruct).HasColumnType("LONG");

                entity.Property(e => e.RefZak)
                    .HasColumnName("RefZAK")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruhOper).HasColumnType("LONG");

                entity.Property(e => e.RelMesic).HasColumnType("LONG");

                entity.Property(e => e.RelOp)
                    .HasColumnName("RelOP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPolAgId)
                    .HasColumnName("RelPolAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPolTyp).HasColumnType("LONG");

                entity.Property(e => e.RelRealAgId)
                    .HasColumnName("RelRealAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelReklStav).HasColumnType("LONG");

                entity.Property(e => e.RelServStav).HasColumnType("LONG");

                entity.Property(e => e.RelZakAgId)
                    .HasColumnName("RelZakAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Vnakup)
                    .HasColumnName("VNakup")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Zahajeni).HasColumnType("datetime");

                entity.Property(e => e.Zdroj)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RpZampodkl>(entity =>
            {
                entity.ToTable("rpZAMpodkl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes01).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes02).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes03).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes04).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes05).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes06).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes07).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes08).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes09).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes10).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes11).HasColumnType("CURRENCY");

                entity.Property(e => e.KcMes12).HasColumnType("CURRENCY");

                entity.Property(e => e.RefZam)
                    .HasColumnName("RefZAM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelOdpoc).HasColumnType("LONG");

                entity.Property(e => e.RelTpNez).HasColumnType("LONG");

                entity.Property(e => e.RelUkoho)
                    .HasColumnName("RelUKoho")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<RRozvahZ>(entity =>
            {
                entity.ToTable("rRozvahZ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.C1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.C2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.C3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.C3en)
                    .HasColumnName("C3EN")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.C3ge)
                    .HasColumnName("C3GE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.HalerS1).HasColumnType("CURRENCY");

                entity.Property(e => e.HalerS1p)
                    .HasColumnName("HalerS1P")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.HalerS2).HasColumnType("CURRENCY");

                entity.Property(e => e.HalerS2p)
                    .HasColumnName("HalerS2P")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Priorita).HasColumnType("LONG");

                entity.Property(e => e.Radek).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Sloup1).HasColumnType("CURRENCY");

                entity.Property(e => e.Sloup1P).HasColumnType("CURRENCY");

                entity.Property(e => e.Sloup2).HasColumnType("CURRENCY");

                entity.Property(e => e.Sloup2P).HasColumnType("CURRENCY");

                entity.Property(e => e.SloupC).HasColumnType("CURRENCY");

                entity.Property(e => e.SloupCp)
                    .HasColumnName("SloupCP")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Stav).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(230)
                    .IsUnicode(false);

                entity.Property(e => e.StextEn)
                    .HasColumnName("STextEN")
                    .HasMaxLength(230)
                    .IsUnicode(false);

                entity.Property(e => e.StextGe)
                    .HasColumnName("STextGE")
                    .HasMaxLength(230)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RRozvZap>(entity =>
            {
                entity.ToTable("rRozvZAP");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.A).HasColumnType("LONG");

                entity.Property(e => e.Ap)
                    .HasColumnName("AP")
                    .HasColumnType("LONG");

                entity.Property(e => e.P).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");
            });

            modelBuilder.Entity<RRozvZrd>(entity =>
            {
                entity.ToTable("rRozvZRd");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Radek).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Sloupec).HasColumnType("LONG");

                entity.Property(e => e.Sucet)
                    .HasColumnName("SUcet")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RRozvZsc>(entity =>
            {
                entity.ToTable("rRozvZSc");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Do).HasColumnType("LONG");

                entity.Property(e => e.Od).HasColumnType("LONG");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Priznak).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Soucet).HasColumnType("LONG");
            });

            modelBuilder.Entity<RRozvZsi>(entity =>
            {
                entity.ToTable("rRozvZSi");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Do).HasColumnType("LONG");

                entity.Property(e => e.Od).HasColumnType("LONG");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");
            });

            modelBuilder.Entity<RRvimpl>(entity =>
            {
                entity.ToTable("rRVImpl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Radek).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Sucet)
                    .HasColumnName("SUcet")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Rvncinfo>(entity =>
            {
                entity.ToTable("RVNCinfo");

                entity.HasIndex(e => e.User)
                    .HasName("xUser");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Hupinfo)
                    .HasColumnName("HUPinfo")
                    .HasColumnType("LONG");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.PohId)
                    .HasColumnName("PohID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelOp)
                    .HasColumnName("RelOP")
                    .HasColumnType("LONG");

                entity.Property(e => e.TreePos).HasColumnType("LONG");

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RVysledZ>(entity =>
            {
                entity.ToTable("rVysledZ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.C1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.C2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.C3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.C3en)
                    .HasColumnName("C3EN")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.C3ge)
                    .HasColumnName("C3GE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.HalerS1).HasColumnType("CURRENCY");

                entity.Property(e => e.HalerS1p)
                    .HasColumnName("HalerS1P")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.HalerS2).HasColumnType("CURRENCY");

                entity.Property(e => e.HalerS2p)
                    .HasColumnName("HalerS2P")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.HalerS3).HasColumnType("CURRENCY");

                entity.Property(e => e.Priorita).HasColumnType("LONG");

                entity.Property(e => e.Radek).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Sloup1).HasColumnType("CURRENCY");

                entity.Property(e => e.Sloup1P).HasColumnType("CURRENCY");

                entity.Property(e => e.Sloup2).HasColumnType("CURRENCY");

                entity.Property(e => e.Sloup2P).HasColumnType("CURRENCY");

                entity.Property(e => e.Sloup3).HasColumnType("CURRENCY");

                entity.Property(e => e.SloupC).HasColumnType("CURRENCY");

                entity.Property(e => e.SloupCp)
                    .HasColumnName("SloupCP")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Stav).HasColumnType("BYTE");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(230)
                    .IsUnicode(false);

                entity.Property(e => e.StextEn)
                    .HasColumnName("STextEN")
                    .HasMaxLength(230)
                    .IsUnicode(false);

                entity.Property(e => e.StextGe)
                    .HasColumnName("STextGE")
                    .HasMaxLength(230)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RVyslZrd>(entity =>
            {
                entity.ToTable("rVyslZRd");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Radek).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Sucet)
                    .HasColumnName("SUcet")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RVyslZsc>(entity =>
            {
                entity.ToTable("rVyslZSc");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Do).HasColumnType("LONG");

                entity.Property(e => e.Od).HasColumnType("LONG");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Priznak).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Soucet).HasColumnType("LONG");
            });

            modelBuilder.Entity<RVyslZsi>(entity =>
            {
                entity.ToTable("rVyslZSi");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Do).HasColumnType("LONG");

                entity.Property(e => e.Od).HasColumnType("LONG");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");
            });

            modelBuilder.Entity<SAdhis>(entity =>
            {
                entity.ToTable("sADhis");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.RelTyp).HasColumnType("LONG");
            });

            modelBuilder.Entity<SAdklic>(entity =>
            {
                entity.ToTable("sADklic");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sADklic_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SAdskup>(entity =>
            {
                entity.ToTable("sADskup");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sADskup_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SAnalytika>(entity =>
            {
                entity.ToTable("sAnalytika");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ObratDph).HasColumnName("ObratDPH");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PlatneDo).HasColumnType("datetime");

                entity.Property(e => e.PlatneOd).HasColumnType("datetime");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RadekPd)
                    .HasColumnName("RadekPD")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.RadekPv)
                    .HasColumnName("RadekPV")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RefTpAn).HasColumnType("LONG");

                entity.Property(e => e.RelTypCin).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SAnalytikaTyp>(entity =>
            {
                entity.ToTable("sAnalytikaTyp");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DanNedan).HasColumnType("LONG");

                entity.Property(e => e.Dph)
                    .HasColumnName("DPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PenNaCeste).HasColumnType("LONG");

                entity.Property(e => e.PlatneDo).HasColumnType("datetime");

                entity.Property(e => e.PlatneOd).HasColumnType("datetime");

                entity.Property(e => e.PriVyd).HasColumnType("LONG");

                entity.Property(e => e.RadekPd)
                    .HasColumnName("RadekPD")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.RadekPv)
                    .HasColumnName("RadekPV")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RefOper).HasColumnType("LONG");

                entity.Property(e => e.SelDphobrat).HasColumnName("SelDPHObrat");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SBanky>(entity =>
            {
                entity.ToTable("sBanky");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sBanky_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.KodZeme)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Swift)
                    .HasColumnName("SWIFT")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Www)
                    .HasColumnName("WWW")
                    .HasMaxLength(96)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SBi>(entity =>
            {
                entity.ToTable("sBI");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.LAgId)
                    .HasColumnName("lAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.LId)
                    .HasColumnName("lID")
                    .HasColumnType("LONG");

                entity.Property(e => e.LValue)
                    .HasColumnName("lValue")
                    .HasColumnType("LONG");

                entity.Property(e => e.SColumn)
                    .HasColumnName("sColumn")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SName)
                    .HasColumnName("sName")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.STable)
                    .HasColumnName("sTable")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SValue)
                    .HasColumnName("sValue")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SCin>(entity =>
            {
                entity.ToTable("sCIN");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sCIN_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.RelTypDp)
                    .HasColumnName("RelTypDP")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SCkurs>(entity =>
            {
                entity.ToTable("sCKurs");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelCkurs)
                    .HasColumnName("RelCKurs")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SCkurspol>(entity =>
            {
                entity.ToTable("sCKurspol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Kod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Mnozstvi).HasColumnType("LONG");

                entity.Property(e => e.Nbs).HasColumnName("NBs");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Zeme)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SCkurspol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rCKurs");
            });

            modelBuilder.Entity<SCmeny>(entity =>
            {
                entity.ToTable("sCMeny");

                entity.HasIndex(e => new { e.Kod, e.NullCheckKod })
                    .HasName("IX_sCMeny_Kod")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDen).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Kod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.KoefEur)
                    .HasColumnName("KoefEUR")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.Mnozstvi).HasColumnType("LONG");

                entity.Property(e => e.NullCheckKod)
                    .HasColumnName("NullCheck_Kod")
                    .HasComputedColumnSql("(case when [Kod] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Zeme)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SCrady>(entity =>
            {
                entity.ToTable("sCRady");

                entity.HasIndex(e => e.RelCrAg)
                    .HasName("xRelCrAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefCrUc).HasColumnType("LONG");

                entity.Property(e => e.RefIdor)
                    .HasColumnName("RefIDor")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.RelCrAg).HasColumnType("LONG");

                entity.Property(e => e.RelCrTyp).HasColumnType("LONG");

                entity.Property(e => e.RelTpObd).HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SDicpover>(entity =>
            {
                entity.ToTable("sDICPover");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sDICPover_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SDp>(entity =>
            {
                entity.ToTable("sDP");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.IdDp)
                    .HasColumnName("IdDP")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Paragraf).HasColumnType("SHORT");

                entity.Property(e => e.RokDo).HasColumnType("SHORT");

                entity.Property(e => e.RokOd).HasColumnType("SHORT");

                entity.Property(e => e.Vypocet).HasColumnType("SHORT");
            });

            modelBuilder.Entity<SDph>(entity =>
            {
                entity.ToTable("sDPH");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sDPH_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.KodKhdph)
                    .HasColumnName("KodKHDPH")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.KodSh)
                    .HasColumnName("KodSH")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PlatneDo).HasColumnType("datetime");

                entity.Property(e => e.PlatneOd).HasColumnType("datetime");

                entity.Property(e => e.Popis).HasColumnType("MEMO");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Radky)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RatioKhdph).HasColumnName("RatioKHDPH");

                entity.Property(e => e.RefKodyPredmPln).HasColumnType("LONG");

                entity.Property(e => e.RefTpDph).HasColumnType("LONG");

                entity.Property(e => e.RelVlivKhdph)
                    .HasColumnName("RelVlivKHDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.VymDphText)
                    .HasMaxLength(240)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SDphtp>(entity =>
            {
                entity.ToTable("sDPHTp");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Dph)
                    .HasColumnName("DPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.PlatneDo).HasColumnType("datetime");

                entity.Property(e => e.PlatneOd).HasColumnType("datetime");

                entity.Property(e => e.Priznani).HasColumnType("LONG");

                entity.Property(e => e.Radky)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RelVlivKhdph)
                    .HasColumnName("RelVlivKHDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(120)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Serv>(entity =>
            {
                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_Serv_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CisDokl)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDokl).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatUkonceno).HasColumnType("datetime");

                entity.Property(e => e.DatVyrDo).HasColumnType("datetime");

                entity.Property(e => e.DatVyrizeno).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kemail)
                    .HasColumnName("KEmail")
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Kjmeno)
                    .HasColumnName("KJmeno")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ktel)
                    .HasColumnName("KTel")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Kutvar)
                    .HasColumnName("KUtvar")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PopZavady).HasColumnType("MEMO");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.PredpCena).HasColumnType("CURRENCY");

                entity.Property(e => e.PredpCenaCm)
                    .HasColumnName("PredpCenaCM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefOsoba).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RefZpPrij).HasColumnType("LONG");

                entity.Property(e => e.RefZpVydej).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelServStav).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpServ).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzNazev)
                    .HasColumnName("SKzNazev")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.SkzStext)
                    .HasColumnName("SKzSText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Zaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.ZalohaCm)
                    .HasColumnName("ZalohaCM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Servpol>(entity =>
            {
                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRp)
                    .HasColumnName("STextRP")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Servpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rServpol");
            });

            modelBuilder.Entity<ServPredm>(entity =>
            {
                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelNahrDily).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Soucasti)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.StavPrij)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.VadaPopis)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.Property(e => e.ZpReseni)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.ServPredm)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rServPredm");
            });

            modelBuilder.Entity<ServStav>(entity =>
            {
                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefOsoba).HasColumnType("LONG");

                entity.Property(e => e.RelServStav).HasColumnType("LONG");

                entity.Property(e => e.RelZpPosl).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.ServStav)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rServStav");
            });

            modelBuilder.Entity<SExtId>(entity =>
            {
                entity.ToTable("sExtID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.RefDocId)
                    .HasColumnName("RefDocID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefExtSys).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZmena).HasColumnType("LONG");
            });

            modelBuilder.Entity<SExtIdpol>(entity =>
            {
                entity.ToTable("sExtIDpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefDocId)
                    .HasColumnName("RefDocID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefTable)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SExtIdpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsExtIDpol");
            });

            modelBuilder.Entity<SExtSys>(entity =>
            {
                entity.ToTable("sExtSys");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SExtTools>(entity =>
            {
                entity.ToTable("sExtTools");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sExtTools_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Command)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Directory)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Parameters).HasColumnType("MEMO");

                entity.Property(e => e.Popis)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefAgEt)
                    .HasColumnName("RefAgET")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SExtToolsLog>(entity =>
            {
                entity.ToTable("sExtToolsLog");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Agenda)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Command).HasColumnType("MEMO");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Directory)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RunUser)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SExtToolsLog)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsExtToolsLog");
            });

            modelBuilder.Entity<SFormUh>(entity =>
            {
                entity.ToTable("sFormUh");

                entity.HasIndex(e => e.RelTyp)
                    .HasName("xRelTyp");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sFormUh_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bpuhr).HasColumnName("BPUhr");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.ForEet).HasColumnName("ForEET");

                entity.Property(e => e.Hodnota).HasColumnType("CURRENCY");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTyp).HasColumnType("LONG");

                entity.Property(e => e.RelTypFm)
                    .HasColumnName("RelTypFM")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UseInAgOt).HasColumnName("UseInAgOT");

                entity.Property(e => e.UseInAgPh).HasColumnName("UseInAgPH");
            });

            modelBuilder.Entity<SGdprDuvody>(entity =>
            {
                entity.ToTable("sGdprDuvody");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sGdprDuvody_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Platnost).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelObdobiDuvodu).HasColumnType("LONG");

                entity.Property(e => e.RelTypDuvodu).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(75)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SHospObd>(entity =>
            {
                entity.ToTable("sHospObd");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatumKho)
                    .HasColumnName("DatumKHO")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<SImo>(entity =>
            {
                entity.ToTable("sIMO");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sIMO_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SImopol>(entity =>
            {
                entity.ToTable("sIMOpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Roku).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SImopol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsIMOpol");
            });

            modelBuilder.Entity<SkAcn>(entity =>
            {
                entity.ToTable("SkACn");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_SkACn_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefSkCeny).HasColumnType("LONG");

                entity.Property(e => e.RelTpZkr).HasColumnType("LONG");

                entity.Property(e => e.Skupina)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SkAcnAd>(entity =>
            {
                entity.ToTable("SkACnAD");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Smlouva)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkAcnAd)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSkACnAD");
            });

            modelBuilder.Entity<SkAcnPol>(entity =>
            {
                entity.ToTable("SkACnPol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Nazev)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.PckcbDph)
                    .HasColumnName("PCKCbDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.ProdejC).HasColumnType("CURRENCY");

                entity.Property(e => e.ProdejZpc)
                    .HasColumnName("ProdejZPC")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStruct).HasColumnType("LONG");

                entity.Property(e => e.RelTpFix).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.ZpckcbDph)
                    .HasColumnName("ZPCKCbDPH")
                    .HasColumnType("CURRENCY");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkAcnPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSkACnPol");
            });

            modelBuilder.Entity<SKasaMonitory>(entity =>
            {
                entity.ToTable("sKasaMonitory");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sKasaMonitory_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.RelFontSize).HasColumnType("LONG");

                entity.Property(e => e.RelMrezim)
                    .HasColumnName("RelMRezim")
                    .HasColumnType("LONG");

                entity.Property(e => e.Tema)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SKasaMonitoryObraz>(entity =>
            {
                entity.ToTable("sKasaMonitoryObraz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cas).HasColumnType("LONG");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Soubor)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SKasaMonitoryObraz)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsKasaMonitoryObraz");
            });

            modelBuilder.Entity<SKasaMonitorySettings>(entity =>
            {
                entity.ToTable("sKasaMonitorySettings");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefKasa).HasColumnType("LONG");

                entity.Property(e => e.RefKasaMonitor).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.HasOne(d => d.RefKasaNavigation)
                    .WithMany(p => p.SKasaMonitorySettings)
                    .HasForeignKey(d => d.RefKasa)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsKasaMonitorySettingsK");

                entity.HasOne(d => d.RefKasaMonitorNavigation)
                    .WithMany(p => p.SKasaMonitorySettings)
                    .HasForeignKey(d => d.RefKasaMonitor)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsKasaMonitorySettingsM");
            });

            modelBuilder.Entity<SKasaOdlozPh>(entity =>
            {
                entity.ToTable("sKasaOdlozPH");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IdcnZ)
                    .HasColumnName("IDCnZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefKasa).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrPh)
                    .HasColumnName("ZaokrPH")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<SKasaOdlozPhpol>(entity =>
            {
                entity.ToTable("sKasaOdlozPHpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.IdcnZ)
                    .HasColumnName("IDCnZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefundId)
                    .HasColumnName("RefundID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSkTyp).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.StextRp)
                    .HasColumnName("STextRP")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SKasaOdlozPhpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsKasaOdlozPH");
            });

            modelBuilder.Entity<SKasaSkzButton>(entity =>
            {
                entity.ToTable("sKasaSKzButton");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.ButtonColor).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Poradi).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefKasa).HasColumnType("LONG");

                entity.Property(e => e.RefSkzButton)
                    .HasColumnName("RefSKzButton")
                    .HasColumnType("LONG");

                entity.Property(e => e.TextColor).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.HasOne(d => d.RefKasaNavigation)
                    .WithMany(p => p.SKasaSkzButton)
                    .HasForeignKey(d => d.RefKasa)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsKasaSKzButtonKasa");
            });

            modelBuilder.Entity<SKasaSkzButtonPol>(entity =>
            {
                entity.ToTable("sKasaSKzButtonPol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Button).HasColumnType("LONG");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SKasaSkzButtonPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsKasaSKzButton");

                entity.HasOne(d => d.RefSkzNavigation)
                    .WithMany(p => p.SKasaSkzButtonPol)
                    .HasForeignKey(d => d.RefSkz)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsKasaSKzButtonPol");
            });

            modelBuilder.Entity<SKasaUcty>(entity =>
            {
                entity.ToTable("sKasaUcty");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Edituje)
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Poradi).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefKasa).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.HasOne(d => d.RefKasaNavigation)
                    .WithMany(p => p.SKasaUcty)
                    .HasForeignKey(d => d.RefKasa)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsKasaUcty");
            });

            modelBuilder.Entity<SkCeny>(entity =>
            {
                entity.HasIndex(e => e.Ids)
                    .HasName("xIDS");

                entity.HasIndex(e => e.RelTpCeny)
                    .HasName("xRelTpCeny");

                entity.HasIndex(e => e.RelTpPlt)
                    .HasName("xRelTpPlt");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Marze).HasColumnType("SINGLE");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Rabat).HasColumnType("SINGLE");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSpid)
                    .HasColumnName("RefSPID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpCeny).HasColumnType("LONG");

                entity.Property(e => e.RelTpPlt).HasColumnType("LONG");

                entity.Property(e => e.RelTpZkr).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Sleva).HasColumnType("SINGLE");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SkCs>(entity =>
            {
                entity.ToTable("SkCS");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_SkCS_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.OceneniVyrNc).HasColumnName("OceneniVyrNC");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.PrepVceny).HasColumnName("PrepVCeny");

                entity.Property(e => e.PrepZpc).HasColumnName("PrepZPC");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAfterMr)
                    .HasColumnName("RelAfterMR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCenyVyr).HasColumnType("LONG");

                entity.Property(e => e.RelTpZkrNc)
                    .HasColumnName("RelTpZkrNC")
                    .HasColumnType("LONG");

                entity.Property(e => e.SdphNc).HasColumnName("SDphNC");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UpravNc).HasColumnName("UpravNC");

                entity.Property(e => e.ZmenSknePrep).HasColumnName("ZmenSKNePrep");
            });

            modelBuilder.Entity<SkCspol>(entity =>
            {
                entity.ToTable("SkCSpol");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.RefSkCeny)
                    .HasName("xRefSkCeny");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Marze).HasColumnType("SINGLE");

                entity.Property(e => e.Rabat).HasColumnType("SINGLE");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkCeny).HasColumnType("LONG");

                entity.Property(e => e.RelTpZkr).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Sleva).HasColumnType("SINGLE");

                entity.Property(e => e.UpravSex).HasColumnName("UpravSEx");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkCspol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSkCSpol");
            });

            modelBuilder.Entity<SkEuro>(entity =>
            {
                entity.ToTable("SkEURO");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_SkEURO_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cena).HasColumnType("LONG");

                entity.Property(e => e.Cena2).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Hhour1).HasColumnName("HHour1");

                entity.Property(e => e.Hhour2).HasColumnName("HHour2");

                entity.Property(e => e.Hhour3).HasColumnName("HHour3");

                entity.Property(e => e.Hhour4).HasColumnName("HHour4");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.MnozZvahy).HasColumnName("MnozZVahy");

                entity.Property(e => e.MoznostProd).HasColumnType("LONG");

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.OhranicCif).HasColumnType("LONG");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PopisPlu).HasColumnName("PopisPLU");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelAkce).HasColumnType("LONG");

                entity.Property(e => e.RelDpt)
                    .HasColumnName("RelDPT")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelMj)
                    .HasColumnName("RelMJ")
                    .HasColumnType("LONG");

                entity.Property(e => e.SpojPlu).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkKat>(entity =>
            {
                entity.HasIndex(e => e.RefNodeId)
                    .HasName("xRefNodeID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.FullTreeNode).HasColumnType("MEMO");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Node).HasColumnType("LONG");

                entity.Property(e => e.Obrazek)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Poradi).HasColumnType("LONG");

                entity.Property(e => e.Pozice)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.RefNodeId)
                    .HasColumnName("RefNodeID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasColumnType("MEMO");

                entity.Property(e => e.SupNodeIds)
                    .HasColumnName("SupNodeIDS")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Skmp>(entity =>
            {
                entity.ToTable("SKMP");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_SKMP_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DatumP).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PdatZ).HasColumnName("PDatZ");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefSkladC).HasColumnType("LONG");

                entity.Property(e => e.RefSkladZ).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefStr1).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RozdVp).HasColumnName("RozdVP");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Skmppol>(entity =>
            {
                entity.ToTable("SKMPpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz1)
                    .HasColumnName("RefSKz1")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStruct).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.VncpohV)
                    .HasColumnName("VNCPohV")
                    .HasColumnType("CURRENCY");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Skmppol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKMPpol");
            });

            modelBuilder.Entity<Skmv>(entity =>
            {
                entity.ToTable("SKMV");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_SKMV_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DatumP).HasColumnType("datetime");

                entity.Property(e => e.DatumVd)
                    .HasColumnName("DatumVD")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatumVp)
                    .HasColumnName("DatumVP")
                    .HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PdatZ).HasColumnName("PDatZ");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefStr1).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpVyr).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RozdVp).HasColumnName("RozdVP");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Skmvlist>(entity =>
            {
                entity.ToTable("SKMVlist");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Skmvlist)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKMVlist");
            });

            modelBuilder.Entity<Skmvpol>(entity =>
            {
                entity.ToTable("SKMVpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.VncpohV)
                    .HasColumnName("VNCPohV")
                    .HasColumnType("CURRENCY");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Skmvpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKMVpol");
            });

            modelBuilder.Entity<SKodyPredmPln>(entity =>
            {
                entity.ToTable("sKodyPredmPln");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sKodyPredmPln_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SKonfig>(entity =>
            {
                entity.ToTable("sKonfig");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cp)
                    .HasColumnName("CP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatRokDo).HasColumnType("datetime");

                entity.Property(e => e.DatRokOd).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Klic)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Logo).HasColumnType("LONGBINARY");

                entity.Property(e => e.LogoTp).HasColumnType("LONG");

                entity.Property(e => e.ObchDod)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Okres)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PodporaBi).HasColumnName("PodporaBI");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Prijm)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PzdAut).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.Registr)
                    .HasMaxLength(160)
                    .IsUnicode(false);

                entity.Property(e => e.RelOsTyp).HasColumnType("LONG");

                entity.Property(e => e.RelRokTp).HasColumnType("LONG");

                entity.Property(e => e.RelTpPzd)
                    .HasColumnName("RelTpPZD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelUtyp)
                    .HasColumnName("RelUTyp")
                    .HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Stamp).HasColumnType("LONGBINARY");

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Titul)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Verze).HasColumnType("LONG");

                entity.Property(e => e.VztahP)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Www)
                    .HasColumnName("WWW")
                    .HasMaxLength(96)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkParam>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Delka).HasColumnType("LONG");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTyp).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkParamList>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Skpp>(entity =>
            {
                entity.ToTable("SKPP");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_SKPP_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Skpppol>(entity =>
            {
                entity.ToTable("SKPPpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVnakl)
                    .HasColumnName("KcVNakl")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpVnakl)
                    .HasColumnName("RelTpVNakl")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Skpppol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKPPpol");
            });

            modelBuilder.Entity<Skpv>(entity =>
            {
                entity.ToTable("SKPV");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_SKPV_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloObj)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatObj).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefDopravci).HasColumnType("LONG");

                entity.Property(e => e.RefKasa).HasColumnType("LONG");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Skpvpol>(entity =>
            {
                entity.ToTable("SKPVpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefPol2).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgId2)
                    .HasColumnName("RelAgID2")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Skpvpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKPVpol");
            });

            modelBuilder.Entity<SkRefKat>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefKat).HasColumnType("LONG");
            });

            modelBuilder.Entity<SkRefObraz>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Popis)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Soubor)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkRefOdkazy>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Popis)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasColumnType("MEMO");
            });

            modelBuilder.Entity<SkRefParam>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.AgId)
                    .HasColumnName("AgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefParam).HasColumnType("LONG");

                entity.Property(e => e.ValCurrency).HasColumnType("CURRENCY");

                entity.Property(e => e.ValDate).HasColumnType("datetime");

                entity.Property(e => e.ValLong).HasColumnType("LONG");

                entity.Property(e => e.ValText)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkrefParamList>(entity =>
            {
                entity.ToTable("SKRefParamList");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefParam).HasColumnType("LONG");

                entity.Property(e => e.RefParamList).HasColumnType("LONG");
            });

            modelBuilder.Entity<SkRefSvazany>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Popis)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Soubor)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkRekl>(entity =>
            {
                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_SkRekl_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CisDokl)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloObj)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatObj).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DatumDokl).HasColumnType("datetime");

                entity.Property(e => e.DatumO).HasColumnType("datetime");

                entity.Property(e => e.DatumP).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kemail)
                    .HasColumnName("KEmail")
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Kjmeno)
                    .HasColumnName("KJmeno")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ktel)
                    .HasColumnName("KTel")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Kutvar)
                    .HasColumnName("KUtvar")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPrijem).HasColumnType("LONG");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RefZpVyr).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSerZpVyr).HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpRekl).HasColumnType("LONG");

                entity.Property(e => e.SerDic)
                    .HasColumnName("SerDIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.SerFirma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SerIcdph)
                    .HasColumnName("SerICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.SerIco)
                    .HasColumnName("SerICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SerJmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.SerKemail)
                    .HasColumnName("SerKEmail")
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.SerKjmeno)
                    .HasColumnName("SerKJmeno")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.SerKtel)
                    .HasColumnName("SerKTel")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.SerKutvar)
                    .HasColumnName("SerKUtvar")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SerObec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.SerPopis)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.SerPsc)
                    .HasColumnName("SerPSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SerRefAd)
                    .HasColumnName("SerRefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.SerRefZeme).HasColumnType("LONG");

                entity.Property(e => e.SerText)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.SerUlice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.SerUtvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SerZpPosl)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SerZpVyr)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Spopis)
                    .HasColumnName("SPopis")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");

                entity.Property(e => e.ZpVyr)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkReklpol>(entity =>
            {
                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Counter).HasColumnType("LONG");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefOldZpVyr).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZpVyr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Servis).HasColumnType("LONG");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkReklpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSkReklpol");
            });

            modelBuilder.Entity<SkSt>(entity =>
            {
                entity.HasIndex(e => e.RefSklad)
                    .HasName("xRefSklad");

                entity.HasIndex(e => e.Vetev1)
                    .HasName("xVetev1");

                entity.HasIndex(e => e.Vetev2)
                    .HasName("xVetev2");

                entity.HasIndex(e => e.Vetev3)
                    .HasName("xVetev3");

                entity.HasIndex(e => e.Vetev4)
                    .HasName("xVetev4");

                entity.HasIndex(e => e.Vetev5)
                    .HasName("xVetev5");

                entity.HasIndex(e => e.Vetev6)
                    .HasName("xVetev6");

                entity.HasIndex(e => e.Vetev7)
                    .HasName("xVetev7");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.IoOdd)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RelNomIo).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Vetev1)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Vetev2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Vetev3)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Vetev4)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Vetev5)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Vetev6)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Vetev7)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefSkladNavigation)
                    .WithMany(p => p.SkSt)
                    .HasForeignKey(d => d.RefSklad)
                    .HasConstraintName("sSkladSkSt");
            });

            modelBuilder.Entity<SKsym>(entity =>
            {
                entity.ToTable("sKSym");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sKSym_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(96)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Skz>(entity =>
            {
                entity.ToTable("SKz");

                entity.HasIndex(e => e.Ean)
                    .HasName("xEAN");

                entity.HasIndex(e => e.Ids)
                    .HasName("xIDS");

                entity.HasIndex(e => e.Nazev)
                    .HasName("xSTEXT");

                entity.HasIndex(e => e.Plu)
                    .HasName("xPLU");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => e.RefSkSkup)
                    .HasName("xRefSkSkup");

                entity.HasIndex(e => e.RefSklad)
                    .HasName("xRefSklad");

                entity.HasIndex(e => e.RefStruct)
                    .HasName("xRefStruct");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CheckTpDphpdp).HasColumnName("CheckTpDPHPDP");

                entity.Property(e => e.CmkodNc)
                    .HasColumnName("CMKodNC")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CmkodPc)
                    .HasColumnName("CMKodPC")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Dodani)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Doprava)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ean)
                    .HasColumnName("EAN")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Iobchod).HasColumnName("IObchod");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mj2)
                    .HasColumnName("MJ2")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mj2koef).HasColumnName("MJ2Koef");

                entity.Property(e => e.Mj3)
                    .HasColumnName("MJ3")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mj3koef).HasColumnName("MJ3Koef");

                entity.Property(e => e.Mjcn)
                    .HasColumnName("MJCn")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MjcnKoef).HasColumnName("MJCnKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Naklad)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NakupC).HasColumnType("CURRENCY");

                entity.Property(e => e.NakupCm)
                    .HasColumnName("NakupCM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.NakupDph)
                    .HasColumnName("NakupDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Nazev1)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Nazev2)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.NazevRp)
                    .HasColumnName("NazevRP")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.ObjNazev)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Obrazek)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Plu)
                    .HasColumnName("PLU")
                    .HasColumnType("LONG");

                entity.Property(e => e.Popis).HasColumnType("MEMO");

                entity.Property(e => e.Popis2).HasColumnType("MEMO");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.ProdejCm)
                    .HasColumnName("ProdejCM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.ProdejDph)
                    .HasColumnName("ProdejDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.ProdejKc).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkEuro)
                    .HasColumnName("RefSkEURO")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkSkup).HasColumnType("LONG");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RefStruct).HasColumnType("LONG");

                entity.Property(e => e.RelDphn)
                    .HasColumnName("RelDPHn")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDphp)
                    .HasColumnName("RelDPHp")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSkDruh).HasColumnType("LONG");

                entity.Property(e => e.RelSkTyp).HasColumnType("LONG");

                entity.Property(e => e.RelSkzVc)
                    .HasColumnName("RelSKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDphp)
                    .HasColumnName("RelTpDPHp")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDphv)
                    .HasColumnName("RelTpDPHv")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpFix).HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Stext1)
                    .HasColumnName("SText1")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Stext2)
                    .HasColumnName("SText2")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Vnakup)
                    .HasColumnName("VNakup")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Vynos)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Vyrobce)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.Property(e => e.ZpravaP)
                    .HasMaxLength(91)
                    .IsUnicode(false);

                entity.Property(e => e.ZpravaV)
                    .HasMaxLength(91)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefSkSkupNavigation)
                    .WithMany(p => p.Skz)
                    .HasForeignKey(d => d.RefSkSkup)
                    .HasConstraintName("rSkCSSKz");

                entity.HasOne(d => d.RefSkladNavigation)
                    .WithMany(p => p.Skz)
                    .HasForeignKey(d => d.RefSklad)
                    .HasConstraintName("rsSkladSKz");

                entity.HasOne(d => d.RefStructNavigation)
                    .WithMany(p => p.Skz)
                    .HasForeignKey(d => d.RefStruct)
                    .HasConstraintName("rSkStSKz");
            });

            modelBuilder.Entity<SkzBuf>(entity =>
            {
                entity.ToTable("SKzBuf");

                entity.HasIndex(e => new { e.RefSkz, e.NullCheckRefSkz })
                    .HasName("IX_SKzBuf_RefSKz")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.NullCheckRefSkz)
                    .HasColumnName("NullCheck_RefSKz")
                    .HasComputedColumnSql("(case when [RefSKz] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.Vnakup)
                    .HasColumnName("VNakup")
                    .HasColumnType("CURRENCY");

                entity.HasOne(d => d.RefSkzNavigation)
                    .WithMany(p => p.SkzBuf)
                    .HasForeignKey(d => d.RefSkz)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzBuf");
            });

            modelBuilder.Entity<SkzCn>(entity =>
            {
                entity.ToTable("SKzCn");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.RefSkCeny)
                    .HasName("xRefSkCeny");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.ProdejC).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkCeny).HasColumnType("LONG");

                entity.Property(e => e.RelTpFix).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkzCn)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzCn");
            });

            modelBuilder.Entity<SkzCnPol>(entity =>
            {
                entity.ToTable("SKzCnPol");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.ProdejC).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkCeny).HasColumnType("LONG");

                entity.Property(e => e.RelTpFix).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkzCnPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzCnPol");
            });

            modelBuilder.Entity<SkzInv>(entity =>
            {
                entity.ToTable("SKzInv");

                entity.HasIndex(e => e.Ean)
                    .HasName("xEAN");

                entity.HasIndex(e => e.Ids)
                    .HasName("xIDS");

                entity.HasIndex(e => e.Nazev)
                    .HasName("xSTEXT");

                entity.HasIndex(e => e.Plu)
                    .HasName("xPLU");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.RefSklad)
                    .HasName("xRefSklad");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ean)
                    .HasColumnName("EAN")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Nazev)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Plu)
                    .HasColumnName("PLU")
                    .HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.PrenesInvSpol).HasColumnName("PrenesInvSPol");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefDokl).HasColumnType("LONG");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStruct).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSkDruh).HasColumnType("LONG");

                entity.Property(e => e.RelSkTyp).HasColumnType("LONG");

                entity.Property(e => e.RelSkzVc)
                    .HasColumnName("RelSKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZcTp).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Vnakup)
                    .HasColumnName("VNakup")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.VnakupC)
                    .HasColumnName("VNakupC")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.VnakupJ)
                    .HasColumnName("VNakupJ")
                    .HasColumnType("CURRENCY");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkzInv)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzInv");
            });

            modelBuilder.Entity<SkzInvLst>(entity =>
            {
                entity.ToTable("SKzInvLst");

                entity.HasIndex(e => e.RefSklad)
                    .HasName("xRefSklad");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SkzInvSeznamy>(entity =>
            {
                entity.ToTable("SKzInvSeznamy");

                entity.HasIndex(e => e.RefSklad)
                    .HasName("xRefSklad");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_SKzInvSeznamy_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SkzInvSeznamyPol>(entity =>
            {
                entity.ToTable("SKzInvSeznamyPol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefInvPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkzInvSeznamyPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzInvSeznamyPol");
            });

            modelBuilder.Entity<SkzInvVc>(entity =>
            {
                entity.ToTable("SKzInvVC");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ean)
                    .HasColumnName("EAN")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Nazev)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Plu)
                    .HasColumnName("PLU")
                    .HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.PrenesInvSpol).HasColumnName("PrenesInvSPol");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefDokl).HasColumnType("LONG");

                entity.Property(e => e.RefInvPol).HasColumnType("LONG");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStruct).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSkDruh).HasColumnType("LONG");

                entity.Property(e => e.RelSkTyp).HasColumnType("LONG");

                entity.Property(e => e.RelSkzVc)
                    .HasColumnName("RelSKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZcTp).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Vnakup)
                    .HasColumnName("VNakup")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.VnakupC)
                    .HasColumnName("VNakupC")
                    .HasColumnType("CURRENCY");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkzInvVc)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzInvVC");
            });

            modelBuilder.Entity<SkzInvZc>(entity =>
            {
                entity.ToTable("SKzInvZc");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.RelSkDruh).HasColumnType("LONG");

                entity.Property(e => e.RelZcTp).HasColumnType("LONG");
            });

            modelBuilder.Entity<SkzIoZbozi>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<SkzNc>(entity =>
            {
                entity.ToTable("SKzNC");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DobaDod).HasColumnType("LONG");

                entity.Property(e => e.Ean)
                    .HasColumnName("EAN")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjean)
                    .HasColumnName("MJEAN")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJkoef");

                entity.Property(e => e.MjkoefEan).HasColumnName("MJkoefEAN");

                entity.Property(e => e.NakupC).HasColumnType("CURRENCY");

                entity.Property(e => e.ObjKod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.ObjNazev)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PrintEan).HasColumnName("PrintEAN");

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDbDod).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkzNc)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzNC");
            });

            modelBuilder.Entity<SkzObj>(entity =>
            {
                entity.ToTable("SKzOBJ");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJkoef");

                entity.Property(e => e.NakupC).HasColumnType("CURRENCY");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ObjKod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.ObjNazev)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkzNc)
                    .HasColumnName("RefSKzNC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefStruct).HasColumnType("LONG");

                entity.Property(e => e.RelSkTyp).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTp).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkzPhTmp>(entity =>
            {
                entity.ToTable("SKzPhTmp");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.HasIndex(e => e.User)
                    .HasName("xUser");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.KcOceneni).HasColumnType("CURRENCY");

                entity.Property(e => e.PohId)
                    .HasColumnName("PohID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelOp)
                    .HasColumnName("RelOP")
                    .HasColumnType("LONG");

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Vnakup)
                    .HasColumnName("VNakup")
                    .HasColumnType("CURRENCY");
            });

            modelBuilder.Entity<SkzPoh>(entity =>
            {
                entity.ToTable("SKzPoh");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.HasIndex(e => e.RelAg)
                    .HasName("xRelAg");

                entity.HasIndex(e => e.RelId)
                    .HasName("xRelID");

                entity.HasIndex(e => e.RelOp)
                    .HasName("xRelOP");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcOceneni).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjvyr).HasColumnName("MJvyr");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PohKc).HasColumnType("CURRENCY");

                entity.Property(e => e.PohPmj).HasColumnName("PohPMJ");

                entity.Property(e => e.PolSkzVc)
                    .HasColumnName("PolSKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RefUd)
                    .HasColumnName("RefUD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelIdv)
                    .HasColumnName("RelIDV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelOp)
                    .HasColumnName("RelOP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.SkUd)
                    .HasColumnName("SkUD")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.SkUmd)
                    .HasColumnName("SkUMD")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Vnakup)
                    .HasColumnName("VNakup")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefSkzNavigation)
                    .WithMany(p => p.SkzPoh)
                    .HasForeignKey(d => d.RefSkz)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzPoh");
            });

            modelBuilder.Entity<SkzPol>(entity =>
            {
                entity.ToTable("SKzPol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.NevysklSz).HasColumnName("NevysklSZ");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.PrijemSz).HasColumnName("PrijemSZ");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPol).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkzPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzPol");
            });

            modelBuilder.Entity<SkzRecalcZ>(entity =>
            {
                entity.ToTable("SKzRecalcZ");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.HasIndex(e => e.User)
                    .HasName("xUser");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpRecalc).HasColumnType("LONG");

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkzRefV>(entity =>
            {
                entity.ToTable("SKzRefV");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.HasIndex(e => e.User)
                    .HasName("xUser");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCenyVyr).HasColumnType("LONG");

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkzSkup>(entity =>
            {
                entity.ToTable("SKzSkup");

                entity.HasIndex(e => new { e.Kod, e.NullCheckKod })
                    .HasName("IX_SKzSkup_Kod")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckKod)
                    .HasColumnName("NullCheck_Kod")
                    .HasComputedColumnSql("(case when [Kod] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obrazek)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasColumnType("MEMO");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SkzSkupPol>(entity =>
            {
                entity.ToTable("SKzSkupPol");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkzSkupPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsSKzSkupSKzSkupPol");

                entity.HasOne(d => d.RefSkzNavigation)
                    .WithMany(p => p.SkzSkupPol)
                    .HasForeignKey(d => d.RefSkz)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsSKzSKzSkupPol");
            });

            modelBuilder.Entity<SkzVc>(entity =>
            {
                entity.ToTable("SKzVC");

                entity.HasIndex(e => e.Ids)
                    .HasName("xIDS");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.HasIndex(e => e.Vcislo)
                    .HasName("xVCislo");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefStruct).HasColumnType("LONG");

                entity.Property(e => e.RelSkzVc)
                    .HasColumnName("RelSKzVc")
                    .HasColumnType("LONG");

                entity.Property(e => e.StavVc).HasColumnName("StavVC");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SkzVc)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzSKzVC");
            });

            modelBuilder.Entity<SkzVchst>(entity =>
            {
                entity.ToTable("SKzVChst");

                entity.HasIndex(e => e.RefVc)
                    .HasName("xRefVC");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.PohPmj).HasColumnName("PohPMJ");

                entity.Property(e => e.RefVc)
                    .HasColumnName("RefVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelOp)
                    .HasColumnName("RelOP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSkzpAg)
                    .HasColumnName("RelSKZpAg")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefVcNavigation)
                    .WithMany(p => p.SkzVchst)
                    .HasForeignKey(d => d.RefVc)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzVChst");
            });

            modelBuilder.Entity<SkzVcp>(entity =>
            {
                entity.ToTable("SKzVCp");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgIddst)
                    .HasColumnName("RelAgIDdst")
                    .HasColumnType("LONG");

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SkzVcpoh>(entity =>
            {
                entity.ToTable("SKzVCPoh");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.HasIndex(e => e.RefVc)
                    .HasName("xRefVC");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.PohPmj).HasColumnName("PohPMJ");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefVc)
                    .HasColumnName("RefVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelOp)
                    .HasColumnName("RelOP")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefVcNavigation)
                    .WithMany(p => p.SkzVcpoh)
                    .HasForeignKey(d => d.RefVc)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rSKzSKzVCPoh");
            });

            modelBuilder.Entity<SkzVnchist>(entity =>
            {
                entity.ToTable("SKzVNChist");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.Vnc)
                    .HasColumnName("VNC")
                    .HasColumnType("CURRENCY");
            });

            modelBuilder.Entity<SkzVntmp>(entity =>
            {
                entity.ToTable("SKzVNTmp");

                entity.HasIndex(e => e.RefSkz)
                    .HasName("xRefSKz");

                entity.HasIndex(e => e.User)
                    .HasName("xUser");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Pnakup)
                    .HasColumnName("PNakup")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ud)
                    .HasColumnName("UD")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Udtxt)
                    .HasColumnName("UDtxt")
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Umd)
                    .HasColumnName("UMD")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Umdtxt)
                    .HasColumnName("UMDtxt")
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Umdud)
                    .HasColumnName("UMDUD")
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Vnc)
                    .HasColumnName("VNC")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.VncocJ)
                    .HasColumnName("VNCOcJ")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Vncr)
                    .HasColumnName("VNCr")
                    .HasColumnType("CURRENCY");
            });

            modelBuilder.Entity<SMj>(entity =>
            {
                entity.ToTable("sMJ");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sMJ_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RefMj)
                    .HasColumnName("RefMJ")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Smlouvy>(entity =>
            {
                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_Smlouvy_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatPlatDo).HasColumnType("datetime");

                entity.Property(e => e.DatPlatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSmlouvy).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelKateg).HasColumnType("LONG");

                entity.Property(e => e.RelTpSml).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaObd).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SmsBrany>(entity =>
            {
                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_SmsBrany_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.RelBranaTyp).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SmsSent>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.GoSmsLink)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Recipients).HasColumnType("MEMO");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelBrana).HasColumnType("LONG");

                entity.Property(e => e.State).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasColumnType("MEMO");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SmsTmpl>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Recipients).HasColumnType("MEMO");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelBrana).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasColumnType("MEMO");
            });

            modelBuilder.Entity<SMzFond>(entity =>
            {
                entity.ToTable("sMzFond");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sMzFond_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SMzMist>(entity =>
            {
                entity.ToTable("sMzMist");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sMzMist_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Misto)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Okres)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stat)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SMzPoj>(entity =>
            {
                entity.ToTable("sMzPoj");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo1)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo2)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DataBox)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(74)
                    .IsUnicode(false);

                entity.Property(e => e.Kod)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SMzZivPj>(entity =>
            {
                entity.ToTable("sMzZivPj");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sMzZivPj_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SOdpOsoby>(entity =>
            {
                entity.ToTable("sOdpOsoby");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatOdch).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Funkce)
                    .HasMaxLength(42)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Prijmeni)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Titul)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SPlatidla>(entity =>
            {
                entity.ToTable("sPlatidla");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sPlatidla_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Symbol)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPlatidlaPol>(entity =>
            {
                entity.ToTable("sPlatidlaPol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SPlatidlaPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsPlatidla");
            });

            modelBuilder.Entity<SPrelom>(entity =>
            {
                entity.ToTable("sPrelom");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.UsIds)
                    .HasColumnName("UsIDS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsRok).HasColumnType("LONG");
            });

            modelBuilder.Entity<SProvozovny>(entity =>
            {
                entity.ToTable("sProvozovny");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sProvozovny_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SPtitul>(entity =>
            {
                entity.ToTable("sPTitul");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sPTitul_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SRecordLabels>(entity =>
            {
                entity.ToTable("sRecordLabels");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sRecordLabels_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Color)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SRegDphvEu>(entity =>
            {
                entity.ToTable("sRegDPHvEU");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PlatceDo).HasColumnType("datetime");

                entity.Property(e => e.PlatceOd).HasColumnType("datetime");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SReklStav>(entity =>
            {
                entity.ToTable("sReklStav");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sReklStav_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RelReklAg).HasColumnType("LONG");

                entity.Property(e => e.RelReklZpVyr).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SReklZpPredani>(entity =>
            {
                entity.ToTable("sReklZpPredani");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SReklZpVyr>(entity =>
            {
                entity.ToTable("sReklZpVyr");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.RelTyp).HasColumnType("LONG");
            });

            modelBuilder.Entity<SRp>(entity =>
            {
                entity.ToTable("sRP");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sRP_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.KcRp)
                    .HasColumnName("KcRP")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Nazev)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.StextDoc)
                    .HasColumnName("STextDoc")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SSklad>(entity =>
            {
                entity.ToTable("sSklad");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sSklad_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.AucetM)
                    .HasColumnName("AUcetM")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.AucetNv)
                    .HasColumnName("AUcetNV")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.AucetP)
                    .HasColumnName("AUcetP")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.AucetV)
                    .HasColumnName("AUcetV")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.AucetVvm)
                    .HasColumnName("AUcetVVM")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.AucetZ)
                    .HasColumnName("AUcetZ")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.AucetZv)
                    .HasColumnName("AUcetZV")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DolniMezPlu)
                    .HasColumnName("DolniMezPLU")
                    .HasColumnType("LONG");

                entity.Property(e => e.HorniMezPlu)
                    .HasColumnName("HorniMezPLU")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MPhSynchSk).HasColumnName("mPhSynchSk");

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.OmezSkladPlu).HasColumnName("OmezSkladPLU");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.RefUsr).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SSkladCn>(entity =>
            {
                entity.ToTable("sSkladCn");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkSkup).HasColumnType("LONG");
            });

            modelBuilder.Entity<SSkladD>(entity =>
            {
                entity.ToTable("sSkladD");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.UsIds)
                    .HasColumnName("UsIDS")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SSkReklPosl>(entity =>
            {
                entity.ToTable("sSkReklPosl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.RelTyp).HasColumnType("LONG");
            });

            modelBuilder.Entity<SSkReklVyr>(entity =>
            {
                entity.ToTable("sSkReklVyr");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.RelTyp).HasColumnType("LONG");
            });

            modelBuilder.Entity<SSmlouvy>(entity =>
            {
                entity.ToTable("sSmlouvy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RelTyp).HasColumnType("LONG");
            });

            modelBuilder.Entity<SStavyZak>(entity =>
            {
                entity.ToTable("sStavyZak");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sStavyZak_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SStr>(entity =>
            {
                entity.ToTable("sSTR");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sSTR_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefProvozovna).HasColumnType("LONG");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SSzDpheu>(entity =>
            {
                entity.ToTable("sSzDPHEU");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sSzDPHEU_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet1)
                    .HasColumnName("AUcet1")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Aucet2)
                    .HasColumnName("AUcet2")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Aucet3)
                    .HasColumnName("AUcet3")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SSzDpheupol>(entity =>
            {
                entity.ToTable("sSzDPHEUpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.PlatneDo).HasColumnType("datetime");

                entity.Property(e => e.PlatneOd).HasColumnType("datetime");

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SSzDpheupol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsSzDPHEU");
            });

            modelBuilder.Entity<STexty>(entity =>
            {
                entity.ToTable("sTexty");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Priorita).HasColumnType("LONG");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.Skupina)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<Stwlock>(entity =>
            {
                entity.ToTable("stwlock");

                entity.HasIndex(e => new { e.Rowid, e.Tablename })
                    .HasName("ix_stwlock")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Processid).HasColumnName("processid");

                entity.Property(e => e.Rowid).HasColumnName("rowid");

                entity.Property(e => e.Spid).HasColumnName("spid");

                entity.Property(e => e.Tablename)
                    .IsRequired()
                    .HasColumnName("tablename")
                    .HasMaxLength(128);
            });

            modelBuilder.Entity<STypFormUh>(entity =>
            {
                entity.ToTable("sTypFormUh");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SUcet>(entity =>
            {
                entity.ToTable("sUcet");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sUcet_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Banka)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Iban)
                    .HasColumnName("IBAN")
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.KcStav).HasColumnType("CURRENCY");

                entity.Property(e => e.KcmPev).HasColumnName("KCmPev");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefHb)
                    .HasColumnName("RefHB")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.RefUsr).HasColumnType("LONG");

                entity.Property(e => e.RegDoklFm).HasColumnName("RegDoklFM");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelJeUcet).HasColumnType("LONG");

                entity.Property(e => e.RelTermHwTp).HasColumnType("LONG");

                entity.Property(e => e.Sepa).HasColumnName("SEPA");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Swift)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Zrusen).HasColumnType("datetime");
            });

            modelBuilder.Entity<SUsrAct>(entity =>
            {
                entity.ToTable("sUsrAct");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CntRec).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Log).HasColumnType("MEMO");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pcname)
                    .HasColumnName("PCName")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpActOp)
                    .HasColumnName("RelTpActOP")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SUsrAgS>(entity =>
            {
                entity.ToTable("sUsrAgS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelSubId)
                    .HasColumnName("RelSubID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpGrid).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SUsrAgSpzd>(entity =>
            {
                entity.ToTable("sUsrAgSPzd");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelSubId)
                    .HasColumnName("RelSubID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpGrid).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SUsrFrm>(entity =>
            {
                entity.ToTable("sUsrFrm");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelSubId)
                    .HasColumnName("RelSubID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");
            });

            modelBuilder.Entity<SUsrSet>(entity =>
            {
                entity.ToTable("sUsrSet");

                entity.HasIndex(e => e.Ids)
                    .HasName("xIDS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.SettingsXml)
                    .HasColumnName("SettingsXML")
                    .HasColumnType("MEMO");

                entity.Property(e => e.Stamp).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SUsrSetPzd>(entity =>
            {
                entity.ToTable("sUsrSetPzd");

                entity.HasIndex(e => e.Ids)
                    .HasName("xIDS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.SettingsXml)
                    .HasColumnName("SettingsXML")
                    .HasColumnType("MEMO");

                entity.Property(e => e.Stamp).HasColumnType("LONGBINARY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SVp>(entity =>
            {
                entity.ToTable("sVP");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Code).HasColumnType("MEMO");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ListIds)
                    .HasColumnName("ListIDS")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.ListStext)
                    .HasColumnName("ListSText")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Nazev)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelVptb)
                    .HasColumnName("RelVPTb")
                    .HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.Property(e => e.TabItem)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.TabMain)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrAgId)
                    .HasColumnName("UsrAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<SVppol>(entity =>
            {
                entity.ToTable("sVPpol");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Definice).HasColumnType("MEMO");

                entity.Property(e => e.Delka).HasColumnType("LONG");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Popis)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelRow).HasColumnType("LONG");

                entity.Property(e => e.RelTyp).HasColumnType("LONG");

                entity.Property(e => e.RelUl)
                    .HasColumnName("RelUL")
                    .HasColumnType("LONG");

                entity.Property(e => e.Settings).HasColumnType("LONGBINARY");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SVppol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsVPpol");
            });

            modelBuilder.Entity<SVpref>(entity =>
            {
                entity.ToTable("sVPref");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefPrm).HasColumnType("LONG");

                entity.Property(e => e.RelUl)
                    .HasColumnName("RelUL")
                    .HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SVpref)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsVPref");
            });

            modelBuilder.Entity<SVpul>(entity =>
            {
                entity.ToTable("sVPUL");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sVPUL_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UseConstId).HasColumnName("UseConstID");

                entity.Property(e => e.UsrAgId)
                    .HasColumnName("UsrAgID")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<SVpulpol>(entity =>
            {
                entity.ToTable("sVPULpol");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.ConstId)
                    .HasColumnName("ConstID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SVpulpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsVPULpol");
            });

            modelBuilder.Entity<SZak>(entity =>
            {
                entity.ToTable("sZAK");

                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_sZAK_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Ost1)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Ost2)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PlPredani).HasColumnType("datetime");

                entity.Property(e => e.PlZahaj).HasColumnType("datetime");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Predani).HasColumnType("datetime");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefOsoba).HasColumnType("LONG");

                entity.Property(e => e.RefPzdJ).HasColumnType("LONG");

                entity.Property(e => e.RefStav).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Zahajeni).HasColumnType("datetime");

                entity.Property(e => e.Zaruka).HasColumnType("datetime");
            });

            modelBuilder.Entity<SZakplan>(entity =>
            {
                entity.ToTable("sZAKplan");

                entity.HasIndex(e => e.OrderFld)
                    .HasName("xOrderFld");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelDruhOper).HasColumnType("LONG");

                entity.Property(e => e.Zdroj)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.SZakplan)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rsZAKplan");
            });

            modelBuilder.Entity<SZeme>(entity =>
            {
                entity.ToTable("sZeme");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sZeme_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Kod)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.KodOsn)
                    .HasColumnName("KodOSN")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.KodVateu)
                    .HasColumnName("KodVATEU")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RelZeme).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SZpVyr>(entity =>
            {
                entity.ToTable("sZpVyr");

                entity.HasIndex(e => new { e.Ids, e.NullCheckIds })
                    .HasName("IX_sZpVyr_IDS")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckIds)
                    .HasColumnName("NullCheck_IDS")
                    .HasComputedColumnSql("(case when [IDS] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RefPohyb).HasColumnType("LONG");

                entity.Property(e => e.RefTypUzn).HasColumnType("LONG");

                entity.Property(e => e.RefUznana).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TAd>(entity =>
            {
                entity.ToTable("tAD");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Adkredit)
                    .HasColumnName("ADKredit")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Adsplat)
                    .HasColumnName("ADSplat")
                    .HasColumnType("SHORT");

                entity.Property(e => e.Adtoler)
                    .HasColumnName("ADToler")
                    .HasColumnType("LONG");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatNar).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DataBox)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Funkce)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.GdprDatPostAkt).HasColumnType("datetime");

                entity.Property(e => e.GdprDatPostHist).HasColumnType("datetime");

                entity.Property(e => e.GdprDatPreAkt).HasColumnType("datetime");

                entity.Property(e => e.GdprDatPreHist).HasColumnType("datetime");

                entity.Property(e => e.GdprDatProAkt).HasColumnType("datetime");

                entity.Property(e => e.GdprDatProHist).HasColumnType("datetime");

                entity.Property(e => e.Gps)
                    .HasColumnName("GPS")
                    .HasMaxLength(38)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Icq)
                    .HasColumnName("ICQ")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.IoId)
                    .HasColumnName("IoID")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.KcObrat).HasColumnType("CURRENCY");

                entity.Property(e => e.KcObrat2).HasColumnType("CURRENCY");

                entity.Property(e => e.Klic)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Okres)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Osloveni)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ost1)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Ost2)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefOsoba).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcetFv)
                    .HasColumnName("RefUcetFV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.RelPkFp)
                    .HasColumnName("RelPkFP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPkFv)
                    .HasColumnName("RelPkFV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPohl).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSzDphskz)
                    .HasColumnName("RelSzDPHskz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDphfp)
                    .HasColumnName("RelTpDPHFP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDphfv)
                    .HasColumnName("RelTpDPHFV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpIo).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RodCisl)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Skupina)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Skype)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Smlouva)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Www)
                    .HasColumnName("WWW")
                    .HasMaxLength(96)
                    .IsUnicode(false);

                entity.Property(e => e.Zprava)
                    .HasMaxLength(64)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TAddodaci>(entity =>
            {
                entity.ToTable("tADdodaci");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TAdgdpr>(entity =>
            {
                entity.ToTable("tADgdpr");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatOdvolani).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefGdprDuvod).HasColumnType("LONG");

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TAdgdpr)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtADgdpr");
            });

            modelBuilder.Entity<TAdhist>(entity =>
            {
                entity.ToTable("tADhist");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Akce)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dopis).HasColumnType("MEMO");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Klic)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Ostatni)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddoc)
                    .HasColumnName("RefADdoc")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefDataBox).HasColumnType("LONG");

                entity.Property(e => e.RefEmail).HasColumnType("LONG");

                entity.Property(e => e.RefSms).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Termin).HasColumnType("datetime");

                entity.Property(e => e.Text1)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Text2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Text3)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Text4)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<TAducet>(entity =>
            {
                entity.ToTable("tADucet");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.BankaNazev)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.BankaObec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.BankaStat).HasColumnType("LONG");

                entity.Property(e => e.BankaUlice)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Popis)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TAducet)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtADucet");
            });

            modelBuilder.Entity<TBv>(entity =>
            {
                entity.ToTable("tBV");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.BankIdent)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatPlat).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcMu)
                    .HasColumnName("KcMU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcU).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LikvCm).HasColumnName("LikvCM");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelMobch).HasColumnType("LONG");

                entity.Property(e => e.RelObDph)
                    .HasColumnName("RelObDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObKh)
                    .HasColumnName("RelObKH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObMoss)
                    .HasColumnName("RelObMOSS")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObSh)
                    .HasColumnName("RelObSH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpBv)
                    .HasColumnName("RelTpBV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(96)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Vypis)
                    .HasMaxLength(11)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TBvpol>(entity =>
            {
                entity.ToTable("tBVpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.JcbezDph)
                    .HasColumnName("JCbezDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpPrepl).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TBvpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtBVpol");
            });

            modelBuilder.Entity<TCp>(entity =>
            {
                entity.ToTable("tCP");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CasOdj)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CasPrj)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CenyPhm).HasColumnName("CenyPHM");

                entity.Property(e => e.Cil).HasColumnType("MEMO");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatVyuct).HasColumnType("datetime");

                entity.Property(e => e.DatZauct).HasColumnType("datetime");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Odjezd)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OstZam)
                    .HasColumnName("OstZAM")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Prijezd)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.ProcPhm).HasColumnName("ProcPHM");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefRidic).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefVoz)
                    .HasColumnName("RefVOZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDrVoz).HasColumnType("LONG");

                entity.Property(e => e.RelGlxSkupSaz).HasColumnType("LONG");

                entity.Property(e => e.RelPhm)
                    .HasColumnName("RelPHM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpZam).HasColumnType("LONG");

                entity.Property(e => e.RelTypCp)
                    .HasColumnName("RelTypCP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypVoz).HasColumnType("LONG");

                entity.Property(e => e.RelZpDpr).HasColumnType("LONG");

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucel)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.HasOne(d => d.RefVozNavigation)
                    .WithMany(p => p.TCp)
                    .HasForeignKey(d => d.RefVoz)
                    .HasConstraintName("rDJvoztCP");
            });

            modelBuilder.Entity<TCpetapy>(entity =>
            {
                entity.ToTable("tCPEtapy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CasDo)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CasKonPr)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CasOd)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CasPocPr)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.MistoDo)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.MistoOd)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelZeme).HasColumnType("LONG");

                entity.Property(e => e.RelZpDpr).HasColumnType("LONG");

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TCpnahr>(entity =>
            {
                entity.ToTable("tCPNahr");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.KcNahr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSazba).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stat)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Typ)
                    .HasMaxLength(16)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TCpsmeny>(entity =>
            {
                entity.ToTable("tCPSmeny");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.KcNaMenu).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPopl).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZmeny)
                    .HasColumnName("KcZMeny")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCmna)
                    .HasColumnName("RefCMna")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCmpop)
                    .HasColumnName("RefCMPop")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCmz)
                    .HasColumnName("RefCMz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCmMn).HasColumnType("LONG");

                entity.Property(e => e.Smena)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TCpstrav>(entity =>
            {
                entity.ToTable("tCPStrav");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cm)
                    .HasColumnName("CM")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.KcKapes).HasColumnType("CURRENCY");

                entity.Property(e => e.KcLegStr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSazba).HasColumnType("CURRENCY");

                entity.Property(e => e.KcStrav).HasColumnType("CURRENCY");

                entity.Property(e => e.Kratit).HasColumnType("LONG");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelZeme).HasColumnType("LONG");

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TCpvydaje>(entity =>
            {
                entity.ToTable("tCPVydaje");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCena).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Misto)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Popis)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPlatb).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpVyd).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TCpvyuct>(entity =>
            {
                entity.ToTable("tCPVyuct");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDopl).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNahDnu)
                    .HasColumnName("KcNahDNU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcNahr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSmeny).HasColumnType("CURRENCY");

                entity.Property(e => e.KcStrDnu)
                    .HasColumnName("KcStrDNU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcStrav).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVydaje).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVyuct).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCmkon)
                    .HasColumnName("RefCMKon")
                    .HasColumnType("LONG");

                entity.Property(e => e.Smena)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TCpzalohy>(entity =>
            {
                entity.ToTable("tCPZalohy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatVypl).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Doklad)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.KcZal).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TCsz>(entity =>
            {
                entity.ToTable("tCSZ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.OrdFldIdr)
                    .HasColumnName("OrdFldIDR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefGroup).HasColumnType("LONG");

                entity.Property(e => e.RelCszag)
                    .HasColumnName("RelCSZAg")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpHo)
                    .HasColumnName("RelTpHO")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<Tdef>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RelSubId)
                    .HasColumnName("RelSubID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelT).HasColumnType("LONG");

                entity.Property(e => e.Typ).HasColumnType("LONG");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TDjjizdy>(entity =>
            {
                entity.ToTable("tDJjizdy");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cas)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CasP)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DatumP).HasColumnType("datetime");

                entity.Property(e => e.Kam)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcNahr).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPausal).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPhm)
                    .HasColumnName("KcPHM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kcl).HasColumnType("CURRENCY");

                entity.Property(e => e.KclVoz).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Misto)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Odkud)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pres).HasColumnType("MEMO");

                entity.Property(e => e.ProcPhm).HasColumnName("ProcPHM");

                entity.Property(e => e.RefRidic).HasColumnType("LONG");

                entity.Property(e => e.RefVoz)
                    .HasColumnName("RefVOZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucel)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.VprIdCp)
                    .HasColumnName("VPrIdCP")
                    .HasColumnType("LONG");

                entity.Property(e => e.VprIdMzcesty)
                    .HasColumnName("VPrIdMZCesty")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<TFa>(entity =>
            {
                entity.ToTable("tFA");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloKhdph)
                    .HasColumnName("CisloKHDPH")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloObj)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCastZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.CmLikvPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmP).HasColumnType("CURRENCY");

                entity.Property(e => e.CmPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.CmPupr)
                    .HasColumnName("CmPUpr")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmU).HasColumnType("CURRENCY");

                entity.Property(e => e.CmZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatArchiv).HasColumnType("datetime");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatKhdph)
                    .HasColumnName("DatKHDPH")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatLikv).HasColumnType("datetime");

                entity.Property(e => e.DatObj).HasColumnType("datetime");

                entity.Property(e => e.DatOdDph)
                    .HasColumnName("DatOdDPH")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatPrik).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatSplat).HasColumnType("datetime");

                entity.Property(e => e.DatSplatPozas).HasColumnType("datetime");

                entity.Property(e => e.DatStorn).HasColumnType("datetime");

                entity.Property(e => e.DatUcP).HasColumnType("datetime");

                entity.Property(e => e.DatVytEz)
                    .HasColumnName("DatVytEZ")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatZdPln).HasColumnType("datetime");

                entity.Property(e => e.DatZdPlnMoss)
                    .HasColumnName("DatZdPlnMOSS")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IsDocId)
                    .HasColumnName("IsDocID")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCastZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcKrzaloha)
                    .HasColumnName("KcKRZaloha")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.KcLikvPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.KcP).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrepl).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPreplCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPupr)
                    .HasColumnName("KcPUpr")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcU).HasColumnType("CURRENCY");

                entity.Property(e => e.KcUplat).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Kzapoctu)
                    .HasColumnName("KZapoctu")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Mossoprava).HasColumnName("MOSSOprava");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.OrigKc1).HasColumnType("CURRENCY");

                entity.Property(e => e.OrigKc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdoklad)
                    .HasColumnName("PDoklad")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.PrijZprava)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefDopravci).HasColumnType("LONG");

                entity.Property(e => e.RefEetprofil)
                    .HasColumnName("RefEETProfil")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDobr).HasColumnType("LONG");

                entity.Property(e => e.RelDrFak).HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.RelMobch).HasColumnType("LONG");

                entity.Property(e => e.RelObDph)
                    .HasColumnName("RelObDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObKh)
                    .HasColumnName("RelObKH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObMoss)
                    .HasColumnName("RelObMOSS")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObSh)
                    .HasColumnName("RelObSH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelStavEet)
                    .HasColumnName("RelStavEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpFak).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.StornoEet).HasColumnName("StornoEET");

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.TiskFm).HasColumnName("TiskFM");

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");

                entity.Property(e => e.ZpOdpZal).HasColumnType("LONG");
            });

            modelBuilder.Entity<TFapol>(entity =>
            {
                entity.ToTable("tFApol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.IsDocId)
                    .HasColumnName("IsDocID")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.JcbezDph)
                    .HasColumnName("JCbezDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcKrozd)
                    .HasColumnName("KcKRozd")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpPrepl).HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SeskupVc).HasColumnName("SeskupVC");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TFapol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtFApol");
            });

            modelBuilder.Entity<THo>(entity =>
            {
                entity.ToTable("tHO");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatKhdph)
                    .HasColumnName("DatKHDPH")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatPlat).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatZdPln).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcMu)
                    .HasColumnName("KcMU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcU).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LikvCm).HasColumnName("LikvCM");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdoklad)
                    .HasColumnName("PDoklad")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefEetprofil)
                    .HasColumnName("RefEETProfil")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelMobch).HasColumnType("LONG");

                entity.Property(e => e.RelObDph)
                    .HasColumnName("RelObDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObKh)
                    .HasColumnName("RelObKH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObMoss)
                    .HasColumnName("RelObMOSS")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObSh)
                    .HasColumnName("RelObSH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelStavEet)
                    .HasColumnName("RelStavEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpHo)
                    .HasColumnName("RelTpHO")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.StornoEet).HasColumnName("StornoEET");

                entity.Property(e => e.TiskFm).HasColumnName("TiskFM");

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<THopol>(entity =>
            {
                entity.ToTable("tHOpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.JcbezDph)
                    .HasColumnName("JCbezDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SeskupVc).HasColumnName("SeskupVC");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.StextRp)
                    .HasColumnName("STextRP")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.THopol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtHOpol");
            });

            modelBuilder.Entity<TNab>(entity =>
            {
                entity.ToTable("tNAB");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.PoznPred).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpNab).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<TNabpol>(entity =>
            {
                entity.ToTable("tNABpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TNabpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtNABpol");
            });

            modelBuilder.Entity<TObj>(entity =>
            {
                entity.ToTable("tOBJ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bdodano).HasColumnName("BDodano");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatDod).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatStorn).HasColumnType("datetime");

                entity.Property(e => e.DatVytEz)
                    .HasColumnName("DatVytEZ")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IoId)
                    .HasColumnName("IoID")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pdoklad)
                    .HasColumnName("PDoklad")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefDopravci).HasColumnType("LONG");

                entity.Property(e => e.RefEetprofil)
                    .HasColumnName("RefEETProfil")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpIo).HasColumnType("LONG");

                entity.Property(e => e.RelTpObj).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.TmpEshopIoId)
                    .HasColumnName("tmpEshopIoID")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.TmpEshopObjId)
                    .HasColumnName("tmpEshopObjID")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<TObjpol>(entity =>
            {
                entity.ToTable("tOBJpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TObjpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtOBJpol");
            });

            modelBuilder.Entity<TPh>(entity =>
            {
                entity.ToTable("tPH");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatStorn).HasColumnType("datetime");

                entity.Property(e => e.DatZauct).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijato).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVratit).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PackNum).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.PrintCount).HasColumnType("LONG");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefEetprofil)
                    .HasColumnName("RefEETProfil")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefKasa).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelStavEet)
                    .HasColumnName("RelStavEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpPh)
                    .HasColumnName("RelTpPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.StornoEet).HasColumnName("StornoEET");

                entity.Property(e => e.TiskFm).HasColumnName("TiskFM");

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrPh)
                    .HasColumnName("ZaokrPH")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<TPhpol>(entity =>
            {
                entity.ToTable("tPHpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.JcbezDph)
                    .HasColumnName("JCbezDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SeskupVc).HasColumnName("SeskupVC");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.StextRp)
                    .HasColumnName("STextRP")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TPhpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtPHpol");
            });

            modelBuilder.Entity<TpInt>(entity =>
            {
                entity.ToTable("tpINT");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloKhdph)
                    .HasColumnName("CisloKHDPH")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmU).HasColumnType("CURRENCY");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatKhdph)
                    .HasColumnName("DatKHDPH")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatUcP).HasColumnType("datetime");

                entity.Property(e => e.DatZdPln).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IsDocId)
                    .HasColumnName("IsDocID")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrepl).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPreplCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcU).HasColumnType("CURRENCY");

                entity.Property(e => e.KcUkrozd)
                    .HasColumnName("KcUKRozd")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Klikv).HasColumnName("KLikv");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LikvCm).HasColumnName("LikvCM");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelMobch).HasColumnType("LONG");

                entity.Property(e => e.RelObDph)
                    .HasColumnName("RelObDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObKh)
                    .HasColumnName("RelObKH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObMoss)
                    .HasColumnName("RelObMOSS")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelObSh)
                    .HasColumnName("RelObSH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpFak).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<TpIntpol>(entity =>
            {
                entity.ToTable("tpINTpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.IsDocId)
                    .HasColumnName("IsDocID")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.JcbezDph)
                    .HasColumnName("JCbezDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpDph)
                    .HasColumnName("RelTpDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpPrepl).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TpIntpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtpINT");
            });

            modelBuilder.Entity<TPop>(entity =>
            {
                entity.ToTable("tPOP");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.PoznPred).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpPop).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<TPoppol>(entity =>
            {
                entity.ToTable("tPOPpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dicpover)
                    .HasColumnName("DICPover")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypPolEet)
                    .HasColumnName("RelTypPolEET")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TPoppol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtPOPpol");
            });

            modelBuilder.Entity<TRekl>(entity =>
            {
                entity.ToTable("tRekl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisDokl)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisReklList)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDokl).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatVyrDo).HasColumnType("datetime");

                entity.Property(e => e.DatVyrizeno).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kemail)
                    .HasColumnName("KEmail")
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Kjmeno)
                    .HasColumnName("KJmeno")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ktel)
                    .HasColumnName("KTel")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Kutvar)
                    .HasColumnName("KUtvar")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pdoklad)
                    .HasColumnName("PDoklad")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefOsoba).HasColumnType("LONG");

                entity.Property(e => e.RefRekl).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStavDod).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RefZpPrij).HasColumnType("LONG");

                entity.Property(e => e.RefZpVydej).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelReklStav).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpRekl).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzNazev)
                    .HasColumnName("SKzNazev")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.SkzStext)
                    .HasColumnName("SKzSText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StavFirma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TReklKomp>(entity =>
            {
                entity.ToTable("tReklKomp");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TReklKomp)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtReklKomp");
            });

            modelBuilder.Entity<TReklPredm>(entity =>
            {
                entity.ToTable("tReklPredm");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.NahrDily)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Soucasti)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.StavPrij)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.VadaPopis)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.Property(e => e.ZpReseni)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TReklPredm)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtReklPredm");
            });

            modelBuilder.Entity<TReklStav>(entity =>
            {
                entity.ToTable("tReklStav");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisReklList)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.KvyrMj)
                    .HasColumnName("KVyrMJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Kvyrizeni).HasColumnName("KVyrizeni");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.PopisVyr)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.PrenesMj)
                    .HasColumnName("PrenesMJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefOsoba).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelReklStav).HasColumnType("LONG");

                entity.Property(e => e.RelReklZpVyr).HasColumnType("LONG");

                entity.Property(e => e.RelZpPosl).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TReklStav)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtReklStav");
            });

            modelBuilder.Entity<TServ>(entity =>
            {
                entity.ToTable("tServ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CisDokl)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDokl).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatUkonceno).HasColumnType("datetime");

                entity.Property(e => e.DatVyrDo).HasColumnType("datetime");

                entity.Property(e => e.DatVyrizeno).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kemail)
                    .HasColumnName("KEmail")
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Kjmeno)
                    .HasColumnName("KJmeno")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ktel)
                    .HasColumnName("KTel")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Kutvar)
                    .HasColumnName("KUtvar")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PopZavady).HasColumnType("MEMO");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.PredpCena).HasColumnType("CURRENCY");

                entity.Property(e => e.PredpCenaCm)
                    .HasColumnName("PredpCenaCM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefOsoba).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RefZpPrij).HasColumnType("LONG");

                entity.Property(e => e.RefZpVydej).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelServStav).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpServ).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzNazev)
                    .HasColumnName("SKzNazev")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.SkzStext)
                    .HasColumnName("SKzSText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Zaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.ZalohaCm)
                    .HasColumnName("ZalohaCM")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<TServpol>(entity =>
            {
                entity.ToTable("tServpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRp)
                    .HasColumnName("STextRP")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TServpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtServpol");
            });

            modelBuilder.Entity<TServPredm>(entity =>
            {
                entity.ToTable("tServPredm");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelNahrDily).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Soucasti)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.StavPrij)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.VadaPopis)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.Property(e => e.ZpReseni)
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TServPredm)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtServPredm");
            });

            modelBuilder.Entity<TServStav>(entity =>
            {
                entity.ToTable("tServStav");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefOsoba).HasColumnType("LONG");

                entity.Property(e => e.RelServStav).HasColumnType("LONG");

                entity.Property(e => e.RelZpPosl).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TServStav)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtServStav");
            });

            modelBuilder.Entity<TSkCeny>(entity =>
            {
                entity.ToTable("tSkCeny");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Marze).HasColumnType("SINGLE");

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Rabat).HasColumnType("SINGLE");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSpid)
                    .HasColumnName("RefSPID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpCeny).HasColumnType("LONG");

                entity.Property(e => e.RelTpPlt).HasColumnType("LONG");

                entity.Property(e => e.RelTpZkr).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.Sleva).HasColumnType("SINGLE");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");
            });

            modelBuilder.Entity<TSkmp>(entity =>
            {
                entity.ToTable("tSKMP");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DatumP).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PdatZ).HasColumnName("PDatZ");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefSkladC).HasColumnType("LONG");

                entity.Property(e => e.RefSkladZ).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefStr1).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RozdVp).HasColumnName("RozdVP");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TSkmppol>(entity =>
            {
                entity.ToTable("tSKMPpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz1)
                    .HasColumnName("RefSKz1")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStruct).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.VncpohV)
                    .HasColumnName("VNCPohV")
                    .HasColumnType("CURRENCY");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TSkmppol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtSKMPpol");
            });

            modelBuilder.Entity<TSkmv>(entity =>
            {
                entity.ToTable("tSKMV");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DatumP).HasColumnType("datetime");

                entity.Property(e => e.DatumVd)
                    .HasColumnName("DatumVD")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatumVp)
                    .HasColumnName("DatumVP")
                    .HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PdatZ).HasColumnName("PDatZ");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefStr1).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpVyr).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RozdVp).HasColumnName("RozdVP");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TSkmvlist>(entity =>
            {
                entity.ToTable("tSKMVlist");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TSkmvlist)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtSKMVlist");
            });

            modelBuilder.Entity<TSkmvpol>(entity =>
            {
                entity.ToTable("tSKMVpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.VncpohV)
                    .HasColumnName("VNCPohV")
                    .HasColumnType("CURRENCY");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TSkmvpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtSKMVpol");
            });

            modelBuilder.Entity<TSkpp>(entity =>
            {
                entity.ToTable("tSKPP");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<TSkpppol>(entity =>
            {
                entity.ToTable("tSKPPpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVnakl)
                    .HasColumnName("KcVNakl")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpVnakl)
                    .HasColumnName("RelTpVNakl")
                    .HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TSkpppol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtSKPPpol");
            });

            modelBuilder.Entity<TSkpv>(entity =>
            {
                entity.ToTable("tSKPV");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.Bprenes).HasColumnName("BPrenes");

                entity.Property(e => e.CenyIds)
                    .HasColumnName("CenyIDS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloObj)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatObj).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicregDpheu)
                    .HasColumnName("DICRegDPHEU")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.HistSzDph).HasColumnName("HistSzDPH");

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MPohoda).HasColumnName("mPohoda");

                entity.Property(e => e.Moss)
                    .HasColumnName("MOSS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdukaz)
                    .HasColumnName("MOSSDukaz")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Pozn2).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefDopravci).HasColumnType("LONG");

                entity.Property(e => e.RefKasa).HasColumnType("LONG");

                entity.Property(e => e.RefSklad).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruh).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.RelStorn).HasColumnType("LONG");

                entity.Property(e => e.RelTpCalcDph)
                    .HasColumnName("RelTpCalcDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZpVypDph)
                    .HasColumnName("RelZpVypDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ZaokrFv)
                    .HasColumnName("ZaokrFV")
                    .HasColumnType("LONG");
            });

            modelBuilder.Entity<TSkpvpol>(entity =>
            {
                entity.ToTable("tSKPVpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aucet)
                    .HasColumnName("AUcet")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm).HasColumnType("CURRENCY");

                entity.Property(e => e.CmDph)
                    .HasColumnName("CmDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.CmJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExp).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph)
                    .HasColumnName("KcDPH")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcJedn).HasColumnType("CURRENCY");

                entity.Property(e => e.KcRcPr).HasColumnType("CURRENCY");

                entity.Property(e => e.Kod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Mj)
                    .HasColumnName("MJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mjkoef).HasColumnName("MJKoef");

                entity.Property(e => e.MjkoefRcPr).HasColumnName("MJKoefRcPr");

                entity.Property(e => e.MjrcPr)
                    .HasColumnName("MJRcPr")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mossdruh)
                    .HasColumnName("MOSSDruh")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pdp).HasColumnName("PDP");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.ProcentoDph).HasColumnName("ProcentoDPH");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefParentZ).HasColumnType("LONG");

                entity.Property(e => e.RefPol).HasColumnType("LONG");

                entity.Property(e => e.RefPol2).HasColumnType("LONG");

                entity.Property(e => e.RefRcPr).HasColumnType("LONG");

                entity.Property(e => e.RefSkz)
                    .HasColumnName("RefSKz")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefSkz0)
                    .HasColumnName("RefSKz0")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgId2)
                    .HasColumnName("RelAgID2")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelSzDph)
                    .HasColumnName("RelSzDPH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelZaruka).HasColumnType("LONG");

                entity.Property(e => e.Sdph).HasColumnName("SDph");

                entity.Property(e => e.SkzVc)
                    .HasColumnName("SKzVC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.StextRcPr)
                    .HasColumnName("STextRcPr")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Vcislo)
                    .HasColumnName("VCislo")
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Zaruka).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.TSkpvpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rtSKPVpol");
            });

            modelBuilder.Entity<TUhrDokl>(entity =>
            {
                entity.ToTable("tUhrDokl");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijato).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVraceno).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Prijato).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefFormUh).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RelAgIdDokl).HasColumnType("LONG");

                entity.Property(e => e.StravHodnota).HasColumnType("CURRENCY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TZasilky>(entity =>
            {
                entity.ToTable("tZasilky");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExport).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefDopravci).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelStavEz).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ttext)
                    .HasColumnName("TText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TZasilkypol>(entity =>
            {
                entity.ToTable("tZasilkypol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cena).HasColumnType("CURRENCY");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DobaUlozeni).HasColumnType("LONG");

                entity.Property(e => e.Dobirka).HasColumnType("CURRENCY");

                entity.Property(e => e.Druh)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DruhObalu)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DruhPpp)
                    .HasColumnName("DruhPPP")
                    .HasColumnType("LONG");

                entity.Property(e => e.DruhSk)
                    .HasColumnName("DruhSK")
                    .HasColumnType("LONG");

                entity.Property(e => e.JmenoZpet)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Obal).HasColumnType("LONG");

                entity.Property(e => e.ObecZpet)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obsah)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.ObsahSk)
                    .HasColumnName("ObsahSK")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Odesilatel)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.ParovaciIds)
                    .HasColumnName("ParovaciIDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PobockaId)
                    .HasColumnName("PobockaID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PocetKusu).HasColumnType("LONG");

                entity.Property(e => e.PodavatelId)
                    .HasColumnName("PodavatelID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Pojisteni).HasColumnType("CURRENCY");

                entity.Property(e => e.Postovne).HasColumnType("CURRENCY");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Psczpet)
                    .HasColumnName("PSCZpet")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RelForUhOz).HasColumnType("LONG");

                entity.Property(e => e.RelSluzbaNakl).HasColumnType("LONG");

                entity.Property(e => e.RelSluzbaVykl).HasColumnType("LONG");

                entity.Property(e => e.RelStavOz).HasColumnType("LONG");

                entity.Property(e => e.RelTermDoruc).HasColumnType("LONG");

                entity.Property(e => e.RelTypDoruceni).HasColumnType("LONG");

                entity.Property(e => e.Sluzby)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.StavOz)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Trida).HasColumnType("LONG");

                entity.Property(e => e.UliceZpet)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VarSymPk)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VelikostX).HasColumnType("LONG");

                entity.Property(e => e.VelikostY).HasColumnType("LONG");

                entity.Property(e => e.VelikostZ).HasColumnType("LONG");

                entity.Property(e => e.ZpusobUhrady).HasColumnType("LONG");
            });

            modelBuilder.Entity<UhradaFm>(entity =>
            {
                entity.ToTable("UhradaFM");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.EkasaDatPar)
                    .HasColumnName("EKasaDatPar")
                    .HasColumnType("datetime");

                entity.Property(e => e.EkasaParNum)
                    .HasColumnName("EKasaParNum")
                    .HasColumnType("LONG");

                entity.Property(e => e.KcPrijato).HasColumnType("CURRENCY");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Prijato).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Uhrady>(entity =>
            {
                entity.HasIndex(e => e.DatumU)
                    .HasName("xDatumU");

                entity.HasIndex(e => e.RelAgH)
                    .HasName("xRelAgH");

                entity.HasIndex(e => e.RelAgU)
                    .HasName("xRelAgU");

                entity.HasIndex(e => e.RelIdh)
                    .HasName("xRelIDH");

                entity.HasIndex(e => e.RelIdu)
                    .HasName("xRelIDU");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Bzavaz).HasColumnName("BZavaz");

                entity.Property(e => e.CisloH)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CisloU)
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.CmH).HasColumnType("CURRENCY");

                entity.Property(e => e.CmU).HasColumnType("CURRENCY");

                entity.Property(e => e.DatumU).HasColumnType("datetime");

                entity.Property(e => e.KcEet)
                    .HasColumnName("KcEET")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcKrozd)
                    .HasColumnName("KcKRozd")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrepl).HasColumnType("CURRENCY");

                entity.Property(e => e.KcU).HasColumnType("CURRENCY");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.RefDd)
                    .HasColumnName("RefDD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgH).HasColumnType("LONG");

                entity.Property(e => e.RelAgPrepl).HasColumnType("LONG");

                entity.Property(e => e.RelAgU).HasColumnType("LONG");

                entity.Property(e => e.RelIdh)
                    .HasColumnName("RelIDH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelIdprepl)
                    .HasColumnName("RelIDPrepl")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelIdu)
                    .HasColumnName("RelIDU")
                    .HasColumnType("LONG");

                entity.Property(e => e.VarSymH)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<UhrDokl>(entity =>
            {
                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrijato).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVraceno).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaokr).HasColumnType("CURRENCY");

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Prijato).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefFormUh).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RelAgIdDokl).HasColumnType("LONG");

                entity.Property(e => e.StravHodnota).HasColumnType("CURRENCY");

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Uz>(entity =>
            {
                entity.ToTable("UZ");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Akcie0).HasColumnType("CURRENCY");

                entity.Property(e => e.Akcie1).HasColumnType("CURRENCY");

                entity.Property(e => e.CasRoz0).HasColumnType("CURRENCY");

                entity.Property(e => e.CasRoz1).HasColumnType("CURRENCY");

                entity.Property(e => e.Ceniny0).HasColumnType("CURRENCY");

                entity.Property(e => e.Ceniny1).HasColumnType("CURRENCY");

                entity.Property(e => e.Ddhmu)
                    .HasColumnName("DDHMU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Ddnmu)
                    .HasColumnName("DDNMU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.FinMaj0).HasColumnType("CURRENCY");

                entity.Property(e => e.FinMaj1).HasColumnType("CURRENCY");

                entity.Property(e => e.Him0)
                    .HasColumnName("HIM0")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Him1)
                    .HasColumnName("HIM1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Himu)
                    .HasColumnName("HIMU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Mzdy).HasColumnType("CURRENCY");

                entity.Property(e => e.Nim0)
                    .HasColumnName("NIM0")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Nim1)
                    .HasColumnName("NIM1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Nimu)
                    .HasColumnName("NIMU")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.OprAkt0).HasColumnType("CURRENCY");

                entity.Property(e => e.OprAkt1).HasColumnType("CURRENCY");

                entity.Property(e => e.OprPas0).HasColumnType("CURRENCY");

                entity.Property(e => e.OprPas1).HasColumnType("CURRENCY");

                entity.Property(e => e.OstMaj0).HasColumnType("CURRENCY");

                entity.Property(e => e.OstMaj1).HasColumnType("CURRENCY");

                entity.Property(e => e.Penize0).HasColumnType("CURRENCY");

                entity.Property(e => e.Penize1).HasColumnType("CURRENCY");

                entity.Property(e => e.Pohled0).HasColumnType("CURRENCY");

                entity.Property(e => e.Pohled1).HasColumnType("CURRENCY");

                entity.Property(e => e.Rezervy0).HasColumnType("CURRENCY");

                entity.Property(e => e.Rezervy1).HasColumnType("CURRENCY");

                entity.Property(e => e.Ucty0).HasColumnType("CURRENCY");

                entity.Property(e => e.Ucty1).HasColumnType("CURRENCY");

                entity.Property(e => e.Uvery0).HasColumnType("CURRENCY");

                entity.Property(e => e.Uvery1).HasColumnType("CURRENCY");

                entity.Property(e => e.UveryPos0).HasColumnType("CURRENCY");

                entity.Property(e => e.UveryPos1).HasColumnType("CURRENCY");

                entity.Property(e => e.Zasoby0).HasColumnType("CURRENCY");

                entity.Property(e => e.Zasoby1).HasColumnType("CURRENCY");

                entity.Property(e => e.Zavazky0).HasColumnType("CURRENCY");

                entity.Property(e => e.Zavazky1).HasColumnType("CURRENCY");
            });

            modelBuilder.Entity<Vazby>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.RefId1)
                    .HasColumnName("RefID1")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefId2)
                    .HasColumnName("RefID2")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgId1)
                    .HasColumnName("RelAgID1")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelAgId2)
                    .HasColumnName("RelAgID2")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTypVazby).HasColumnType("LONG");

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(64)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Verze>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Lc)
                    .HasColumnName("LC")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Nazev)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Nser)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Release)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.TypeDb)
                    .HasColumnName("TypeDB")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Verze1)
                    .HasColumnName("Verze")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.VerzeGlx)
                    .HasColumnName("VerzeGLX")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.VerzeKasa)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.VerzeMzdy)
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Veta56Gitems>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Au)
                    .HasColumnName("AU")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Cc)
                    .HasColumnName("CC")
                    .HasMaxLength(33)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Dal)
                    .HasColumnName("DAL")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Dd)
                    .HasColumnName("DD")
                    .HasColumnType("datetime");

                entity.Property(e => e.Md)
                    .HasColumnName("MD")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Odpa)
                    .HasColumnName("ODPA")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Org)
                    .HasColumnName("ORG")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Orj)
                    .HasColumnName("ORJ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pol)
                    .HasColumnName("POL")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelEdit).HasColumnType("LONG");

                entity.Property(e => e.RelHh)
                    .HasColumnName("RelHH")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelMesic).HasColumnType("LONG");

                entity.Property(e => e.RelStatus).HasColumnType("LONG");

                entity.Property(e => e.RelUdAgId)
                    .HasColumnName("RelUdAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelUdId)
                    .HasColumnName("RelUdID")
                    .HasColumnType("LONG");

                entity.Property(e => e.Rok).HasColumnType("LONG");

                entity.Property(e => e.Su)
                    .HasColumnName("SU")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tt)
                    .HasColumnName("TT")
                    .HasMaxLength(96)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Uz)
                    .HasColumnName("UZ")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Zj)
                    .HasColumnName("ZJ")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VzZ>(entity =>
            {
                entity.HasIndex(e => e.Cislo)
                    .HasName("xCislo");

                entity.HasIndex(e => e.Datum)
                    .HasName("xDatum");

                entity.HasIndex(e => e.RefAd)
                    .HasName("xRefAD");

                entity.HasIndex(e => e.RelTpFak)
                    .HasName("xRelTpFak");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloObj)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cm0).HasColumnType("CURRENCY");

                entity.Property(e => e.CmCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.CmLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.CmLikvPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.CmMnoz).HasColumnType("LONG");

                entity.Property(e => e.CmP).HasColumnType("CURRENCY");

                entity.Property(e => e.CmPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.CmU).HasColumnType("CURRENCY");

                entity.Property(e => e.CmZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatPrik).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatSplat).HasColumnType("datetime");

                entity.Property(e => e.DatSplatPozas).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DenEur).HasColumnName("DenEUR");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Kc0).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc1).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc2).HasColumnType("CURRENCY");

                entity.Property(e => e.Kc3).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph1)
                    .HasColumnName("KcDPH1")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph2)
                    .HasColumnName("KcDPH2")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDph3)
                    .HasColumnName("KcDPH3")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcLikv).HasColumnType("CURRENCY");

                entity.Property(e => e.KcLikvPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.KcP).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPozas).HasColumnType("CURRENCY");

                entity.Property(e => e.KcU).HasColumnType("CURRENCY");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Kzapoctu)
                    .HasColumnName("KZapoctu")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ParSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Pdoklad)
                    .HasColumnName("PDoklad")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelForUh).HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelTpFak).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(240)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.User)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Xml>(entity =>
            {
                entity.ToTable("XML");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Aplikace)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.DstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.SrcName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Station)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Xmlpol>(entity =>
            {
                entity.ToTable("XMLpol");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelAgId)
                    .HasColumnName("RelAgID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTyp).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Xmlpol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rXMLpol");
            });

            modelBuilder.Entity<Zalohy>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Nazev)
                    .HasMaxLength(96)
                    .IsUnicode(false);

                entity.Property(e => e.Popis)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Pozice).HasColumnType("LONG");

                entity.Property(e => e.RefIdzal)
                    .HasColumnName("RefIDZal")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelTpVytv).HasColumnType("LONG");

                entity.Property(e => e.RelTpZal).HasColumnType("LONG");

                entity.Property(e => e.Soubor)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Zam>(entity =>
            {
                entity.ToTable("ZAM");

                entity.HasIndex(e => new { e.OsCislo, e.NullCheckOsCislo })
                    .HasName("IX_ZAM_OsCislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CizCisPojSp)
                    .HasColumnName("CizCisPojSP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CizCisPojZp)
                    .HasColumnName("CizCisPojZP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CizCislo)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CizCp)
                    .HasColumnName("CizCP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CizCp2)
                    .HasColumnName("CizCP2")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CizDokladStat)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CizDokladTyp)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CizMisto)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CizNositel)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CizObec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.CizObec2)
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.CizPostCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CizPsc)
                    .HasColumnName("CizPSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CizStat)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CizStatNar)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CizUlice)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CizUlice2)
                    .HasMaxLength(48)
                    .IsUnicode(false);

                entity.Property(e => e.Cizinec)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Cop)
                    .HasColumnName("COP")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Cp)
                    .HasColumnName("CP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDuchVekOd).HasColumnType("datetime");

                entity.Property(e => e.DatDuchodOd).HasColumnType("datetime");

                entity.Property(e => e.DatDuchodPrizOd).HasColumnType("datetime");

                entity.Property(e => e.DatNar).HasColumnType("datetime");

                entity.Property(e => e.DatNast).HasColumnType("datetime");

                entity.Property(e => e.DatOdch).HasColumnType("datetime");

                entity.Property(e => e.DatOdchUrc).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DatVstup).HasColumnType("datetime");

                entity.Property(e => e.DdrDuch)
                    .HasColumnName("DDrDuch")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Dduvod)
                    .HasColumnName("DDuvod")
                    .HasMaxLength(148)
                    .IsUnicode(false);

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.DicTyp)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DjinSdel)
                    .HasColumnName("DJinSdel")
                    .HasMaxLength(170)
                    .IsUnicode(false);

                entity.Property(e => e.Dkvalif)
                    .HasColumnName("DKvalif")
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.DovCerp).HasColumnType("SINGLE");

                entity.Property(e => e.DovNar).HasColumnType("SINGLE");

                entity.Property(e => e.DovPrech).HasColumnType("SINGLE");

                entity.Property(e => e.DovProplac).HasColumnType("SINGLE");

                entity.Property(e => e.DovStara).HasColumnType("SINGLE");

                entity.Property(e => e.DpredZam)
                    .HasColumnName("DPredZam")
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Dsdel2)
                    .HasColumnName("DSdel2")
                    .HasMaxLength(152)
                    .IsUnicode(false);

                entity.Property(e => e.Dsdeleni)
                    .HasColumnName("DSdeleni")
                    .HasMaxLength(152)
                    .IsUnicode(false);

                entity.Property(e => e.Duvazek)
                    .HasColumnName("DUvazek")
                    .HasColumnType("SINGLE");

                entity.Property(e => e.DuvodUkonceni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DzapocD)
                    .HasColumnName("DZapocD")
                    .HasColumnType("LONG");

                entity.Property(e => e.DzapocR)
                    .HasColumnName("DZapocR")
                    .HasColumnType("LONG");

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Heslo)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.KcCastH).HasColumnType("CURRENCY");

                entity.Property(e => e.KcDanUrz)
                    .HasColumnName("KcDanURZ")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDhrPre)
                    .HasColumnName("KcDHrPre")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcDoplDanBonRz)
                    .HasColumnName("KcDoplDanBonRZ")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcOsOhod).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPfmax)
                    .HasColumnName("KcPFMax")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPfond)
                    .HasColumnName("KcPFond")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPremie).HasColumnType("CURRENCY");

                entity.Property(e => e.KcPreplDanRz)
                    .HasColumnName("KcPreplDanRZ")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcPrumL).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSzM).HasColumnType("CURRENCY");

                entity.Property(e => e.KcVvzl)
                    .HasColumnName("KcVVZL")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.KcZahrPoj).HasColumnType("CURRENCY");

                entity.Property(e => e.KcZaloha).HasColumnType("CURRENCY");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonCp)
                    .HasColumnName("KonCP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.KonObec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.KonPsc)
                    .HasColumnName("KonPSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.KonUlice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Labels)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MistoNar)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Narodn)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckOsCislo)
                    .HasColumnName("NullCheck_OsCislo")
                    .HasComputedColumnSql("(case when [OsCislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obecne)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.OdpracD).HasColumnType("LONG");

                entity.Property(e => e.OdpracR).HasColumnType("LONG");

                entity.Property(e => e.OsCislo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Posta)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.PracDobK)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PracDobZ)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PredPoj)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Premie).HasColumnType("SINGLE");

                entity.Property(e => e.Prijmeni)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.PrijmeniDalsi)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProcPf).HasColumnName("ProcPF");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefFond).HasColumnType("LONG");

                entity.Property(e => e.RefMist).HasColumnType("LONG");

                entity.Property(e => e.RefNovaPoj).HasColumnType("LONG");

                entity.Property(e => e.RefPoj).HasColumnType("LONG");

                entity.Property(e => e.RefStavDp)
                    .HasColumnName("RefStavDP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefVprCisIsco)
                    .HasColumnName("RefVPrCisISCO")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefVprEmailKontO)
                    .HasColumnName("RefVPrEmailKontO")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefVprKkov)
                    .HasColumnName("RefVPrKKOV")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefVprKontOsoba)
                    .HasColumnName("RefVPrKontOsoba")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefVprOrganOp)
                    .HasColumnName("RefVPrOrganOP")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefVprPrIsco)
                    .HasColumnName("RefVPrPrISCO")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefVprTelKontOs)
                    .HasColumnName("RefVPrTelKontOs")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefVprZarIsco)
                    .HasColumnName("RefVPrZarISCO")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelDruhM).HasColumnType("LONG");

                entity.Property(e => e.RelDruhZ).HasColumnType("LONG");

                entity.Property(e => e.RelDruhZ2011).HasColumnType("LONG");

                entity.Property(e => e.RelDruhZold)
                    .HasColumnName("RelDruhZOld")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelMesRz)
                    .HasColumnName("RelMesRZ")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelOdstupne).HasColumnType("LONG");

                entity.Property(e => e.RelPohl).HasColumnType("LONG");

                entity.Property(e => e.RelSkZarucMzda).HasColumnType("LONG");

                entity.Property(e => e.RelStav).HasColumnType("LONG");

                entity.Property(e => e.RelUkonc).HasColumnType("LONG");

                entity.Property(e => e.RelVypl).HasColumnType("LONG");

                entity.Property(e => e.RelVyplZ).HasColumnType("LONG");

                entity.Property(e => e.RodCisl)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Rozena)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ShowRc).HasColumnName("ShowRC");

                entity.Property(e => e.SmlDatKon).HasColumnType("datetime");

                entity.Property(e => e.SmlDatZac).HasColumnType("datetime");

                entity.Property(e => e.SmlSpNosPoj)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SmlZamIc)
                    .HasColumnName("SmlZamIC")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SoucPoj)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.SpecPf)
                    .HasColumnName("SpecPF")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stat)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.StatKonAdr)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.StatPris)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Tel)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Titul)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Tuvazek).HasColumnName("TUvazek");

                entity.Property(e => e.TydenDni).HasColumnType("SINGLE");

                entity.Property(e => e.TypEldp)
                    .HasColumnName("TypELDP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.VarPf)
                    .HasColumnName("VarPF")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VprDatumPovol)
                    .HasColumnName("VPrDatumPovol")
                    .HasColumnType("datetime");

                entity.Property(e => e.VprDodatekPs)
                    .HasColumnName("VPrDodatekPS")
                    .HasColumnType("datetime");

                entity.Property(e => e.VprJcpovol)
                    .HasColumnName("VPrJCPovol")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.VprMzdaSlovy)
                    .HasColumnName("VPrMzdaSlovy")
                    .HasMaxLength(77)
                    .IsUnicode(false);

                entity.Property(e => e.VprNahrZaOp)
                    .HasColumnName("VPrNahrZaOp")
                    .HasColumnType("CURRENCY");

                entity.Property(e => e.VprPobocka)
                    .HasColumnName("VPrPobocka")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.VprUvazek)
                    .HasColumnName("VPrUvazek")
                    .HasColumnType("LONG");

                entity.Property(e => e.VprVozidlo)
                    .HasColumnName("VPrVozidlo")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Vzdelani)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Zarazeni)
                    .HasMaxLength(42)
                    .IsUnicode(false);

                entity.Property(e => e.ZmenaPojDatum).HasColumnType("datetime");

                entity.HasOne(d => d.RefNovaPojNavigation)
                    .WithMany(p => p.ZamRefNovaPojNavigation)
                    .HasForeignKey(d => d.RefNovaPoj)
                    .HasConstraintName("rsMzNovaPoj");

                entity.HasOne(d => d.RefPojNavigation)
                    .WithMany(p => p.ZamRefPojNavigation)
                    .HasForeignKey(d => d.RefPoj)
                    .HasConstraintName("rsMzPoj");

                entity.HasOne(d => d.RefStrNavigation)
                    .WithMany(p => p.Zam)
                    .HasForeignKey(d => d.RefStr)
                    .HasConstraintName("rsSTRZAM");
            });

            modelBuilder.Entity<ZampDet>(entity =>
            {
                entity.ToTable("ZAMpDet");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.KcOdec).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelOdpoc).HasColumnType("LONG");

                entity.Property(e => e.RodCisl)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.ZampDet)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rZAMpDet");
            });

            modelBuilder.Entity<ZampDov>(entity =>
            {
                entity.ToTable("ZAMpDov");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CanHzupn).HasColumnName("CanHZUPN");

                entity.Property(e => e.DatKon).HasColumnType("datetime");

                entity.Property(e => e.DatKonRo)
                    .HasColumnName("DatKonRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatPorod).HasColumnType("datetime");

                entity.Property(e => e.DatZac).HasColumnType("datetime");

                entity.Property(e => e.DatZacRo)
                    .HasColumnName("DatZacRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diagnoza)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Dnu).HasColumnType("SINGLE");

                entity.Property(e => e.DnyKal).HasColumnType("LONG");

                entity.Property(e => e.DnyPrac).HasColumnType("LONG");

                entity.Property(e => e.KonPrac).HasColumnType("SINGLE");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefEneschop)
                    .HasColumnName("RefENeschop")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefNavaz).HasColumnType("LONG");

                entity.Property(e => e.RelDrDov).HasColumnType("LONG");

                entity.Property(e => e.RelKonJ).HasColumnType("LONG");

                entity.Property(e => e.RelNavaz).HasColumnType("LONG");

                entity.Property(e => e.RelZacJ).HasColumnType("LONG");

                entity.Property(e => e.Sazba).HasColumnType("SINGLE");

                entity.Property(e => e.VypMmrr)
                    .HasColumnName("VypMMRR")
                    .HasColumnType("datetime");

                entity.Property(e => e.ZacPrac).HasColumnType("SINGLE");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.ZampDov)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rZAMpDov");
            });

            modelBuilder.Entity<ZampDovZapoc>(entity =>
            {
                entity.ToTable("ZAMpDovZapoc");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.CanHzupn).HasColumnName("CanHZUPN");

                entity.Property(e => e.DatKon).HasColumnType("datetime");

                entity.Property(e => e.DatKonRo)
                    .HasColumnName("DatKonRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DatPorod).HasColumnType("datetime");

                entity.Property(e => e.DatZac).HasColumnType("datetime");

                entity.Property(e => e.DatZacRo)
                    .HasColumnName("DatZacRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.Diagnoza)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Dnu).HasColumnType("SINGLE");

                entity.Property(e => e.DnyKal).HasColumnType("LONG");

                entity.Property(e => e.DnyPrac).HasColumnType("LONG");

                entity.Property(e => e.KonPrac).HasColumnType("SINGLE");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefEneschop)
                    .HasColumnName("RefENeschop")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefNavaz).HasColumnType("LONG");

                entity.Property(e => e.RelDrDov).HasColumnType("LONG");

                entity.Property(e => e.RelKonJ).HasColumnType("LONG");

                entity.Property(e => e.RelNavaz).HasColumnType("LONG");

                entity.Property(e => e.RelZacJ).HasColumnType("LONG");

                entity.Property(e => e.Sazba).HasColumnType("SINGLE");

                entity.Property(e => e.VypMmrr)
                    .HasColumnName("VypMMRR")
                    .HasColumnType("datetime");

                entity.Property(e => e.ZacPrac).HasColumnType("SINGLE");
            });

            modelBuilder.Entity<ZampSra>(entity =>
            {
                entity.ToTable("ZAMpSra");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Adresa)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Kc).HasColumnType("CURRENCY");

                entity.Property(e => e.KcCelkem).HasColumnType("CURRENCY");

                entity.Property(e => e.KcSraz).HasColumnType("CURRENCY");

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.KonstSym)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RelDrSra).HasColumnType("LONG");

                entity.Property(e => e.RelFond).HasColumnType("LONG");

                entity.Property(e => e.RelPk).HasColumnType("LONG");

                entity.Property(e => e.RelPlat).HasColumnType("LONG");

                entity.Property(e => e.RelZivPj).HasColumnType("LONG");

                entity.Property(e => e.Rozhod)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Stext)
                    .HasColumnName("SText")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.ZampSra)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rZAMpSra");
            });

            modelBuilder.Entity<Zamucet>(entity =>
            {
                entity.ToTable("ZAMucet");

                entity.HasIndex(e => e.RefAg)
                    .HasName("xRefAg");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cp)
                    .HasColumnName("CP")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Ids)
                    .HasColumnName("IDS")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.KodBanky)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Nazev)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Obec)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.Stat)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TypId)
                    .HasColumnName("TypID")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Ucet)
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.Zamucet)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rZAMucet");
            });

            modelBuilder.Entity<ZamzivPoj>(entity =>
            {
                entity.ToTable("ZAMzivPoj");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.DatDo).HasColumnType("datetime");

                entity.Property(e => e.DatOd).HasColumnType("datetime");

                entity.Property(e => e.KcPoj).HasColumnType("CURRENCY");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefPoj).HasColumnType("LONG");

                entity.Property(e => e.SpecSym)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.ZamzivPoj)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rZAMzivPoj");
            });

            modelBuilder.Entity<Zasilky>(entity =>
            {
                entity.HasIndex(e => new { e.Cislo, e.NullCheckCislo })
                    .HasName("IX_Zasilky_Cislo")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CisloZak)
                    .HasColumnName("CisloZAK")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Creator)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatExport).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.Datum).HasColumnType("datetime");

                entity.Property(e => e.Dic)
                    .HasColumnName("DIC")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(98)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Firma)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Firma2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gsm)
                    .HasColumnName("GSM")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Icdph)
                    .HasColumnName("ICDPH")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Ico)
                    .HasColumnName("ICO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Jmeno2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.NullCheckCislo)
                    .HasColumnName("NullCheck_Cislo")
                    .HasComputedColumnSql("(case when [Cislo] IS NULL then [ID] else (0) end)");

                entity.Property(e => e.Obec)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obec2)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Oznacil)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Pozn).HasColumnType("MEMO");

                entity.Property(e => e.Psc)
                    .HasColumnName("PSC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Psc2)
                    .HasColumnName("PSC2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAd)
                    .HasColumnName("RefAD")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefAddod)
                    .HasColumnName("RefADdod")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefCin).HasColumnType("LONG");

                entity.Property(e => e.RefDopravci).HasColumnType("LONG");

                entity.Property(e => e.RefStr).HasColumnType("LONG");

                entity.Property(e => e.RefZeme).HasColumnType("LONG");

                entity.Property(e => e.RefZeme2).HasColumnType("LONG");

                entity.Property(e => e.RelAg).HasColumnType("LONG");

                entity.Property(e => e.RelCr)
                    .HasColumnName("RelCR")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelId)
                    .HasColumnName("RelID")
                    .HasColumnType("LONG");

                entity.Property(e => e.RelStavEz).HasColumnType("LONG");

                entity.Property(e => e.RelTypDic)
                    .HasColumnName("RelTypDIC")
                    .HasColumnType("LONG");

                entity.Property(e => e.Tel)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Tel2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Ucetni)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Ulice2)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOrder).HasColumnType("LONG");

                entity.Property(e => e.Utvar)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Utvar2)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ZasilkyPol>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.Cena).HasColumnType("CURRENCY");

                entity.Property(e => e.Cislo)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.DatCreate).HasColumnType("datetime");

                entity.Property(e => e.DatSave).HasColumnType("datetime");

                entity.Property(e => e.DobaUlozeni).HasColumnType("LONG");

                entity.Property(e => e.Dobirka).HasColumnType("CURRENCY");

                entity.Property(e => e.Druh)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DruhObalu)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DruhPpp)
                    .HasColumnName("DruhPPP")
                    .HasColumnType("LONG");

                entity.Property(e => e.DruhSk)
                    .HasColumnName("DruhSK")
                    .HasColumnType("LONG");

                entity.Property(e => e.JmenoZpet)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Obal).HasColumnType("LONG");

                entity.Property(e => e.ObecZpet)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Obsah)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.ObsahSk)
                    .HasColumnName("ObsahSK")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Odesilatel)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.OrderFld).HasColumnType("LONG");

                entity.Property(e => e.ParovaciIds)
                    .HasColumnName("ParovaciIDS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PobockaId)
                    .HasColumnName("PobockaID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PocetKusu).HasColumnType("LONG");

                entity.Property(e => e.PodavatelId)
                    .HasColumnName("PodavatelID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Pojisteni).HasColumnType("CURRENCY");

                entity.Property(e => e.Postovne).HasColumnType("CURRENCY");

                entity.Property(e => e.Pozn)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Psczpet)
                    .HasColumnName("PSCZpet")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefCm)
                    .HasColumnName("RefCM")
                    .HasColumnType("LONG");

                entity.Property(e => e.RefUcet).HasColumnType("LONG");

                entity.Property(e => e.RelForUhOz).HasColumnType("LONG");

                entity.Property(e => e.RelSluzbaNakl).HasColumnType("LONG");

                entity.Property(e => e.RelSluzbaVykl).HasColumnType("LONG");

                entity.Property(e => e.RelStavOz).HasColumnType("LONG");

                entity.Property(e => e.RelTermDoruc).HasColumnType("LONG");

                entity.Property(e => e.RelTypDoruceni).HasColumnType("LONG");

                entity.Property(e => e.Sluzby)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.StavOz)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Trida).HasColumnType("LONG");

                entity.Property(e => e.UliceZpet)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.VarSym)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VarSymPk)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VelikostX).HasColumnType("LONG");

                entity.Property(e => e.VelikostY).HasColumnType("LONG");

                entity.Property(e => e.VelikostZ).HasColumnType("LONG");

                entity.Property(e => e.ZpusobUhrady).HasColumnType("LONG");

                entity.HasOne(d => d.RefAgNavigation)
                    .WithMany(p => p.ZasilkyPol)
                    .HasForeignKey(d => d.RefAg)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("rZasilkyPol");
            });

            modelBuilder.Entity<ZaucDoklVaz>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasColumnType("COUNTER");

                entity.Property(e => e.RefAg).HasColumnType("LONG");

                entity.Property(e => e.RefDoklZauc).HasColumnType("LONG");

                entity.Property(e => e.RelAgIdDokl).HasColumnType("LONG");

                entity.Property(e => e.RelAgIdZauc).HasColumnType("LONG");
            });
        }
    }
}
